// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2017.1
// Copyright (C) 1986-2017 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#include "opcionA.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic opcionA::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic opcionA::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<4> opcionA::ap_ST_fsm_state1 = "1";
const sc_lv<4> opcionA::ap_ST_fsm_state2 = "10";
const sc_lv<4> opcionA::ap_ST_fsm_state3 = "100";
const sc_lv<4> opcionA::ap_ST_fsm_state4 = "1000";
const sc_lv<1> opcionA::ap_const_lv1_0 = "0";
const sc_lv<1> opcionA::ap_const_lv1_1 = "1";
const sc_lv<2> opcionA::ap_const_lv2_0 = "00";
const sc_lv<2> opcionA::ap_const_lv2_2 = "10";
const sc_lv<2> opcionA::ap_const_lv2_3 = "11";
const sc_lv<2> opcionA::ap_const_lv2_1 = "1";
const sc_lv<32> opcionA::ap_const_lv32_1 = "1";
const sc_lv<32> opcionA::ap_const_lv32_2 = "10";
const sc_lv<32> opcionA::ap_const_lv32_3 = "11";
const bool opcionA::ap_const_boolean_1 = true;

opcionA::opcionA(sc_module_name name) : sc_module(name), mVcdFile(0) {
    grp_write_data_fu_96 = new write_data("grp_write_data_fu_96");
    grp_write_data_fu_96->ap_clk(ap_clk);
    grp_write_data_fu_96->ap_rst(ap_rst_n_inv);
    grp_write_data_fu_96->ap_start(grp_write_data_fu_96_ap_start);
    grp_write_data_fu_96->ap_done(grp_write_data_fu_96_ap_done);
    grp_write_data_fu_96->ap_idle(grp_write_data_fu_96_ap_idle);
    grp_write_data_fu_96->ap_ready(grp_write_data_fu_96_ap_ready);
    grp_write_data_fu_96->buf_0_V_read(dedo0_0_V_reg_194);
    grp_write_data_fu_96->buf_1_V_read(palma0_0_V_reg_199);
    grp_write_data_fu_96->buf_2_V_read(dedo1_0_V_reg_204);
    grp_write_data_fu_96->buf_3_V_read(palma1_0_V_reg_209);
    grp_write_data_fu_96->output_AX_ALG_TDATA(grp_write_data_fu_96_output_AX_ALG_TDATA);
    grp_write_data_fu_96->output_AX_ALG_TVALID(grp_write_data_fu_96_output_AX_ALG_TVALID);
    grp_write_data_fu_96->output_AX_ALG_TREADY(grp_write_data_fu_96_output_AX_ALG_TREADY);
    grp_write_data_fu_96->output_AX_ALG_TKEEP(grp_write_data_fu_96_output_AX_ALG_TKEEP);
    grp_write_data_fu_96->output_AX_ALG_TSTRB(grp_write_data_fu_96_output_AX_ALG_TSTRB);
    grp_write_data_fu_96->output_AX_ALG_TUSER(grp_write_data_fu_96_output_AX_ALG_TUSER);
    grp_write_data_fu_96->output_AX_ALG_TLAST(grp_write_data_fu_96_output_AX_ALG_TLAST);
    grp_write_data_fu_96->output_AX_ALG_TID(grp_write_data_fu_96_output_AX_ALG_TID);
    grp_write_data_fu_96->output_AX_ALG_TDEST(grp_write_data_fu_96_output_AX_ALG_TDEST);
    dedo0_0_V_read_data_fu_118 = new read_data("dedo0_0_V_read_data_fu_118");
    dedo0_0_V_read_data_fu_118->ap_clk(ap_clk);
    dedo0_0_V_read_data_fu_118->ap_rst(ap_rst_n_inv);
    dedo0_0_V_read_data_fu_118->ap_start(dedo0_0_V_read_data_fu_118_ap_start);
    dedo0_0_V_read_data_fu_118->ap_done(dedo0_0_V_read_data_fu_118_ap_done);
    dedo0_0_V_read_data_fu_118->ap_idle(dedo0_0_V_read_data_fu_118_ap_idle);
    dedo0_0_V_read_data_fu_118->ap_ready(dedo0_0_V_read_data_fu_118_ap_ready);
    dedo0_0_V_read_data_fu_118->input_AX_ALGpalma1_TDATA(input_AX_ALGdedo0_data_V_0_data_out);
    dedo0_0_V_read_data_fu_118->input_AX_ALGpalma1_TVALID(dedo0_0_V_read_data_fu_118_input_AX_ALGpalma1_TVALID);
    dedo0_0_V_read_data_fu_118->input_AX_ALGpalma1_TREADY(dedo0_0_V_read_data_fu_118_input_AX_ALGpalma1_TREADY);
    dedo0_0_V_read_data_fu_118->input_AX_ALGpalma1_TKEEP(input_AX_ALGdedo0_keep_V_0_data_out);
    dedo0_0_V_read_data_fu_118->input_AX_ALGpalma1_TSTRB(input_AX_ALGdedo0_strb_V_0_data_out);
    dedo0_0_V_read_data_fu_118->input_AX_ALGpalma1_TUSER(input_AX_ALGdedo0_user_V_0_data_out);
    dedo0_0_V_read_data_fu_118->input_AX_ALGpalma1_TLAST(input_AX_ALGdedo0_last_V_0_data_out);
    dedo0_0_V_read_data_fu_118->input_AX_ALGpalma1_TID(input_AX_ALGdedo0_id_V_0_data_out);
    dedo0_0_V_read_data_fu_118->input_AX_ALGpalma1_TDEST(input_AX_ALGdedo0_dest_V_0_data_out);
    dedo0_0_V_read_data_fu_118->ap_return(dedo0_0_V_read_data_fu_118_ap_return);
    dedo0_0_V_read_data_fu_118->input_AX_ALGpalma1_TDATA_blk_n(dedo0_0_V_read_data_fu_118_input_AX_ALGpalma1_TDATA_blk_n);
    palma0_0_V_read_data_fu_137 = new read_data("palma0_0_V_read_data_fu_137");
    palma0_0_V_read_data_fu_137->ap_clk(ap_clk);
    palma0_0_V_read_data_fu_137->ap_rst(ap_rst_n_inv);
    palma0_0_V_read_data_fu_137->ap_start(palma0_0_V_read_data_fu_137_ap_start);
    palma0_0_V_read_data_fu_137->ap_done(palma0_0_V_read_data_fu_137_ap_done);
    palma0_0_V_read_data_fu_137->ap_idle(palma0_0_V_read_data_fu_137_ap_idle);
    palma0_0_V_read_data_fu_137->ap_ready(palma0_0_V_read_data_fu_137_ap_ready);
    palma0_0_V_read_data_fu_137->input_AX_ALGpalma1_TDATA(input_AX_ALGpalma0_data_V_0_data_out);
    palma0_0_V_read_data_fu_137->input_AX_ALGpalma1_TVALID(palma0_0_V_read_data_fu_137_input_AX_ALGpalma1_TVALID);
    palma0_0_V_read_data_fu_137->input_AX_ALGpalma1_TREADY(palma0_0_V_read_data_fu_137_input_AX_ALGpalma1_TREADY);
    palma0_0_V_read_data_fu_137->input_AX_ALGpalma1_TKEEP(input_AX_ALGpalma0_keep_V_0_data_out);
    palma0_0_V_read_data_fu_137->input_AX_ALGpalma1_TSTRB(input_AX_ALGpalma0_strb_V_0_data_out);
    palma0_0_V_read_data_fu_137->input_AX_ALGpalma1_TUSER(input_AX_ALGpalma0_user_V_0_data_out);
    palma0_0_V_read_data_fu_137->input_AX_ALGpalma1_TLAST(input_AX_ALGpalma0_last_V_0_data_out);
    palma0_0_V_read_data_fu_137->input_AX_ALGpalma1_TID(input_AX_ALGpalma0_id_V_0_data_out);
    palma0_0_V_read_data_fu_137->input_AX_ALGpalma1_TDEST(input_AX_ALGpalma0_dest_V_0_data_out);
    palma0_0_V_read_data_fu_137->ap_return(palma0_0_V_read_data_fu_137_ap_return);
    palma0_0_V_read_data_fu_137->input_AX_ALGpalma1_TDATA_blk_n(palma0_0_V_read_data_fu_137_input_AX_ALGpalma1_TDATA_blk_n);
    dedo1_0_V_read_data_fu_156 = new read_data("dedo1_0_V_read_data_fu_156");
    dedo1_0_V_read_data_fu_156->ap_clk(ap_clk);
    dedo1_0_V_read_data_fu_156->ap_rst(ap_rst_n_inv);
    dedo1_0_V_read_data_fu_156->ap_start(dedo1_0_V_read_data_fu_156_ap_start);
    dedo1_0_V_read_data_fu_156->ap_done(dedo1_0_V_read_data_fu_156_ap_done);
    dedo1_0_V_read_data_fu_156->ap_idle(dedo1_0_V_read_data_fu_156_ap_idle);
    dedo1_0_V_read_data_fu_156->ap_ready(dedo1_0_V_read_data_fu_156_ap_ready);
    dedo1_0_V_read_data_fu_156->input_AX_ALGpalma1_TDATA(input_AX_ALGdedo1_data_V_0_data_out);
    dedo1_0_V_read_data_fu_156->input_AX_ALGpalma1_TVALID(dedo1_0_V_read_data_fu_156_input_AX_ALGpalma1_TVALID);
    dedo1_0_V_read_data_fu_156->input_AX_ALGpalma1_TREADY(dedo1_0_V_read_data_fu_156_input_AX_ALGpalma1_TREADY);
    dedo1_0_V_read_data_fu_156->input_AX_ALGpalma1_TKEEP(input_AX_ALGdedo1_keep_V_0_data_out);
    dedo1_0_V_read_data_fu_156->input_AX_ALGpalma1_TSTRB(input_AX_ALGdedo1_strb_V_0_data_out);
    dedo1_0_V_read_data_fu_156->input_AX_ALGpalma1_TUSER(input_AX_ALGdedo1_user_V_0_data_out);
    dedo1_0_V_read_data_fu_156->input_AX_ALGpalma1_TLAST(input_AX_ALGdedo1_last_V_0_data_out);
    dedo1_0_V_read_data_fu_156->input_AX_ALGpalma1_TID(input_AX_ALGdedo1_id_V_0_data_out);
    dedo1_0_V_read_data_fu_156->input_AX_ALGpalma1_TDEST(input_AX_ALGdedo1_dest_V_0_data_out);
    dedo1_0_V_read_data_fu_156->ap_return(dedo1_0_V_read_data_fu_156_ap_return);
    dedo1_0_V_read_data_fu_156->input_AX_ALGpalma1_TDATA_blk_n(dedo1_0_V_read_data_fu_156_input_AX_ALGpalma1_TDATA_blk_n);
    palma1_0_V_read_data_fu_175 = new read_data("palma1_0_V_read_data_fu_175");
    palma1_0_V_read_data_fu_175->ap_clk(ap_clk);
    palma1_0_V_read_data_fu_175->ap_rst(ap_rst_n_inv);
    palma1_0_V_read_data_fu_175->ap_start(palma1_0_V_read_data_fu_175_ap_start);
    palma1_0_V_read_data_fu_175->ap_done(palma1_0_V_read_data_fu_175_ap_done);
    palma1_0_V_read_data_fu_175->ap_idle(palma1_0_V_read_data_fu_175_ap_idle);
    palma1_0_V_read_data_fu_175->ap_ready(palma1_0_V_read_data_fu_175_ap_ready);
    palma1_0_V_read_data_fu_175->input_AX_ALGpalma1_TDATA(input_AX_ALGpalma1_data_V_0_data_out);
    palma1_0_V_read_data_fu_175->input_AX_ALGpalma1_TVALID(palma1_0_V_read_data_fu_175_input_AX_ALGpalma1_TVALID);
    palma1_0_V_read_data_fu_175->input_AX_ALGpalma1_TREADY(palma1_0_V_read_data_fu_175_input_AX_ALGpalma1_TREADY);
    palma1_0_V_read_data_fu_175->input_AX_ALGpalma1_TKEEP(input_AX_ALGpalma1_keep_V_0_data_out);
    palma1_0_V_read_data_fu_175->input_AX_ALGpalma1_TSTRB(input_AX_ALGpalma1_strb_V_0_data_out);
    palma1_0_V_read_data_fu_175->input_AX_ALGpalma1_TUSER(input_AX_ALGpalma1_user_V_0_data_out);
    palma1_0_V_read_data_fu_175->input_AX_ALGpalma1_TLAST(input_AX_ALGpalma1_last_V_0_data_out);
    palma1_0_V_read_data_fu_175->input_AX_ALGpalma1_TID(input_AX_ALGpalma1_id_V_0_data_out);
    palma1_0_V_read_data_fu_175->input_AX_ALGpalma1_TDEST(input_AX_ALGpalma1_dest_V_0_data_out);
    palma1_0_V_read_data_fu_175->ap_return(palma1_0_V_read_data_fu_175_ap_return);
    palma1_0_V_read_data_fu_175->input_AX_ALGpalma1_TDATA_blk_n(palma1_0_V_read_data_fu_175_input_AX_ALGpalma1_TDATA_blk_n);

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_ap_CS_fsm_state2);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state3);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state4);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_block_state2);
    sensitive << ( dedo0_0_V_read_data_fu_118_input_AX_ALGpalma1_TDATA_blk_n );
    sensitive << ( palma0_0_V_read_data_fu_137_input_AX_ALGpalma1_TDATA_blk_n );
    sensitive << ( dedo1_0_V_read_data_fu_156_input_AX_ALGpalma1_TDATA_blk_n );
    sensitive << ( palma1_0_V_read_data_fu_175_input_AX_ALGpalma1_TDATA_blk_n );

    SC_METHOD(thread_ap_block_state2_ignore_call42);
    sensitive << ( palma0_0_V_read_data_fu_137_input_AX_ALGpalma1_TDATA_blk_n );
    sensitive << ( dedo1_0_V_read_data_fu_156_input_AX_ALGpalma1_TDATA_blk_n );
    sensitive << ( palma1_0_V_read_data_fu_175_input_AX_ALGpalma1_TDATA_blk_n );

    SC_METHOD(thread_ap_block_state2_ignore_call43);
    sensitive << ( dedo0_0_V_read_data_fu_118_input_AX_ALGpalma1_TDATA_blk_n );
    sensitive << ( dedo1_0_V_read_data_fu_156_input_AX_ALGpalma1_TDATA_blk_n );
    sensitive << ( palma1_0_V_read_data_fu_175_input_AX_ALGpalma1_TDATA_blk_n );

    SC_METHOD(thread_ap_block_state2_ignore_call44);
    sensitive << ( dedo0_0_V_read_data_fu_118_input_AX_ALGpalma1_TDATA_blk_n );
    sensitive << ( palma0_0_V_read_data_fu_137_input_AX_ALGpalma1_TDATA_blk_n );
    sensitive << ( palma1_0_V_read_data_fu_175_input_AX_ALGpalma1_TDATA_blk_n );

    SC_METHOD(thread_ap_block_state2_ignore_call45);
    sensitive << ( dedo0_0_V_read_data_fu_118_input_AX_ALGpalma1_TDATA_blk_n );
    sensitive << ( palma0_0_V_read_data_fu_137_input_AX_ALGpalma1_TDATA_blk_n );
    sensitive << ( dedo1_0_V_read_data_fu_156_input_AX_ALGpalma1_TDATA_blk_n );

    SC_METHOD(thread_ap_block_state2_ignore_call46);
    sensitive << ( dedo0_0_V_read_data_fu_118_input_AX_ALGpalma1_TDATA_blk_n );
    sensitive << ( palma0_0_V_read_data_fu_137_input_AX_ALGpalma1_TDATA_blk_n );
    sensitive << ( dedo1_0_V_read_data_fu_156_input_AX_ALGpalma1_TDATA_blk_n );
    sensitive << ( palma1_0_V_read_data_fu_175_input_AX_ALGpalma1_TDATA_blk_n );

    SC_METHOD(thread_ap_block_state4);
    sensitive << ( output_AX_ALG_data_V_1_ack_in );
    sensitive << ( output_AX_ALG_keep_V_1_ack_in );
    sensitive << ( output_AX_ALG_strb_V_1_ack_in );
    sensitive << ( output_AX_ALG_user_V_1_ack_in );
    sensitive << ( output_AX_ALG_last_V_1_ack_in );
    sensitive << ( output_AX_ALG_id_V_1_ack_in );
    sensitive << ( output_AX_ALG_dest_V_1_ack_in );

    SC_METHOD(thread_ap_rst_n_inv);
    sensitive << ( ap_rst_n );

    SC_METHOD(thread_dedo0_0_V_read_data_fu_118_ap_start);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( palma0_0_V_read_data_fu_137_input_AX_ALGpalma1_TDATA_blk_n );
    sensitive << ( dedo1_0_V_read_data_fu_156_input_AX_ALGpalma1_TDATA_blk_n );
    sensitive << ( palma1_0_V_read_data_fu_175_input_AX_ALGpalma1_TDATA_blk_n );

    SC_METHOD(thread_dedo0_0_V_read_data_fu_118_input_AX_ALGpalma1_TVALID);
    sensitive << ( input_AX_ALGdedo0_dest_V_0_state );

    SC_METHOD(thread_dedo1_0_V_read_data_fu_156_ap_start);
    sensitive << ( dedo0_0_V_read_data_fu_118_input_AX_ALGpalma1_TDATA_blk_n );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( palma0_0_V_read_data_fu_137_input_AX_ALGpalma1_TDATA_blk_n );
    sensitive << ( palma1_0_V_read_data_fu_175_input_AX_ALGpalma1_TDATA_blk_n );

    SC_METHOD(thread_dedo1_0_V_read_data_fu_156_input_AX_ALGpalma1_TVALID);
    sensitive << ( input_AX_ALGdedo1_dest_V_0_state );

    SC_METHOD(thread_grp_write_data_fu_96_ap_start);
    sensitive << ( ap_reg_grp_write_data_fu_96_ap_start );

    SC_METHOD(thread_grp_write_data_fu_96_output_AX_ALG_TREADY);
    sensitive << ( output_AX_ALG_dest_V_1_state );

    SC_METHOD(thread_input_AX_ALGdedo0_TDATA_blk_n);
    sensitive << ( dedo0_0_V_read_data_fu_118_input_AX_ALGpalma1_TDATA_blk_n );
    sensitive << ( ap_CS_fsm_state2 );

    SC_METHOD(thread_input_AX_ALGdedo0_TREADY);
    sensitive << ( input_AX_ALGdedo0_dest_V_0_state );

    SC_METHOD(thread_input_AX_ALGdedo0_data_V_0_ack_in);
    sensitive << ( input_AX_ALGdedo0_data_V_0_state );

    SC_METHOD(thread_input_AX_ALGdedo0_data_V_0_ack_out);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( dedo0_0_V_read_data_fu_118_input_AX_ALGpalma1_TREADY );

    SC_METHOD(thread_input_AX_ALGdedo0_data_V_0_data_out);
    sensitive << ( input_AX_ALGdedo0_data_V_0_payload_A );
    sensitive << ( input_AX_ALGdedo0_data_V_0_payload_B );
    sensitive << ( input_AX_ALGdedo0_data_V_0_sel );

    SC_METHOD(thread_input_AX_ALGdedo0_data_V_0_load_A);
    sensitive << ( input_AX_ALGdedo0_data_V_0_sel_wr );
    sensitive << ( input_AX_ALGdedo0_data_V_0_state_cmp_full );

    SC_METHOD(thread_input_AX_ALGdedo0_data_V_0_load_B);
    sensitive << ( input_AX_ALGdedo0_data_V_0_sel_wr );
    sensitive << ( input_AX_ALGdedo0_data_V_0_state_cmp_full );

    SC_METHOD(thread_input_AX_ALGdedo0_data_V_0_sel);
    sensitive << ( input_AX_ALGdedo0_data_V_0_sel_rd );

    SC_METHOD(thread_input_AX_ALGdedo0_data_V_0_state_cmp_full);
    sensitive << ( input_AX_ALGdedo0_data_V_0_state );

    SC_METHOD(thread_input_AX_ALGdedo0_data_V_0_vld_in);
    sensitive << ( input_AX_ALGdedo0_TVALID );

    SC_METHOD(thread_input_AX_ALGdedo0_data_V_0_vld_out);
    sensitive << ( input_AX_ALGdedo0_data_V_0_state );

    SC_METHOD(thread_input_AX_ALGdedo0_dest_V_0_ack_in);
    sensitive << ( input_AX_ALGdedo0_dest_V_0_state );

    SC_METHOD(thread_input_AX_ALGdedo0_dest_V_0_ack_out);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( dedo0_0_V_read_data_fu_118_input_AX_ALGpalma1_TREADY );

    SC_METHOD(thread_input_AX_ALGdedo0_dest_V_0_data_out);
    sensitive << ( input_AX_ALGdedo0_dest_V_0_payload_A );
    sensitive << ( input_AX_ALGdedo0_dest_V_0_payload_B );
    sensitive << ( input_AX_ALGdedo0_dest_V_0_sel );

    SC_METHOD(thread_input_AX_ALGdedo0_dest_V_0_load_A);
    sensitive << ( input_AX_ALGdedo0_dest_V_0_sel_wr );
    sensitive << ( input_AX_ALGdedo0_dest_V_0_state_cmp_full );

    SC_METHOD(thread_input_AX_ALGdedo0_dest_V_0_load_B);
    sensitive << ( input_AX_ALGdedo0_dest_V_0_sel_wr );
    sensitive << ( input_AX_ALGdedo0_dest_V_0_state_cmp_full );

    SC_METHOD(thread_input_AX_ALGdedo0_dest_V_0_sel);
    sensitive << ( input_AX_ALGdedo0_dest_V_0_sel_rd );

    SC_METHOD(thread_input_AX_ALGdedo0_dest_V_0_state_cmp_full);
    sensitive << ( input_AX_ALGdedo0_dest_V_0_state );

    SC_METHOD(thread_input_AX_ALGdedo0_dest_V_0_vld_in);
    sensitive << ( input_AX_ALGdedo0_TVALID );

    SC_METHOD(thread_input_AX_ALGdedo0_dest_V_0_vld_out);
    sensitive << ( input_AX_ALGdedo0_dest_V_0_state );

    SC_METHOD(thread_input_AX_ALGdedo0_id_V_0_ack_in);
    sensitive << ( input_AX_ALGdedo0_id_V_0_state );

    SC_METHOD(thread_input_AX_ALGdedo0_id_V_0_ack_out);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( dedo0_0_V_read_data_fu_118_input_AX_ALGpalma1_TREADY );

    SC_METHOD(thread_input_AX_ALGdedo0_id_V_0_data_out);
    sensitive << ( input_AX_ALGdedo0_id_V_0_payload_A );
    sensitive << ( input_AX_ALGdedo0_id_V_0_payload_B );
    sensitive << ( input_AX_ALGdedo0_id_V_0_sel );

    SC_METHOD(thread_input_AX_ALGdedo0_id_V_0_load_A);
    sensitive << ( input_AX_ALGdedo0_id_V_0_sel_wr );
    sensitive << ( input_AX_ALGdedo0_id_V_0_state_cmp_full );

    SC_METHOD(thread_input_AX_ALGdedo0_id_V_0_load_B);
    sensitive << ( input_AX_ALGdedo0_id_V_0_sel_wr );
    sensitive << ( input_AX_ALGdedo0_id_V_0_state_cmp_full );

    SC_METHOD(thread_input_AX_ALGdedo0_id_V_0_sel);
    sensitive << ( input_AX_ALGdedo0_id_V_0_sel_rd );

    SC_METHOD(thread_input_AX_ALGdedo0_id_V_0_state_cmp_full);
    sensitive << ( input_AX_ALGdedo0_id_V_0_state );

    SC_METHOD(thread_input_AX_ALGdedo0_id_V_0_vld_in);
    sensitive << ( input_AX_ALGdedo0_TVALID );

    SC_METHOD(thread_input_AX_ALGdedo0_id_V_0_vld_out);
    sensitive << ( input_AX_ALGdedo0_id_V_0_state );

    SC_METHOD(thread_input_AX_ALGdedo0_keep_V_0_ack_in);
    sensitive << ( input_AX_ALGdedo0_keep_V_0_state );

    SC_METHOD(thread_input_AX_ALGdedo0_keep_V_0_ack_out);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( dedo0_0_V_read_data_fu_118_input_AX_ALGpalma1_TREADY );

    SC_METHOD(thread_input_AX_ALGdedo0_keep_V_0_data_out);
    sensitive << ( input_AX_ALGdedo0_keep_V_0_payload_A );
    sensitive << ( input_AX_ALGdedo0_keep_V_0_payload_B );
    sensitive << ( input_AX_ALGdedo0_keep_V_0_sel );

    SC_METHOD(thread_input_AX_ALGdedo0_keep_V_0_load_A);
    sensitive << ( input_AX_ALGdedo0_keep_V_0_sel_wr );
    sensitive << ( input_AX_ALGdedo0_keep_V_0_state_cmp_full );

    SC_METHOD(thread_input_AX_ALGdedo0_keep_V_0_load_B);
    sensitive << ( input_AX_ALGdedo0_keep_V_0_sel_wr );
    sensitive << ( input_AX_ALGdedo0_keep_V_0_state_cmp_full );

    SC_METHOD(thread_input_AX_ALGdedo0_keep_V_0_sel);
    sensitive << ( input_AX_ALGdedo0_keep_V_0_sel_rd );

    SC_METHOD(thread_input_AX_ALGdedo0_keep_V_0_state_cmp_full);
    sensitive << ( input_AX_ALGdedo0_keep_V_0_state );

    SC_METHOD(thread_input_AX_ALGdedo0_keep_V_0_vld_in);
    sensitive << ( input_AX_ALGdedo0_TVALID );

    SC_METHOD(thread_input_AX_ALGdedo0_keep_V_0_vld_out);
    sensitive << ( input_AX_ALGdedo0_keep_V_0_state );

    SC_METHOD(thread_input_AX_ALGdedo0_last_V_0_ack_in);
    sensitive << ( input_AX_ALGdedo0_last_V_0_state );

    SC_METHOD(thread_input_AX_ALGdedo0_last_V_0_ack_out);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( dedo0_0_V_read_data_fu_118_input_AX_ALGpalma1_TREADY );

    SC_METHOD(thread_input_AX_ALGdedo0_last_V_0_data_out);
    sensitive << ( input_AX_ALGdedo0_last_V_0_payload_A );
    sensitive << ( input_AX_ALGdedo0_last_V_0_payload_B );
    sensitive << ( input_AX_ALGdedo0_last_V_0_sel );

    SC_METHOD(thread_input_AX_ALGdedo0_last_V_0_load_A);
    sensitive << ( input_AX_ALGdedo0_last_V_0_sel_wr );
    sensitive << ( input_AX_ALGdedo0_last_V_0_state_cmp_full );

    SC_METHOD(thread_input_AX_ALGdedo0_last_V_0_load_B);
    sensitive << ( input_AX_ALGdedo0_last_V_0_sel_wr );
    sensitive << ( input_AX_ALGdedo0_last_V_0_state_cmp_full );

    SC_METHOD(thread_input_AX_ALGdedo0_last_V_0_sel);
    sensitive << ( input_AX_ALGdedo0_last_V_0_sel_rd );

    SC_METHOD(thread_input_AX_ALGdedo0_last_V_0_state_cmp_full);
    sensitive << ( input_AX_ALGdedo0_last_V_0_state );

    SC_METHOD(thread_input_AX_ALGdedo0_last_V_0_vld_in);
    sensitive << ( input_AX_ALGdedo0_TVALID );

    SC_METHOD(thread_input_AX_ALGdedo0_last_V_0_vld_out);
    sensitive << ( input_AX_ALGdedo0_last_V_0_state );

    SC_METHOD(thread_input_AX_ALGdedo0_strb_V_0_ack_in);
    sensitive << ( input_AX_ALGdedo0_strb_V_0_state );

    SC_METHOD(thread_input_AX_ALGdedo0_strb_V_0_ack_out);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( dedo0_0_V_read_data_fu_118_input_AX_ALGpalma1_TREADY );

    SC_METHOD(thread_input_AX_ALGdedo0_strb_V_0_data_out);
    sensitive << ( input_AX_ALGdedo0_strb_V_0_payload_A );
    sensitive << ( input_AX_ALGdedo0_strb_V_0_payload_B );
    sensitive << ( input_AX_ALGdedo0_strb_V_0_sel );

    SC_METHOD(thread_input_AX_ALGdedo0_strb_V_0_load_A);
    sensitive << ( input_AX_ALGdedo0_strb_V_0_sel_wr );
    sensitive << ( input_AX_ALGdedo0_strb_V_0_state_cmp_full );

    SC_METHOD(thread_input_AX_ALGdedo0_strb_V_0_load_B);
    sensitive << ( input_AX_ALGdedo0_strb_V_0_sel_wr );
    sensitive << ( input_AX_ALGdedo0_strb_V_0_state_cmp_full );

    SC_METHOD(thread_input_AX_ALGdedo0_strb_V_0_sel);
    sensitive << ( input_AX_ALGdedo0_strb_V_0_sel_rd );

    SC_METHOD(thread_input_AX_ALGdedo0_strb_V_0_state_cmp_full);
    sensitive << ( input_AX_ALGdedo0_strb_V_0_state );

    SC_METHOD(thread_input_AX_ALGdedo0_strb_V_0_vld_in);
    sensitive << ( input_AX_ALGdedo0_TVALID );

    SC_METHOD(thread_input_AX_ALGdedo0_strb_V_0_vld_out);
    sensitive << ( input_AX_ALGdedo0_strb_V_0_state );

    SC_METHOD(thread_input_AX_ALGdedo0_user_V_0_ack_in);
    sensitive << ( input_AX_ALGdedo0_user_V_0_state );

    SC_METHOD(thread_input_AX_ALGdedo0_user_V_0_ack_out);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( dedo0_0_V_read_data_fu_118_input_AX_ALGpalma1_TREADY );

    SC_METHOD(thread_input_AX_ALGdedo0_user_V_0_data_out);
    sensitive << ( input_AX_ALGdedo0_user_V_0_payload_A );
    sensitive << ( input_AX_ALGdedo0_user_V_0_payload_B );
    sensitive << ( input_AX_ALGdedo0_user_V_0_sel );

    SC_METHOD(thread_input_AX_ALGdedo0_user_V_0_load_A);
    sensitive << ( input_AX_ALGdedo0_user_V_0_sel_wr );
    sensitive << ( input_AX_ALGdedo0_user_V_0_state_cmp_full );

    SC_METHOD(thread_input_AX_ALGdedo0_user_V_0_load_B);
    sensitive << ( input_AX_ALGdedo0_user_V_0_sel_wr );
    sensitive << ( input_AX_ALGdedo0_user_V_0_state_cmp_full );

    SC_METHOD(thread_input_AX_ALGdedo0_user_V_0_sel);
    sensitive << ( input_AX_ALGdedo0_user_V_0_sel_rd );

    SC_METHOD(thread_input_AX_ALGdedo0_user_V_0_state_cmp_full);
    sensitive << ( input_AX_ALGdedo0_user_V_0_state );

    SC_METHOD(thread_input_AX_ALGdedo0_user_V_0_vld_in);
    sensitive << ( input_AX_ALGdedo0_TVALID );

    SC_METHOD(thread_input_AX_ALGdedo0_user_V_0_vld_out);
    sensitive << ( input_AX_ALGdedo0_user_V_0_state );

    SC_METHOD(thread_input_AX_ALGdedo1_TDATA_blk_n);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( dedo1_0_V_read_data_fu_156_input_AX_ALGpalma1_TDATA_blk_n );

    SC_METHOD(thread_input_AX_ALGdedo1_TREADY);
    sensitive << ( input_AX_ALGdedo1_dest_V_0_state );

    SC_METHOD(thread_input_AX_ALGdedo1_data_V_0_ack_in);
    sensitive << ( input_AX_ALGdedo1_data_V_0_state );

    SC_METHOD(thread_input_AX_ALGdedo1_data_V_0_ack_out);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( dedo1_0_V_read_data_fu_156_input_AX_ALGpalma1_TREADY );

    SC_METHOD(thread_input_AX_ALGdedo1_data_V_0_data_out);
    sensitive << ( input_AX_ALGdedo1_data_V_0_payload_A );
    sensitive << ( input_AX_ALGdedo1_data_V_0_payload_B );
    sensitive << ( input_AX_ALGdedo1_data_V_0_sel );

    SC_METHOD(thread_input_AX_ALGdedo1_data_V_0_load_A);
    sensitive << ( input_AX_ALGdedo1_data_V_0_sel_wr );
    sensitive << ( input_AX_ALGdedo1_data_V_0_state_cmp_full );

    SC_METHOD(thread_input_AX_ALGdedo1_data_V_0_load_B);
    sensitive << ( input_AX_ALGdedo1_data_V_0_sel_wr );
    sensitive << ( input_AX_ALGdedo1_data_V_0_state_cmp_full );

    SC_METHOD(thread_input_AX_ALGdedo1_data_V_0_sel);
    sensitive << ( input_AX_ALGdedo1_data_V_0_sel_rd );

    SC_METHOD(thread_input_AX_ALGdedo1_data_V_0_state_cmp_full);
    sensitive << ( input_AX_ALGdedo1_data_V_0_state );

    SC_METHOD(thread_input_AX_ALGdedo1_data_V_0_vld_in);
    sensitive << ( input_AX_ALGdedo1_TVALID );

    SC_METHOD(thread_input_AX_ALGdedo1_data_V_0_vld_out);
    sensitive << ( input_AX_ALGdedo1_data_V_0_state );

    SC_METHOD(thread_input_AX_ALGdedo1_dest_V_0_ack_in);
    sensitive << ( input_AX_ALGdedo1_dest_V_0_state );

    SC_METHOD(thread_input_AX_ALGdedo1_dest_V_0_ack_out);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( dedo1_0_V_read_data_fu_156_input_AX_ALGpalma1_TREADY );

    SC_METHOD(thread_input_AX_ALGdedo1_dest_V_0_data_out);
    sensitive << ( input_AX_ALGdedo1_dest_V_0_payload_A );
    sensitive << ( input_AX_ALGdedo1_dest_V_0_payload_B );
    sensitive << ( input_AX_ALGdedo1_dest_V_0_sel );

    SC_METHOD(thread_input_AX_ALGdedo1_dest_V_0_load_A);
    sensitive << ( input_AX_ALGdedo1_dest_V_0_sel_wr );
    sensitive << ( input_AX_ALGdedo1_dest_V_0_state_cmp_full );

    SC_METHOD(thread_input_AX_ALGdedo1_dest_V_0_load_B);
    sensitive << ( input_AX_ALGdedo1_dest_V_0_sel_wr );
    sensitive << ( input_AX_ALGdedo1_dest_V_0_state_cmp_full );

    SC_METHOD(thread_input_AX_ALGdedo1_dest_V_0_sel);
    sensitive << ( input_AX_ALGdedo1_dest_V_0_sel_rd );

    SC_METHOD(thread_input_AX_ALGdedo1_dest_V_0_state_cmp_full);
    sensitive << ( input_AX_ALGdedo1_dest_V_0_state );

    SC_METHOD(thread_input_AX_ALGdedo1_dest_V_0_vld_in);
    sensitive << ( input_AX_ALGdedo1_TVALID );

    SC_METHOD(thread_input_AX_ALGdedo1_dest_V_0_vld_out);
    sensitive << ( input_AX_ALGdedo1_dest_V_0_state );

    SC_METHOD(thread_input_AX_ALGdedo1_id_V_0_ack_in);
    sensitive << ( input_AX_ALGdedo1_id_V_0_state );

    SC_METHOD(thread_input_AX_ALGdedo1_id_V_0_ack_out);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( dedo1_0_V_read_data_fu_156_input_AX_ALGpalma1_TREADY );

    SC_METHOD(thread_input_AX_ALGdedo1_id_V_0_data_out);
    sensitive << ( input_AX_ALGdedo1_id_V_0_payload_A );
    sensitive << ( input_AX_ALGdedo1_id_V_0_payload_B );
    sensitive << ( input_AX_ALGdedo1_id_V_0_sel );

    SC_METHOD(thread_input_AX_ALGdedo1_id_V_0_load_A);
    sensitive << ( input_AX_ALGdedo1_id_V_0_sel_wr );
    sensitive << ( input_AX_ALGdedo1_id_V_0_state_cmp_full );

    SC_METHOD(thread_input_AX_ALGdedo1_id_V_0_load_B);
    sensitive << ( input_AX_ALGdedo1_id_V_0_sel_wr );
    sensitive << ( input_AX_ALGdedo1_id_V_0_state_cmp_full );

    SC_METHOD(thread_input_AX_ALGdedo1_id_V_0_sel);
    sensitive << ( input_AX_ALGdedo1_id_V_0_sel_rd );

    SC_METHOD(thread_input_AX_ALGdedo1_id_V_0_state_cmp_full);
    sensitive << ( input_AX_ALGdedo1_id_V_0_state );

    SC_METHOD(thread_input_AX_ALGdedo1_id_V_0_vld_in);
    sensitive << ( input_AX_ALGdedo1_TVALID );

    SC_METHOD(thread_input_AX_ALGdedo1_id_V_0_vld_out);
    sensitive << ( input_AX_ALGdedo1_id_V_0_state );

    SC_METHOD(thread_input_AX_ALGdedo1_keep_V_0_ack_in);
    sensitive << ( input_AX_ALGdedo1_keep_V_0_state );

    SC_METHOD(thread_input_AX_ALGdedo1_keep_V_0_ack_out);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( dedo1_0_V_read_data_fu_156_input_AX_ALGpalma1_TREADY );

    SC_METHOD(thread_input_AX_ALGdedo1_keep_V_0_data_out);
    sensitive << ( input_AX_ALGdedo1_keep_V_0_payload_A );
    sensitive << ( input_AX_ALGdedo1_keep_V_0_payload_B );
    sensitive << ( input_AX_ALGdedo1_keep_V_0_sel );

    SC_METHOD(thread_input_AX_ALGdedo1_keep_V_0_load_A);
    sensitive << ( input_AX_ALGdedo1_keep_V_0_sel_wr );
    sensitive << ( input_AX_ALGdedo1_keep_V_0_state_cmp_full );

    SC_METHOD(thread_input_AX_ALGdedo1_keep_V_0_load_B);
    sensitive << ( input_AX_ALGdedo1_keep_V_0_sel_wr );
    sensitive << ( input_AX_ALGdedo1_keep_V_0_state_cmp_full );

    SC_METHOD(thread_input_AX_ALGdedo1_keep_V_0_sel);
    sensitive << ( input_AX_ALGdedo1_keep_V_0_sel_rd );

    SC_METHOD(thread_input_AX_ALGdedo1_keep_V_0_state_cmp_full);
    sensitive << ( input_AX_ALGdedo1_keep_V_0_state );

    SC_METHOD(thread_input_AX_ALGdedo1_keep_V_0_vld_in);
    sensitive << ( input_AX_ALGdedo1_TVALID );

    SC_METHOD(thread_input_AX_ALGdedo1_keep_V_0_vld_out);
    sensitive << ( input_AX_ALGdedo1_keep_V_0_state );

    SC_METHOD(thread_input_AX_ALGdedo1_last_V_0_ack_in);
    sensitive << ( input_AX_ALGdedo1_last_V_0_state );

    SC_METHOD(thread_input_AX_ALGdedo1_last_V_0_ack_out);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( dedo1_0_V_read_data_fu_156_input_AX_ALGpalma1_TREADY );

    SC_METHOD(thread_input_AX_ALGdedo1_last_V_0_data_out);
    sensitive << ( input_AX_ALGdedo1_last_V_0_payload_A );
    sensitive << ( input_AX_ALGdedo1_last_V_0_payload_B );
    sensitive << ( input_AX_ALGdedo1_last_V_0_sel );

    SC_METHOD(thread_input_AX_ALGdedo1_last_V_0_load_A);
    sensitive << ( input_AX_ALGdedo1_last_V_0_sel_wr );
    sensitive << ( input_AX_ALGdedo1_last_V_0_state_cmp_full );

    SC_METHOD(thread_input_AX_ALGdedo1_last_V_0_load_B);
    sensitive << ( input_AX_ALGdedo1_last_V_0_sel_wr );
    sensitive << ( input_AX_ALGdedo1_last_V_0_state_cmp_full );

    SC_METHOD(thread_input_AX_ALGdedo1_last_V_0_sel);
    sensitive << ( input_AX_ALGdedo1_last_V_0_sel_rd );

    SC_METHOD(thread_input_AX_ALGdedo1_last_V_0_state_cmp_full);
    sensitive << ( input_AX_ALGdedo1_last_V_0_state );

    SC_METHOD(thread_input_AX_ALGdedo1_last_V_0_vld_in);
    sensitive << ( input_AX_ALGdedo1_TVALID );

    SC_METHOD(thread_input_AX_ALGdedo1_last_V_0_vld_out);
    sensitive << ( input_AX_ALGdedo1_last_V_0_state );

    SC_METHOD(thread_input_AX_ALGdedo1_strb_V_0_ack_in);
    sensitive << ( input_AX_ALGdedo1_strb_V_0_state );

    SC_METHOD(thread_input_AX_ALGdedo1_strb_V_0_ack_out);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( dedo1_0_V_read_data_fu_156_input_AX_ALGpalma1_TREADY );

    SC_METHOD(thread_input_AX_ALGdedo1_strb_V_0_data_out);
    sensitive << ( input_AX_ALGdedo1_strb_V_0_payload_A );
    sensitive << ( input_AX_ALGdedo1_strb_V_0_payload_B );
    sensitive << ( input_AX_ALGdedo1_strb_V_0_sel );

    SC_METHOD(thread_input_AX_ALGdedo1_strb_V_0_load_A);
    sensitive << ( input_AX_ALGdedo1_strb_V_0_sel_wr );
    sensitive << ( input_AX_ALGdedo1_strb_V_0_state_cmp_full );

    SC_METHOD(thread_input_AX_ALGdedo1_strb_V_0_load_B);
    sensitive << ( input_AX_ALGdedo1_strb_V_0_sel_wr );
    sensitive << ( input_AX_ALGdedo1_strb_V_0_state_cmp_full );

    SC_METHOD(thread_input_AX_ALGdedo1_strb_V_0_sel);
    sensitive << ( input_AX_ALGdedo1_strb_V_0_sel_rd );

    SC_METHOD(thread_input_AX_ALGdedo1_strb_V_0_state_cmp_full);
    sensitive << ( input_AX_ALGdedo1_strb_V_0_state );

    SC_METHOD(thread_input_AX_ALGdedo1_strb_V_0_vld_in);
    sensitive << ( input_AX_ALGdedo1_TVALID );

    SC_METHOD(thread_input_AX_ALGdedo1_strb_V_0_vld_out);
    sensitive << ( input_AX_ALGdedo1_strb_V_0_state );

    SC_METHOD(thread_input_AX_ALGdedo1_user_V_0_ack_in);
    sensitive << ( input_AX_ALGdedo1_user_V_0_state );

    SC_METHOD(thread_input_AX_ALGdedo1_user_V_0_ack_out);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( dedo1_0_V_read_data_fu_156_input_AX_ALGpalma1_TREADY );

    SC_METHOD(thread_input_AX_ALGdedo1_user_V_0_data_out);
    sensitive << ( input_AX_ALGdedo1_user_V_0_payload_A );
    sensitive << ( input_AX_ALGdedo1_user_V_0_payload_B );
    sensitive << ( input_AX_ALGdedo1_user_V_0_sel );

    SC_METHOD(thread_input_AX_ALGdedo1_user_V_0_load_A);
    sensitive << ( input_AX_ALGdedo1_user_V_0_sel_wr );
    sensitive << ( input_AX_ALGdedo1_user_V_0_state_cmp_full );

    SC_METHOD(thread_input_AX_ALGdedo1_user_V_0_load_B);
    sensitive << ( input_AX_ALGdedo1_user_V_0_sel_wr );
    sensitive << ( input_AX_ALGdedo1_user_V_0_state_cmp_full );

    SC_METHOD(thread_input_AX_ALGdedo1_user_V_0_sel);
    sensitive << ( input_AX_ALGdedo1_user_V_0_sel_rd );

    SC_METHOD(thread_input_AX_ALGdedo1_user_V_0_state_cmp_full);
    sensitive << ( input_AX_ALGdedo1_user_V_0_state );

    SC_METHOD(thread_input_AX_ALGdedo1_user_V_0_vld_in);
    sensitive << ( input_AX_ALGdedo1_TVALID );

    SC_METHOD(thread_input_AX_ALGdedo1_user_V_0_vld_out);
    sensitive << ( input_AX_ALGdedo1_user_V_0_state );

    SC_METHOD(thread_input_AX_ALGpalma0_TDATA_blk_n);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( palma0_0_V_read_data_fu_137_input_AX_ALGpalma1_TDATA_blk_n );

    SC_METHOD(thread_input_AX_ALGpalma0_TREADY);
    sensitive << ( input_AX_ALGpalma0_dest_V_0_state );

    SC_METHOD(thread_input_AX_ALGpalma0_data_V_0_ack_in);
    sensitive << ( input_AX_ALGpalma0_data_V_0_state );

    SC_METHOD(thread_input_AX_ALGpalma0_data_V_0_ack_out);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( palma0_0_V_read_data_fu_137_input_AX_ALGpalma1_TREADY );

    SC_METHOD(thread_input_AX_ALGpalma0_data_V_0_data_out);
    sensitive << ( input_AX_ALGpalma0_data_V_0_payload_A );
    sensitive << ( input_AX_ALGpalma0_data_V_0_payload_B );
    sensitive << ( input_AX_ALGpalma0_data_V_0_sel );

    SC_METHOD(thread_input_AX_ALGpalma0_data_V_0_load_A);
    sensitive << ( input_AX_ALGpalma0_data_V_0_sel_wr );
    sensitive << ( input_AX_ALGpalma0_data_V_0_state_cmp_full );

    SC_METHOD(thread_input_AX_ALGpalma0_data_V_0_load_B);
    sensitive << ( input_AX_ALGpalma0_data_V_0_sel_wr );
    sensitive << ( input_AX_ALGpalma0_data_V_0_state_cmp_full );

    SC_METHOD(thread_input_AX_ALGpalma0_data_V_0_sel);
    sensitive << ( input_AX_ALGpalma0_data_V_0_sel_rd );

    SC_METHOD(thread_input_AX_ALGpalma0_data_V_0_state_cmp_full);
    sensitive << ( input_AX_ALGpalma0_data_V_0_state );

    SC_METHOD(thread_input_AX_ALGpalma0_data_V_0_vld_in);
    sensitive << ( input_AX_ALGpalma0_TVALID );

    SC_METHOD(thread_input_AX_ALGpalma0_data_V_0_vld_out);
    sensitive << ( input_AX_ALGpalma0_data_V_0_state );

    SC_METHOD(thread_input_AX_ALGpalma0_dest_V_0_ack_in);
    sensitive << ( input_AX_ALGpalma0_dest_V_0_state );

    SC_METHOD(thread_input_AX_ALGpalma0_dest_V_0_ack_out);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( palma0_0_V_read_data_fu_137_input_AX_ALGpalma1_TREADY );

    SC_METHOD(thread_input_AX_ALGpalma0_dest_V_0_data_out);
    sensitive << ( input_AX_ALGpalma0_dest_V_0_payload_A );
    sensitive << ( input_AX_ALGpalma0_dest_V_0_payload_B );
    sensitive << ( input_AX_ALGpalma0_dest_V_0_sel );

    SC_METHOD(thread_input_AX_ALGpalma0_dest_V_0_load_A);
    sensitive << ( input_AX_ALGpalma0_dest_V_0_sel_wr );
    sensitive << ( input_AX_ALGpalma0_dest_V_0_state_cmp_full );

    SC_METHOD(thread_input_AX_ALGpalma0_dest_V_0_load_B);
    sensitive << ( input_AX_ALGpalma0_dest_V_0_sel_wr );
    sensitive << ( input_AX_ALGpalma0_dest_V_0_state_cmp_full );

    SC_METHOD(thread_input_AX_ALGpalma0_dest_V_0_sel);
    sensitive << ( input_AX_ALGpalma0_dest_V_0_sel_rd );

    SC_METHOD(thread_input_AX_ALGpalma0_dest_V_0_state_cmp_full);
    sensitive << ( input_AX_ALGpalma0_dest_V_0_state );

    SC_METHOD(thread_input_AX_ALGpalma0_dest_V_0_vld_in);
    sensitive << ( input_AX_ALGpalma0_TVALID );

    SC_METHOD(thread_input_AX_ALGpalma0_dest_V_0_vld_out);
    sensitive << ( input_AX_ALGpalma0_dest_V_0_state );

    SC_METHOD(thread_input_AX_ALGpalma0_id_V_0_ack_in);
    sensitive << ( input_AX_ALGpalma0_id_V_0_state );

    SC_METHOD(thread_input_AX_ALGpalma0_id_V_0_ack_out);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( palma0_0_V_read_data_fu_137_input_AX_ALGpalma1_TREADY );

    SC_METHOD(thread_input_AX_ALGpalma0_id_V_0_data_out);
    sensitive << ( input_AX_ALGpalma0_id_V_0_payload_A );
    sensitive << ( input_AX_ALGpalma0_id_V_0_payload_B );
    sensitive << ( input_AX_ALGpalma0_id_V_0_sel );

    SC_METHOD(thread_input_AX_ALGpalma0_id_V_0_load_A);
    sensitive << ( input_AX_ALGpalma0_id_V_0_sel_wr );
    sensitive << ( input_AX_ALGpalma0_id_V_0_state_cmp_full );

    SC_METHOD(thread_input_AX_ALGpalma0_id_V_0_load_B);
    sensitive << ( input_AX_ALGpalma0_id_V_0_sel_wr );
    sensitive << ( input_AX_ALGpalma0_id_V_0_state_cmp_full );

    SC_METHOD(thread_input_AX_ALGpalma0_id_V_0_sel);
    sensitive << ( input_AX_ALGpalma0_id_V_0_sel_rd );

    SC_METHOD(thread_input_AX_ALGpalma0_id_V_0_state_cmp_full);
    sensitive << ( input_AX_ALGpalma0_id_V_0_state );

    SC_METHOD(thread_input_AX_ALGpalma0_id_V_0_vld_in);
    sensitive << ( input_AX_ALGpalma0_TVALID );

    SC_METHOD(thread_input_AX_ALGpalma0_id_V_0_vld_out);
    sensitive << ( input_AX_ALGpalma0_id_V_0_state );

    SC_METHOD(thread_input_AX_ALGpalma0_keep_V_0_ack_in);
    sensitive << ( input_AX_ALGpalma0_keep_V_0_state );

    SC_METHOD(thread_input_AX_ALGpalma0_keep_V_0_ack_out);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( palma0_0_V_read_data_fu_137_input_AX_ALGpalma1_TREADY );

    SC_METHOD(thread_input_AX_ALGpalma0_keep_V_0_data_out);
    sensitive << ( input_AX_ALGpalma0_keep_V_0_payload_A );
    sensitive << ( input_AX_ALGpalma0_keep_V_0_payload_B );
    sensitive << ( input_AX_ALGpalma0_keep_V_0_sel );

    SC_METHOD(thread_input_AX_ALGpalma0_keep_V_0_load_A);
    sensitive << ( input_AX_ALGpalma0_keep_V_0_sel_wr );
    sensitive << ( input_AX_ALGpalma0_keep_V_0_state_cmp_full );

    SC_METHOD(thread_input_AX_ALGpalma0_keep_V_0_load_B);
    sensitive << ( input_AX_ALGpalma0_keep_V_0_sel_wr );
    sensitive << ( input_AX_ALGpalma0_keep_V_0_state_cmp_full );

    SC_METHOD(thread_input_AX_ALGpalma0_keep_V_0_sel);
    sensitive << ( input_AX_ALGpalma0_keep_V_0_sel_rd );

    SC_METHOD(thread_input_AX_ALGpalma0_keep_V_0_state_cmp_full);
    sensitive << ( input_AX_ALGpalma0_keep_V_0_state );

    SC_METHOD(thread_input_AX_ALGpalma0_keep_V_0_vld_in);
    sensitive << ( input_AX_ALGpalma0_TVALID );

    SC_METHOD(thread_input_AX_ALGpalma0_keep_V_0_vld_out);
    sensitive << ( input_AX_ALGpalma0_keep_V_0_state );

    SC_METHOD(thread_input_AX_ALGpalma0_last_V_0_ack_in);
    sensitive << ( input_AX_ALGpalma0_last_V_0_state );

    SC_METHOD(thread_input_AX_ALGpalma0_last_V_0_ack_out);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( palma0_0_V_read_data_fu_137_input_AX_ALGpalma1_TREADY );

    SC_METHOD(thread_input_AX_ALGpalma0_last_V_0_data_out);
    sensitive << ( input_AX_ALGpalma0_last_V_0_payload_A );
    sensitive << ( input_AX_ALGpalma0_last_V_0_payload_B );
    sensitive << ( input_AX_ALGpalma0_last_V_0_sel );

    SC_METHOD(thread_input_AX_ALGpalma0_last_V_0_load_A);
    sensitive << ( input_AX_ALGpalma0_last_V_0_sel_wr );
    sensitive << ( input_AX_ALGpalma0_last_V_0_state_cmp_full );

    SC_METHOD(thread_input_AX_ALGpalma0_last_V_0_load_B);
    sensitive << ( input_AX_ALGpalma0_last_V_0_sel_wr );
    sensitive << ( input_AX_ALGpalma0_last_V_0_state_cmp_full );

    SC_METHOD(thread_input_AX_ALGpalma0_last_V_0_sel);
    sensitive << ( input_AX_ALGpalma0_last_V_0_sel_rd );

    SC_METHOD(thread_input_AX_ALGpalma0_last_V_0_state_cmp_full);
    sensitive << ( input_AX_ALGpalma0_last_V_0_state );

    SC_METHOD(thread_input_AX_ALGpalma0_last_V_0_vld_in);
    sensitive << ( input_AX_ALGpalma0_TVALID );

    SC_METHOD(thread_input_AX_ALGpalma0_last_V_0_vld_out);
    sensitive << ( input_AX_ALGpalma0_last_V_0_state );

    SC_METHOD(thread_input_AX_ALGpalma0_strb_V_0_ack_in);
    sensitive << ( input_AX_ALGpalma0_strb_V_0_state );

    SC_METHOD(thread_input_AX_ALGpalma0_strb_V_0_ack_out);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( palma0_0_V_read_data_fu_137_input_AX_ALGpalma1_TREADY );

    SC_METHOD(thread_input_AX_ALGpalma0_strb_V_0_data_out);
    sensitive << ( input_AX_ALGpalma0_strb_V_0_payload_A );
    sensitive << ( input_AX_ALGpalma0_strb_V_0_payload_B );
    sensitive << ( input_AX_ALGpalma0_strb_V_0_sel );

    SC_METHOD(thread_input_AX_ALGpalma0_strb_V_0_load_A);
    sensitive << ( input_AX_ALGpalma0_strb_V_0_sel_wr );
    sensitive << ( input_AX_ALGpalma0_strb_V_0_state_cmp_full );

    SC_METHOD(thread_input_AX_ALGpalma0_strb_V_0_load_B);
    sensitive << ( input_AX_ALGpalma0_strb_V_0_sel_wr );
    sensitive << ( input_AX_ALGpalma0_strb_V_0_state_cmp_full );

    SC_METHOD(thread_input_AX_ALGpalma0_strb_V_0_sel);
    sensitive << ( input_AX_ALGpalma0_strb_V_0_sel_rd );

    SC_METHOD(thread_input_AX_ALGpalma0_strb_V_0_state_cmp_full);
    sensitive << ( input_AX_ALGpalma0_strb_V_0_state );

    SC_METHOD(thread_input_AX_ALGpalma0_strb_V_0_vld_in);
    sensitive << ( input_AX_ALGpalma0_TVALID );

    SC_METHOD(thread_input_AX_ALGpalma0_strb_V_0_vld_out);
    sensitive << ( input_AX_ALGpalma0_strb_V_0_state );

    SC_METHOD(thread_input_AX_ALGpalma0_user_V_0_ack_in);
    sensitive << ( input_AX_ALGpalma0_user_V_0_state );

    SC_METHOD(thread_input_AX_ALGpalma0_user_V_0_ack_out);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( palma0_0_V_read_data_fu_137_input_AX_ALGpalma1_TREADY );

    SC_METHOD(thread_input_AX_ALGpalma0_user_V_0_data_out);
    sensitive << ( input_AX_ALGpalma0_user_V_0_payload_A );
    sensitive << ( input_AX_ALGpalma0_user_V_0_payload_B );
    sensitive << ( input_AX_ALGpalma0_user_V_0_sel );

    SC_METHOD(thread_input_AX_ALGpalma0_user_V_0_load_A);
    sensitive << ( input_AX_ALGpalma0_user_V_0_sel_wr );
    sensitive << ( input_AX_ALGpalma0_user_V_0_state_cmp_full );

    SC_METHOD(thread_input_AX_ALGpalma0_user_V_0_load_B);
    sensitive << ( input_AX_ALGpalma0_user_V_0_sel_wr );
    sensitive << ( input_AX_ALGpalma0_user_V_0_state_cmp_full );

    SC_METHOD(thread_input_AX_ALGpalma0_user_V_0_sel);
    sensitive << ( input_AX_ALGpalma0_user_V_0_sel_rd );

    SC_METHOD(thread_input_AX_ALGpalma0_user_V_0_state_cmp_full);
    sensitive << ( input_AX_ALGpalma0_user_V_0_state );

    SC_METHOD(thread_input_AX_ALGpalma0_user_V_0_vld_in);
    sensitive << ( input_AX_ALGpalma0_TVALID );

    SC_METHOD(thread_input_AX_ALGpalma0_user_V_0_vld_out);
    sensitive << ( input_AX_ALGpalma0_user_V_0_state );

    SC_METHOD(thread_input_AX_ALGpalma1_TDATA_blk_n);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( palma1_0_V_read_data_fu_175_input_AX_ALGpalma1_TDATA_blk_n );

    SC_METHOD(thread_input_AX_ALGpalma1_TREADY);
    sensitive << ( input_AX_ALGpalma1_dest_V_0_state );

    SC_METHOD(thread_input_AX_ALGpalma1_data_V_0_ack_in);
    sensitive << ( input_AX_ALGpalma1_data_V_0_state );

    SC_METHOD(thread_input_AX_ALGpalma1_data_V_0_ack_out);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( palma1_0_V_read_data_fu_175_input_AX_ALGpalma1_TREADY );

    SC_METHOD(thread_input_AX_ALGpalma1_data_V_0_data_out);
    sensitive << ( input_AX_ALGpalma1_data_V_0_payload_A );
    sensitive << ( input_AX_ALGpalma1_data_V_0_payload_B );
    sensitive << ( input_AX_ALGpalma1_data_V_0_sel );

    SC_METHOD(thread_input_AX_ALGpalma1_data_V_0_load_A);
    sensitive << ( input_AX_ALGpalma1_data_V_0_sel_wr );
    sensitive << ( input_AX_ALGpalma1_data_V_0_state_cmp_full );

    SC_METHOD(thread_input_AX_ALGpalma1_data_V_0_load_B);
    sensitive << ( input_AX_ALGpalma1_data_V_0_sel_wr );
    sensitive << ( input_AX_ALGpalma1_data_V_0_state_cmp_full );

    SC_METHOD(thread_input_AX_ALGpalma1_data_V_0_sel);
    sensitive << ( input_AX_ALGpalma1_data_V_0_sel_rd );

    SC_METHOD(thread_input_AX_ALGpalma1_data_V_0_state_cmp_full);
    sensitive << ( input_AX_ALGpalma1_data_V_0_state );

    SC_METHOD(thread_input_AX_ALGpalma1_data_V_0_vld_in);
    sensitive << ( input_AX_ALGpalma1_TVALID );

    SC_METHOD(thread_input_AX_ALGpalma1_data_V_0_vld_out);
    sensitive << ( input_AX_ALGpalma1_data_V_0_state );

    SC_METHOD(thread_input_AX_ALGpalma1_dest_V_0_ack_in);
    sensitive << ( input_AX_ALGpalma1_dest_V_0_state );

    SC_METHOD(thread_input_AX_ALGpalma1_dest_V_0_ack_out);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( palma1_0_V_read_data_fu_175_input_AX_ALGpalma1_TREADY );

    SC_METHOD(thread_input_AX_ALGpalma1_dest_V_0_data_out);
    sensitive << ( input_AX_ALGpalma1_dest_V_0_payload_A );
    sensitive << ( input_AX_ALGpalma1_dest_V_0_payload_B );
    sensitive << ( input_AX_ALGpalma1_dest_V_0_sel );

    SC_METHOD(thread_input_AX_ALGpalma1_dest_V_0_load_A);
    sensitive << ( input_AX_ALGpalma1_dest_V_0_sel_wr );
    sensitive << ( input_AX_ALGpalma1_dest_V_0_state_cmp_full );

    SC_METHOD(thread_input_AX_ALGpalma1_dest_V_0_load_B);
    sensitive << ( input_AX_ALGpalma1_dest_V_0_sel_wr );
    sensitive << ( input_AX_ALGpalma1_dest_V_0_state_cmp_full );

    SC_METHOD(thread_input_AX_ALGpalma1_dest_V_0_sel);
    sensitive << ( input_AX_ALGpalma1_dest_V_0_sel_rd );

    SC_METHOD(thread_input_AX_ALGpalma1_dest_V_0_state_cmp_full);
    sensitive << ( input_AX_ALGpalma1_dest_V_0_state );

    SC_METHOD(thread_input_AX_ALGpalma1_dest_V_0_vld_in);
    sensitive << ( input_AX_ALGpalma1_TVALID );

    SC_METHOD(thread_input_AX_ALGpalma1_dest_V_0_vld_out);
    sensitive << ( input_AX_ALGpalma1_dest_V_0_state );

    SC_METHOD(thread_input_AX_ALGpalma1_id_V_0_ack_in);
    sensitive << ( input_AX_ALGpalma1_id_V_0_state );

    SC_METHOD(thread_input_AX_ALGpalma1_id_V_0_ack_out);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( palma1_0_V_read_data_fu_175_input_AX_ALGpalma1_TREADY );

    SC_METHOD(thread_input_AX_ALGpalma1_id_V_0_data_out);
    sensitive << ( input_AX_ALGpalma1_id_V_0_payload_A );
    sensitive << ( input_AX_ALGpalma1_id_V_0_payload_B );
    sensitive << ( input_AX_ALGpalma1_id_V_0_sel );

    SC_METHOD(thread_input_AX_ALGpalma1_id_V_0_load_A);
    sensitive << ( input_AX_ALGpalma1_id_V_0_sel_wr );
    sensitive << ( input_AX_ALGpalma1_id_V_0_state_cmp_full );

    SC_METHOD(thread_input_AX_ALGpalma1_id_V_0_load_B);
    sensitive << ( input_AX_ALGpalma1_id_V_0_sel_wr );
    sensitive << ( input_AX_ALGpalma1_id_V_0_state_cmp_full );

    SC_METHOD(thread_input_AX_ALGpalma1_id_V_0_sel);
    sensitive << ( input_AX_ALGpalma1_id_V_0_sel_rd );

    SC_METHOD(thread_input_AX_ALGpalma1_id_V_0_state_cmp_full);
    sensitive << ( input_AX_ALGpalma1_id_V_0_state );

    SC_METHOD(thread_input_AX_ALGpalma1_id_V_0_vld_in);
    sensitive << ( input_AX_ALGpalma1_TVALID );

    SC_METHOD(thread_input_AX_ALGpalma1_id_V_0_vld_out);
    sensitive << ( input_AX_ALGpalma1_id_V_0_state );

    SC_METHOD(thread_input_AX_ALGpalma1_keep_V_0_ack_in);
    sensitive << ( input_AX_ALGpalma1_keep_V_0_state );

    SC_METHOD(thread_input_AX_ALGpalma1_keep_V_0_ack_out);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( palma1_0_V_read_data_fu_175_input_AX_ALGpalma1_TREADY );

    SC_METHOD(thread_input_AX_ALGpalma1_keep_V_0_data_out);
    sensitive << ( input_AX_ALGpalma1_keep_V_0_payload_A );
    sensitive << ( input_AX_ALGpalma1_keep_V_0_payload_B );
    sensitive << ( input_AX_ALGpalma1_keep_V_0_sel );

    SC_METHOD(thread_input_AX_ALGpalma1_keep_V_0_load_A);
    sensitive << ( input_AX_ALGpalma1_keep_V_0_sel_wr );
    sensitive << ( input_AX_ALGpalma1_keep_V_0_state_cmp_full );

    SC_METHOD(thread_input_AX_ALGpalma1_keep_V_0_load_B);
    sensitive << ( input_AX_ALGpalma1_keep_V_0_sel_wr );
    sensitive << ( input_AX_ALGpalma1_keep_V_0_state_cmp_full );

    SC_METHOD(thread_input_AX_ALGpalma1_keep_V_0_sel);
    sensitive << ( input_AX_ALGpalma1_keep_V_0_sel_rd );

    SC_METHOD(thread_input_AX_ALGpalma1_keep_V_0_state_cmp_full);
    sensitive << ( input_AX_ALGpalma1_keep_V_0_state );

    SC_METHOD(thread_input_AX_ALGpalma1_keep_V_0_vld_in);
    sensitive << ( input_AX_ALGpalma1_TVALID );

    SC_METHOD(thread_input_AX_ALGpalma1_keep_V_0_vld_out);
    sensitive << ( input_AX_ALGpalma1_keep_V_0_state );

    SC_METHOD(thread_input_AX_ALGpalma1_last_V_0_ack_in);
    sensitive << ( input_AX_ALGpalma1_last_V_0_state );

    SC_METHOD(thread_input_AX_ALGpalma1_last_V_0_ack_out);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( palma1_0_V_read_data_fu_175_input_AX_ALGpalma1_TREADY );

    SC_METHOD(thread_input_AX_ALGpalma1_last_V_0_data_out);
    sensitive << ( input_AX_ALGpalma1_last_V_0_payload_A );
    sensitive << ( input_AX_ALGpalma1_last_V_0_payload_B );
    sensitive << ( input_AX_ALGpalma1_last_V_0_sel );

    SC_METHOD(thread_input_AX_ALGpalma1_last_V_0_load_A);
    sensitive << ( input_AX_ALGpalma1_last_V_0_sel_wr );
    sensitive << ( input_AX_ALGpalma1_last_V_0_state_cmp_full );

    SC_METHOD(thread_input_AX_ALGpalma1_last_V_0_load_B);
    sensitive << ( input_AX_ALGpalma1_last_V_0_sel_wr );
    sensitive << ( input_AX_ALGpalma1_last_V_0_state_cmp_full );

    SC_METHOD(thread_input_AX_ALGpalma1_last_V_0_sel);
    sensitive << ( input_AX_ALGpalma1_last_V_0_sel_rd );

    SC_METHOD(thread_input_AX_ALGpalma1_last_V_0_state_cmp_full);
    sensitive << ( input_AX_ALGpalma1_last_V_0_state );

    SC_METHOD(thread_input_AX_ALGpalma1_last_V_0_vld_in);
    sensitive << ( input_AX_ALGpalma1_TVALID );

    SC_METHOD(thread_input_AX_ALGpalma1_last_V_0_vld_out);
    sensitive << ( input_AX_ALGpalma1_last_V_0_state );

    SC_METHOD(thread_input_AX_ALGpalma1_strb_V_0_ack_in);
    sensitive << ( input_AX_ALGpalma1_strb_V_0_state );

    SC_METHOD(thread_input_AX_ALGpalma1_strb_V_0_ack_out);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( palma1_0_V_read_data_fu_175_input_AX_ALGpalma1_TREADY );

    SC_METHOD(thread_input_AX_ALGpalma1_strb_V_0_data_out);
    sensitive << ( input_AX_ALGpalma1_strb_V_0_payload_A );
    sensitive << ( input_AX_ALGpalma1_strb_V_0_payload_B );
    sensitive << ( input_AX_ALGpalma1_strb_V_0_sel );

    SC_METHOD(thread_input_AX_ALGpalma1_strb_V_0_load_A);
    sensitive << ( input_AX_ALGpalma1_strb_V_0_sel_wr );
    sensitive << ( input_AX_ALGpalma1_strb_V_0_state_cmp_full );

    SC_METHOD(thread_input_AX_ALGpalma1_strb_V_0_load_B);
    sensitive << ( input_AX_ALGpalma1_strb_V_0_sel_wr );
    sensitive << ( input_AX_ALGpalma1_strb_V_0_state_cmp_full );

    SC_METHOD(thread_input_AX_ALGpalma1_strb_V_0_sel);
    sensitive << ( input_AX_ALGpalma1_strb_V_0_sel_rd );

    SC_METHOD(thread_input_AX_ALGpalma1_strb_V_0_state_cmp_full);
    sensitive << ( input_AX_ALGpalma1_strb_V_0_state );

    SC_METHOD(thread_input_AX_ALGpalma1_strb_V_0_vld_in);
    sensitive << ( input_AX_ALGpalma1_TVALID );

    SC_METHOD(thread_input_AX_ALGpalma1_strb_V_0_vld_out);
    sensitive << ( input_AX_ALGpalma1_strb_V_0_state );

    SC_METHOD(thread_input_AX_ALGpalma1_user_V_0_ack_in);
    sensitive << ( input_AX_ALGpalma1_user_V_0_state );

    SC_METHOD(thread_input_AX_ALGpalma1_user_V_0_ack_out);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( palma1_0_V_read_data_fu_175_input_AX_ALGpalma1_TREADY );

    SC_METHOD(thread_input_AX_ALGpalma1_user_V_0_data_out);
    sensitive << ( input_AX_ALGpalma1_user_V_0_payload_A );
    sensitive << ( input_AX_ALGpalma1_user_V_0_payload_B );
    sensitive << ( input_AX_ALGpalma1_user_V_0_sel );

    SC_METHOD(thread_input_AX_ALGpalma1_user_V_0_load_A);
    sensitive << ( input_AX_ALGpalma1_user_V_0_sel_wr );
    sensitive << ( input_AX_ALGpalma1_user_V_0_state_cmp_full );

    SC_METHOD(thread_input_AX_ALGpalma1_user_V_0_load_B);
    sensitive << ( input_AX_ALGpalma1_user_V_0_sel_wr );
    sensitive << ( input_AX_ALGpalma1_user_V_0_state_cmp_full );

    SC_METHOD(thread_input_AX_ALGpalma1_user_V_0_sel);
    sensitive << ( input_AX_ALGpalma1_user_V_0_sel_rd );

    SC_METHOD(thread_input_AX_ALGpalma1_user_V_0_state_cmp_full);
    sensitive << ( input_AX_ALGpalma1_user_V_0_state );

    SC_METHOD(thread_input_AX_ALGpalma1_user_V_0_vld_in);
    sensitive << ( input_AX_ALGpalma1_TVALID );

    SC_METHOD(thread_input_AX_ALGpalma1_user_V_0_vld_out);
    sensitive << ( input_AX_ALGpalma1_user_V_0_state );

    SC_METHOD(thread_output_AX_ALG_TDATA);
    sensitive << ( output_AX_ALG_data_V_1_data_out );

    SC_METHOD(thread_output_AX_ALG_TDEST);
    sensitive << ( output_AX_ALG_dest_V_1_data_out );

    SC_METHOD(thread_output_AX_ALG_TID);
    sensitive << ( output_AX_ALG_id_V_1_data_out );

    SC_METHOD(thread_output_AX_ALG_TKEEP);
    sensitive << ( output_AX_ALG_keep_V_1_data_out );

    SC_METHOD(thread_output_AX_ALG_TLAST);
    sensitive << ( output_AX_ALG_last_V_1_data_out );

    SC_METHOD(thread_output_AX_ALG_TSTRB);
    sensitive << ( output_AX_ALG_strb_V_1_data_out );

    SC_METHOD(thread_output_AX_ALG_TUSER);
    sensitive << ( output_AX_ALG_user_V_1_data_out );

    SC_METHOD(thread_output_AX_ALG_TVALID);
    sensitive << ( output_AX_ALG_dest_V_1_state );

    SC_METHOD(thread_output_AX_ALG_data_V_1_ack_in);
    sensitive << ( output_AX_ALG_data_V_1_state );

    SC_METHOD(thread_output_AX_ALG_data_V_1_ack_out);
    sensitive << ( output_AX_ALG_TREADY );

    SC_METHOD(thread_output_AX_ALG_data_V_1_data_out);
    sensitive << ( output_AX_ALG_data_V_1_payload_A );
    sensitive << ( output_AX_ALG_data_V_1_payload_B );
    sensitive << ( output_AX_ALG_data_V_1_sel );

    SC_METHOD(thread_output_AX_ALG_data_V_1_load_A);
    sensitive << ( output_AX_ALG_data_V_1_sel_wr );
    sensitive << ( output_AX_ALG_data_V_1_state_cmp_full );

    SC_METHOD(thread_output_AX_ALG_data_V_1_load_B);
    sensitive << ( output_AX_ALG_data_V_1_sel_wr );
    sensitive << ( output_AX_ALG_data_V_1_state_cmp_full );

    SC_METHOD(thread_output_AX_ALG_data_V_1_sel);
    sensitive << ( output_AX_ALG_data_V_1_sel_rd );

    SC_METHOD(thread_output_AX_ALG_data_V_1_state_cmp_full);
    sensitive << ( output_AX_ALG_data_V_1_state );

    SC_METHOD(thread_output_AX_ALG_data_V_1_vld_in);
    sensitive << ( grp_write_data_fu_96_output_AX_ALG_TVALID );
    sensitive << ( ap_CS_fsm_state3 );

    SC_METHOD(thread_output_AX_ALG_data_V_1_vld_out);
    sensitive << ( output_AX_ALG_data_V_1_state );

    SC_METHOD(thread_output_AX_ALG_dest_V_1_ack_in);
    sensitive << ( output_AX_ALG_dest_V_1_state );

    SC_METHOD(thread_output_AX_ALG_dest_V_1_ack_out);
    sensitive << ( output_AX_ALG_TREADY );

    SC_METHOD(thread_output_AX_ALG_dest_V_1_data_out);
    sensitive << ( output_AX_ALG_dest_V_1_payload_A );
    sensitive << ( output_AX_ALG_dest_V_1_payload_B );
    sensitive << ( output_AX_ALG_dest_V_1_sel );

    SC_METHOD(thread_output_AX_ALG_dest_V_1_load_A);
    sensitive << ( output_AX_ALG_dest_V_1_sel_wr );
    sensitive << ( output_AX_ALG_dest_V_1_state_cmp_full );

    SC_METHOD(thread_output_AX_ALG_dest_V_1_load_B);
    sensitive << ( output_AX_ALG_dest_V_1_sel_wr );
    sensitive << ( output_AX_ALG_dest_V_1_state_cmp_full );

    SC_METHOD(thread_output_AX_ALG_dest_V_1_sel);
    sensitive << ( output_AX_ALG_dest_V_1_sel_rd );

    SC_METHOD(thread_output_AX_ALG_dest_V_1_state_cmp_full);
    sensitive << ( output_AX_ALG_dest_V_1_state );

    SC_METHOD(thread_output_AX_ALG_dest_V_1_vld_in);
    sensitive << ( grp_write_data_fu_96_output_AX_ALG_TVALID );
    sensitive << ( ap_CS_fsm_state3 );

    SC_METHOD(thread_output_AX_ALG_dest_V_1_vld_out);
    sensitive << ( output_AX_ALG_dest_V_1_state );

    SC_METHOD(thread_output_AX_ALG_id_V_1_ack_in);
    sensitive << ( output_AX_ALG_id_V_1_state );

    SC_METHOD(thread_output_AX_ALG_id_V_1_ack_out);
    sensitive << ( output_AX_ALG_TREADY );

    SC_METHOD(thread_output_AX_ALG_id_V_1_data_out);
    sensitive << ( output_AX_ALG_id_V_1_payload_A );
    sensitive << ( output_AX_ALG_id_V_1_payload_B );
    sensitive << ( output_AX_ALG_id_V_1_sel );

    SC_METHOD(thread_output_AX_ALG_id_V_1_load_A);
    sensitive << ( output_AX_ALG_id_V_1_sel_wr );
    sensitive << ( output_AX_ALG_id_V_1_state_cmp_full );

    SC_METHOD(thread_output_AX_ALG_id_V_1_load_B);
    sensitive << ( output_AX_ALG_id_V_1_sel_wr );
    sensitive << ( output_AX_ALG_id_V_1_state_cmp_full );

    SC_METHOD(thread_output_AX_ALG_id_V_1_sel);
    sensitive << ( output_AX_ALG_id_V_1_sel_rd );

    SC_METHOD(thread_output_AX_ALG_id_V_1_state_cmp_full);
    sensitive << ( output_AX_ALG_id_V_1_state );

    SC_METHOD(thread_output_AX_ALG_id_V_1_vld_in);
    sensitive << ( grp_write_data_fu_96_output_AX_ALG_TVALID );
    sensitive << ( ap_CS_fsm_state3 );

    SC_METHOD(thread_output_AX_ALG_id_V_1_vld_out);
    sensitive << ( output_AX_ALG_id_V_1_state );

    SC_METHOD(thread_output_AX_ALG_keep_V_1_ack_in);
    sensitive << ( output_AX_ALG_keep_V_1_state );

    SC_METHOD(thread_output_AX_ALG_keep_V_1_ack_out);
    sensitive << ( output_AX_ALG_TREADY );

    SC_METHOD(thread_output_AX_ALG_keep_V_1_data_out);
    sensitive << ( output_AX_ALG_keep_V_1_payload_A );
    sensitive << ( output_AX_ALG_keep_V_1_payload_B );
    sensitive << ( output_AX_ALG_keep_V_1_sel );

    SC_METHOD(thread_output_AX_ALG_keep_V_1_load_A);
    sensitive << ( output_AX_ALG_keep_V_1_sel_wr );
    sensitive << ( output_AX_ALG_keep_V_1_state_cmp_full );

    SC_METHOD(thread_output_AX_ALG_keep_V_1_load_B);
    sensitive << ( output_AX_ALG_keep_V_1_sel_wr );
    sensitive << ( output_AX_ALG_keep_V_1_state_cmp_full );

    SC_METHOD(thread_output_AX_ALG_keep_V_1_sel);
    sensitive << ( output_AX_ALG_keep_V_1_sel_rd );

    SC_METHOD(thread_output_AX_ALG_keep_V_1_state_cmp_full);
    sensitive << ( output_AX_ALG_keep_V_1_state );

    SC_METHOD(thread_output_AX_ALG_keep_V_1_vld_in);
    sensitive << ( grp_write_data_fu_96_output_AX_ALG_TVALID );
    sensitive << ( ap_CS_fsm_state3 );

    SC_METHOD(thread_output_AX_ALG_keep_V_1_vld_out);
    sensitive << ( output_AX_ALG_keep_V_1_state );

    SC_METHOD(thread_output_AX_ALG_last_V_1_ack_in);
    sensitive << ( output_AX_ALG_last_V_1_state );

    SC_METHOD(thread_output_AX_ALG_last_V_1_ack_out);
    sensitive << ( output_AX_ALG_TREADY );

    SC_METHOD(thread_output_AX_ALG_last_V_1_data_out);
    sensitive << ( output_AX_ALG_last_V_1_payload_A );
    sensitive << ( output_AX_ALG_last_V_1_payload_B );
    sensitive << ( output_AX_ALG_last_V_1_sel );

    SC_METHOD(thread_output_AX_ALG_last_V_1_load_A);
    sensitive << ( output_AX_ALG_last_V_1_sel_wr );
    sensitive << ( output_AX_ALG_last_V_1_state_cmp_full );

    SC_METHOD(thread_output_AX_ALG_last_V_1_load_B);
    sensitive << ( output_AX_ALG_last_V_1_sel_wr );
    sensitive << ( output_AX_ALG_last_V_1_state_cmp_full );

    SC_METHOD(thread_output_AX_ALG_last_V_1_sel);
    sensitive << ( output_AX_ALG_last_V_1_sel_rd );

    SC_METHOD(thread_output_AX_ALG_last_V_1_state_cmp_full);
    sensitive << ( output_AX_ALG_last_V_1_state );

    SC_METHOD(thread_output_AX_ALG_last_V_1_vld_in);
    sensitive << ( grp_write_data_fu_96_output_AX_ALG_TVALID );
    sensitive << ( ap_CS_fsm_state3 );

    SC_METHOD(thread_output_AX_ALG_last_V_1_vld_out);
    sensitive << ( output_AX_ALG_last_V_1_state );

    SC_METHOD(thread_output_AX_ALG_strb_V_1_ack_in);
    sensitive << ( output_AX_ALG_strb_V_1_state );

    SC_METHOD(thread_output_AX_ALG_strb_V_1_ack_out);
    sensitive << ( output_AX_ALG_TREADY );

    SC_METHOD(thread_output_AX_ALG_strb_V_1_data_out);
    sensitive << ( output_AX_ALG_strb_V_1_payload_A );
    sensitive << ( output_AX_ALG_strb_V_1_payload_B );
    sensitive << ( output_AX_ALG_strb_V_1_sel );

    SC_METHOD(thread_output_AX_ALG_strb_V_1_load_A);
    sensitive << ( output_AX_ALG_strb_V_1_sel_wr );
    sensitive << ( output_AX_ALG_strb_V_1_state_cmp_full );

    SC_METHOD(thread_output_AX_ALG_strb_V_1_load_B);
    sensitive << ( output_AX_ALG_strb_V_1_sel_wr );
    sensitive << ( output_AX_ALG_strb_V_1_state_cmp_full );

    SC_METHOD(thread_output_AX_ALG_strb_V_1_sel);
    sensitive << ( output_AX_ALG_strb_V_1_sel_rd );

    SC_METHOD(thread_output_AX_ALG_strb_V_1_state_cmp_full);
    sensitive << ( output_AX_ALG_strb_V_1_state );

    SC_METHOD(thread_output_AX_ALG_strb_V_1_vld_in);
    sensitive << ( grp_write_data_fu_96_output_AX_ALG_TVALID );
    sensitive << ( ap_CS_fsm_state3 );

    SC_METHOD(thread_output_AX_ALG_strb_V_1_vld_out);
    sensitive << ( output_AX_ALG_strb_V_1_state );

    SC_METHOD(thread_output_AX_ALG_user_V_1_ack_in);
    sensitive << ( output_AX_ALG_user_V_1_state );

    SC_METHOD(thread_output_AX_ALG_user_V_1_ack_out);
    sensitive << ( output_AX_ALG_TREADY );

    SC_METHOD(thread_output_AX_ALG_user_V_1_data_out);
    sensitive << ( output_AX_ALG_user_V_1_payload_A );
    sensitive << ( output_AX_ALG_user_V_1_payload_B );
    sensitive << ( output_AX_ALG_user_V_1_sel );

    SC_METHOD(thread_output_AX_ALG_user_V_1_load_A);
    sensitive << ( output_AX_ALG_user_V_1_sel_wr );
    sensitive << ( output_AX_ALG_user_V_1_state_cmp_full );

    SC_METHOD(thread_output_AX_ALG_user_V_1_load_B);
    sensitive << ( output_AX_ALG_user_V_1_sel_wr );
    sensitive << ( output_AX_ALG_user_V_1_state_cmp_full );

    SC_METHOD(thread_output_AX_ALG_user_V_1_sel);
    sensitive << ( output_AX_ALG_user_V_1_sel_rd );

    SC_METHOD(thread_output_AX_ALG_user_V_1_state_cmp_full);
    sensitive << ( output_AX_ALG_user_V_1_state );

    SC_METHOD(thread_output_AX_ALG_user_V_1_vld_in);
    sensitive << ( grp_write_data_fu_96_output_AX_ALG_TVALID );
    sensitive << ( ap_CS_fsm_state3 );

    SC_METHOD(thread_output_AX_ALG_user_V_1_vld_out);
    sensitive << ( output_AX_ALG_user_V_1_state );

    SC_METHOD(thread_palma0_0_V_read_data_fu_137_ap_start);
    sensitive << ( dedo0_0_V_read_data_fu_118_input_AX_ALGpalma1_TDATA_blk_n );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( dedo1_0_V_read_data_fu_156_input_AX_ALGpalma1_TDATA_blk_n );
    sensitive << ( palma1_0_V_read_data_fu_175_input_AX_ALGpalma1_TDATA_blk_n );

    SC_METHOD(thread_palma0_0_V_read_data_fu_137_input_AX_ALGpalma1_TVALID);
    sensitive << ( input_AX_ALGpalma0_dest_V_0_state );

    SC_METHOD(thread_palma1_0_V_read_data_fu_175_ap_start);
    sensitive << ( dedo0_0_V_read_data_fu_118_input_AX_ALGpalma1_TDATA_blk_n );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( palma0_0_V_read_data_fu_137_input_AX_ALGpalma1_TDATA_blk_n );
    sensitive << ( dedo1_0_V_read_data_fu_156_input_AX_ALGpalma1_TDATA_blk_n );

    SC_METHOD(thread_palma1_0_V_read_data_fu_175_input_AX_ALGpalma1_TVALID);
    sensitive << ( input_AX_ALGpalma1_dest_V_0_state );

    SC_METHOD(thread_ap_NS_fsm);
    sensitive << ( output_AX_ALG_data_V_1_ack_in );
    sensitive << ( output_AX_ALG_keep_V_1_ack_in );
    sensitive << ( output_AX_ALG_strb_V_1_ack_in );
    sensitive << ( output_AX_ALG_user_V_1_ack_in );
    sensitive << ( output_AX_ALG_last_V_1_ack_in );
    sensitive << ( output_AX_ALG_id_V_1_ack_in );
    sensitive << ( output_AX_ALG_dest_V_1_ack_in );
    sensitive << ( dedo0_0_V_read_data_fu_118_input_AX_ALGpalma1_TDATA_blk_n );
    sensitive << ( ap_CS_fsm );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( palma0_0_V_read_data_fu_137_input_AX_ALGpalma1_TDATA_blk_n );
    sensitive << ( dedo1_0_V_read_data_fu_156_input_AX_ALGpalma1_TDATA_blk_n );
    sensitive << ( palma1_0_V_read_data_fu_175_input_AX_ALGpalma1_TDATA_blk_n );
    sensitive << ( grp_write_data_fu_96_ap_done );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_CS_fsm_state4 );

    SC_THREAD(thread_hdltv_gen);
    sensitive << ( ap_clk.pos() );

    input_AX_ALGdedo0_data_V_0_sel_rd = SC_LOGIC_0;
    input_AX_ALGdedo0_data_V_0_sel_wr = SC_LOGIC_0;
    input_AX_ALGdedo0_data_V_0_state = "00";
    input_AX_ALGdedo0_keep_V_0_sel_rd = SC_LOGIC_0;
    input_AX_ALGdedo0_keep_V_0_sel_wr = SC_LOGIC_0;
    input_AX_ALGdedo0_keep_V_0_state = "00";
    input_AX_ALGdedo0_strb_V_0_sel_rd = SC_LOGIC_0;
    input_AX_ALGdedo0_strb_V_0_sel_wr = SC_LOGIC_0;
    input_AX_ALGdedo0_strb_V_0_state = "00";
    input_AX_ALGdedo0_user_V_0_sel_rd = SC_LOGIC_0;
    input_AX_ALGdedo0_user_V_0_sel_wr = SC_LOGIC_0;
    input_AX_ALGdedo0_user_V_0_state = "00";
    input_AX_ALGdedo0_last_V_0_sel_rd = SC_LOGIC_0;
    input_AX_ALGdedo0_last_V_0_sel_wr = SC_LOGIC_0;
    input_AX_ALGdedo0_last_V_0_state = "00";
    input_AX_ALGdedo0_id_V_0_sel_rd = SC_LOGIC_0;
    input_AX_ALGdedo0_id_V_0_sel_wr = SC_LOGIC_0;
    input_AX_ALGdedo0_id_V_0_state = "00";
    input_AX_ALGdedo0_dest_V_0_sel_rd = SC_LOGIC_0;
    input_AX_ALGdedo0_dest_V_0_sel_wr = SC_LOGIC_0;
    input_AX_ALGdedo0_dest_V_0_state = "00";
    input_AX_ALGpalma0_data_V_0_sel_rd = SC_LOGIC_0;
    input_AX_ALGpalma0_data_V_0_sel_wr = SC_LOGIC_0;
    input_AX_ALGpalma0_data_V_0_state = "00";
    input_AX_ALGpalma0_keep_V_0_sel_rd = SC_LOGIC_0;
    input_AX_ALGpalma0_keep_V_0_sel_wr = SC_LOGIC_0;
    input_AX_ALGpalma0_keep_V_0_state = "00";
    input_AX_ALGpalma0_strb_V_0_sel_rd = SC_LOGIC_0;
    input_AX_ALGpalma0_strb_V_0_sel_wr = SC_LOGIC_0;
    input_AX_ALGpalma0_strb_V_0_state = "00";
    input_AX_ALGpalma0_user_V_0_sel_rd = SC_LOGIC_0;
    input_AX_ALGpalma0_user_V_0_sel_wr = SC_LOGIC_0;
    input_AX_ALGpalma0_user_V_0_state = "00";
    input_AX_ALGpalma0_last_V_0_sel_rd = SC_LOGIC_0;
    input_AX_ALGpalma0_last_V_0_sel_wr = SC_LOGIC_0;
    input_AX_ALGpalma0_last_V_0_state = "00";
    input_AX_ALGpalma0_id_V_0_sel_rd = SC_LOGIC_0;
    input_AX_ALGpalma0_id_V_0_sel_wr = SC_LOGIC_0;
    input_AX_ALGpalma0_id_V_0_state = "00";
    input_AX_ALGpalma0_dest_V_0_sel_rd = SC_LOGIC_0;
    input_AX_ALGpalma0_dest_V_0_sel_wr = SC_LOGIC_0;
    input_AX_ALGpalma0_dest_V_0_state = "00";
    input_AX_ALGdedo1_data_V_0_sel_rd = SC_LOGIC_0;
    input_AX_ALGdedo1_data_V_0_sel_wr = SC_LOGIC_0;
    input_AX_ALGdedo1_data_V_0_state = "00";
    input_AX_ALGdedo1_keep_V_0_sel_rd = SC_LOGIC_0;
    input_AX_ALGdedo1_keep_V_0_sel_wr = SC_LOGIC_0;
    input_AX_ALGdedo1_keep_V_0_state = "00";
    input_AX_ALGdedo1_strb_V_0_sel_rd = SC_LOGIC_0;
    input_AX_ALGdedo1_strb_V_0_sel_wr = SC_LOGIC_0;
    input_AX_ALGdedo1_strb_V_0_state = "00";
    input_AX_ALGdedo1_user_V_0_sel_rd = SC_LOGIC_0;
    input_AX_ALGdedo1_user_V_0_sel_wr = SC_LOGIC_0;
    input_AX_ALGdedo1_user_V_0_state = "00";
    input_AX_ALGdedo1_last_V_0_sel_rd = SC_LOGIC_0;
    input_AX_ALGdedo1_last_V_0_sel_wr = SC_LOGIC_0;
    input_AX_ALGdedo1_last_V_0_state = "00";
    input_AX_ALGdedo1_id_V_0_sel_rd = SC_LOGIC_0;
    input_AX_ALGdedo1_id_V_0_sel_wr = SC_LOGIC_0;
    input_AX_ALGdedo1_id_V_0_state = "00";
    input_AX_ALGdedo1_dest_V_0_sel_rd = SC_LOGIC_0;
    input_AX_ALGdedo1_dest_V_0_sel_wr = SC_LOGIC_0;
    input_AX_ALGdedo1_dest_V_0_state = "00";
    input_AX_ALGpalma1_data_V_0_sel_rd = SC_LOGIC_0;
    input_AX_ALGpalma1_data_V_0_sel_wr = SC_LOGIC_0;
    input_AX_ALGpalma1_data_V_0_state = "00";
    input_AX_ALGpalma1_keep_V_0_sel_rd = SC_LOGIC_0;
    input_AX_ALGpalma1_keep_V_0_sel_wr = SC_LOGIC_0;
    input_AX_ALGpalma1_keep_V_0_state = "00";
    input_AX_ALGpalma1_strb_V_0_sel_rd = SC_LOGIC_0;
    input_AX_ALGpalma1_strb_V_0_sel_wr = SC_LOGIC_0;
    input_AX_ALGpalma1_strb_V_0_state = "00";
    input_AX_ALGpalma1_user_V_0_sel_rd = SC_LOGIC_0;
    input_AX_ALGpalma1_user_V_0_sel_wr = SC_LOGIC_0;
    input_AX_ALGpalma1_user_V_0_state = "00";
    input_AX_ALGpalma1_last_V_0_sel_rd = SC_LOGIC_0;
    input_AX_ALGpalma1_last_V_0_sel_wr = SC_LOGIC_0;
    input_AX_ALGpalma1_last_V_0_state = "00";
    input_AX_ALGpalma1_id_V_0_sel_rd = SC_LOGIC_0;
    input_AX_ALGpalma1_id_V_0_sel_wr = SC_LOGIC_0;
    input_AX_ALGpalma1_id_V_0_state = "00";
    input_AX_ALGpalma1_dest_V_0_sel_rd = SC_LOGIC_0;
    input_AX_ALGpalma1_dest_V_0_sel_wr = SC_LOGIC_0;
    input_AX_ALGpalma1_dest_V_0_state = "00";
    output_AX_ALG_data_V_1_sel_rd = SC_LOGIC_0;
    output_AX_ALG_data_V_1_sel_wr = SC_LOGIC_0;
    output_AX_ALG_data_V_1_state = "00";
    output_AX_ALG_keep_V_1_sel_rd = SC_LOGIC_0;
    output_AX_ALG_keep_V_1_sel_wr = SC_LOGIC_0;
    output_AX_ALG_keep_V_1_state = "00";
    output_AX_ALG_strb_V_1_sel_rd = SC_LOGIC_0;
    output_AX_ALG_strb_V_1_sel_wr = SC_LOGIC_0;
    output_AX_ALG_strb_V_1_state = "00";
    output_AX_ALG_user_V_1_sel_rd = SC_LOGIC_0;
    output_AX_ALG_user_V_1_sel_wr = SC_LOGIC_0;
    output_AX_ALG_user_V_1_state = "00";
    output_AX_ALG_last_V_1_sel_rd = SC_LOGIC_0;
    output_AX_ALG_last_V_1_sel_wr = SC_LOGIC_0;
    output_AX_ALG_last_V_1_state = "00";
    output_AX_ALG_id_V_1_sel_rd = SC_LOGIC_0;
    output_AX_ALG_id_V_1_sel_wr = SC_LOGIC_0;
    output_AX_ALG_id_V_1_state = "00";
    output_AX_ALG_dest_V_1_sel_rd = SC_LOGIC_0;
    output_AX_ALG_dest_V_1_sel_wr = SC_LOGIC_0;
    output_AX_ALG_dest_V_1_state = "00";
    ap_CS_fsm = "0001";
    ap_reg_grp_write_data_fu_96_ap_start = SC_LOGIC_0;
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "opcionA_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT__
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst_n, "(port)ap_rst_n");
    sc_trace(mVcdFile, input_AX_ALGdedo0_TDATA, "(port)input_AX_ALGdedo0_TDATA");
    sc_trace(mVcdFile, input_AX_ALGdedo0_TVALID, "(port)input_AX_ALGdedo0_TVALID");
    sc_trace(mVcdFile, input_AX_ALGdedo0_TREADY, "(port)input_AX_ALGdedo0_TREADY");
    sc_trace(mVcdFile, input_AX_ALGdedo0_TKEEP, "(port)input_AX_ALGdedo0_TKEEP");
    sc_trace(mVcdFile, input_AX_ALGdedo0_TSTRB, "(port)input_AX_ALGdedo0_TSTRB");
    sc_trace(mVcdFile, input_AX_ALGdedo0_TUSER, "(port)input_AX_ALGdedo0_TUSER");
    sc_trace(mVcdFile, input_AX_ALGdedo0_TLAST, "(port)input_AX_ALGdedo0_TLAST");
    sc_trace(mVcdFile, input_AX_ALGdedo0_TID, "(port)input_AX_ALGdedo0_TID");
    sc_trace(mVcdFile, input_AX_ALGdedo0_TDEST, "(port)input_AX_ALGdedo0_TDEST");
    sc_trace(mVcdFile, input_AX_ALGpalma0_TDATA, "(port)input_AX_ALGpalma0_TDATA");
    sc_trace(mVcdFile, input_AX_ALGpalma0_TVALID, "(port)input_AX_ALGpalma0_TVALID");
    sc_trace(mVcdFile, input_AX_ALGpalma0_TREADY, "(port)input_AX_ALGpalma0_TREADY");
    sc_trace(mVcdFile, input_AX_ALGpalma0_TKEEP, "(port)input_AX_ALGpalma0_TKEEP");
    sc_trace(mVcdFile, input_AX_ALGpalma0_TSTRB, "(port)input_AX_ALGpalma0_TSTRB");
    sc_trace(mVcdFile, input_AX_ALGpalma0_TUSER, "(port)input_AX_ALGpalma0_TUSER");
    sc_trace(mVcdFile, input_AX_ALGpalma0_TLAST, "(port)input_AX_ALGpalma0_TLAST");
    sc_trace(mVcdFile, input_AX_ALGpalma0_TID, "(port)input_AX_ALGpalma0_TID");
    sc_trace(mVcdFile, input_AX_ALGpalma0_TDEST, "(port)input_AX_ALGpalma0_TDEST");
    sc_trace(mVcdFile, input_AX_ALGdedo1_TDATA, "(port)input_AX_ALGdedo1_TDATA");
    sc_trace(mVcdFile, input_AX_ALGdedo1_TVALID, "(port)input_AX_ALGdedo1_TVALID");
    sc_trace(mVcdFile, input_AX_ALGdedo1_TREADY, "(port)input_AX_ALGdedo1_TREADY");
    sc_trace(mVcdFile, input_AX_ALGdedo1_TKEEP, "(port)input_AX_ALGdedo1_TKEEP");
    sc_trace(mVcdFile, input_AX_ALGdedo1_TSTRB, "(port)input_AX_ALGdedo1_TSTRB");
    sc_trace(mVcdFile, input_AX_ALGdedo1_TUSER, "(port)input_AX_ALGdedo1_TUSER");
    sc_trace(mVcdFile, input_AX_ALGdedo1_TLAST, "(port)input_AX_ALGdedo1_TLAST");
    sc_trace(mVcdFile, input_AX_ALGdedo1_TID, "(port)input_AX_ALGdedo1_TID");
    sc_trace(mVcdFile, input_AX_ALGdedo1_TDEST, "(port)input_AX_ALGdedo1_TDEST");
    sc_trace(mVcdFile, input_AX_ALGpalma1_TDATA, "(port)input_AX_ALGpalma1_TDATA");
    sc_trace(mVcdFile, input_AX_ALGpalma1_TVALID, "(port)input_AX_ALGpalma1_TVALID");
    sc_trace(mVcdFile, input_AX_ALGpalma1_TREADY, "(port)input_AX_ALGpalma1_TREADY");
    sc_trace(mVcdFile, input_AX_ALGpalma1_TKEEP, "(port)input_AX_ALGpalma1_TKEEP");
    sc_trace(mVcdFile, input_AX_ALGpalma1_TSTRB, "(port)input_AX_ALGpalma1_TSTRB");
    sc_trace(mVcdFile, input_AX_ALGpalma1_TUSER, "(port)input_AX_ALGpalma1_TUSER");
    sc_trace(mVcdFile, input_AX_ALGpalma1_TLAST, "(port)input_AX_ALGpalma1_TLAST");
    sc_trace(mVcdFile, input_AX_ALGpalma1_TID, "(port)input_AX_ALGpalma1_TID");
    sc_trace(mVcdFile, input_AX_ALGpalma1_TDEST, "(port)input_AX_ALGpalma1_TDEST");
    sc_trace(mVcdFile, output_AX_ALG_TDATA, "(port)output_AX_ALG_TDATA");
    sc_trace(mVcdFile, output_AX_ALG_TVALID, "(port)output_AX_ALG_TVALID");
    sc_trace(mVcdFile, output_AX_ALG_TREADY, "(port)output_AX_ALG_TREADY");
    sc_trace(mVcdFile, output_AX_ALG_TKEEP, "(port)output_AX_ALG_TKEEP");
    sc_trace(mVcdFile, output_AX_ALG_TSTRB, "(port)output_AX_ALG_TSTRB");
    sc_trace(mVcdFile, output_AX_ALG_TUSER, "(port)output_AX_ALG_TUSER");
    sc_trace(mVcdFile, output_AX_ALG_TLAST, "(port)output_AX_ALG_TLAST");
    sc_trace(mVcdFile, output_AX_ALG_TID, "(port)output_AX_ALG_TID");
    sc_trace(mVcdFile, output_AX_ALG_TDEST, "(port)output_AX_ALG_TDEST");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, ap_rst_n_inv, "ap_rst_n_inv");
    sc_trace(mVcdFile, input_AX_ALGdedo0_data_V_0_data_out, "input_AX_ALGdedo0_data_V_0_data_out");
    sc_trace(mVcdFile, input_AX_ALGdedo0_data_V_0_vld_in, "input_AX_ALGdedo0_data_V_0_vld_in");
    sc_trace(mVcdFile, input_AX_ALGdedo0_data_V_0_vld_out, "input_AX_ALGdedo0_data_V_0_vld_out");
    sc_trace(mVcdFile, input_AX_ALGdedo0_data_V_0_ack_in, "input_AX_ALGdedo0_data_V_0_ack_in");
    sc_trace(mVcdFile, input_AX_ALGdedo0_data_V_0_ack_out, "input_AX_ALGdedo0_data_V_0_ack_out");
    sc_trace(mVcdFile, input_AX_ALGdedo0_data_V_0_payload_A, "input_AX_ALGdedo0_data_V_0_payload_A");
    sc_trace(mVcdFile, input_AX_ALGdedo0_data_V_0_payload_B, "input_AX_ALGdedo0_data_V_0_payload_B");
    sc_trace(mVcdFile, input_AX_ALGdedo0_data_V_0_sel_rd, "input_AX_ALGdedo0_data_V_0_sel_rd");
    sc_trace(mVcdFile, input_AX_ALGdedo0_data_V_0_sel_wr, "input_AX_ALGdedo0_data_V_0_sel_wr");
    sc_trace(mVcdFile, input_AX_ALGdedo0_data_V_0_sel, "input_AX_ALGdedo0_data_V_0_sel");
    sc_trace(mVcdFile, input_AX_ALGdedo0_data_V_0_load_A, "input_AX_ALGdedo0_data_V_0_load_A");
    sc_trace(mVcdFile, input_AX_ALGdedo0_data_V_0_load_B, "input_AX_ALGdedo0_data_V_0_load_B");
    sc_trace(mVcdFile, input_AX_ALGdedo0_data_V_0_state, "input_AX_ALGdedo0_data_V_0_state");
    sc_trace(mVcdFile, input_AX_ALGdedo0_data_V_0_state_cmp_full, "input_AX_ALGdedo0_data_V_0_state_cmp_full");
    sc_trace(mVcdFile, input_AX_ALGdedo0_keep_V_0_data_out, "input_AX_ALGdedo0_keep_V_0_data_out");
    sc_trace(mVcdFile, input_AX_ALGdedo0_keep_V_0_vld_in, "input_AX_ALGdedo0_keep_V_0_vld_in");
    sc_trace(mVcdFile, input_AX_ALGdedo0_keep_V_0_vld_out, "input_AX_ALGdedo0_keep_V_0_vld_out");
    sc_trace(mVcdFile, input_AX_ALGdedo0_keep_V_0_ack_in, "input_AX_ALGdedo0_keep_V_0_ack_in");
    sc_trace(mVcdFile, input_AX_ALGdedo0_keep_V_0_ack_out, "input_AX_ALGdedo0_keep_V_0_ack_out");
    sc_trace(mVcdFile, input_AX_ALGdedo0_keep_V_0_payload_A, "input_AX_ALGdedo0_keep_V_0_payload_A");
    sc_trace(mVcdFile, input_AX_ALGdedo0_keep_V_0_payload_B, "input_AX_ALGdedo0_keep_V_0_payload_B");
    sc_trace(mVcdFile, input_AX_ALGdedo0_keep_V_0_sel_rd, "input_AX_ALGdedo0_keep_V_0_sel_rd");
    sc_trace(mVcdFile, input_AX_ALGdedo0_keep_V_0_sel_wr, "input_AX_ALGdedo0_keep_V_0_sel_wr");
    sc_trace(mVcdFile, input_AX_ALGdedo0_keep_V_0_sel, "input_AX_ALGdedo0_keep_V_0_sel");
    sc_trace(mVcdFile, input_AX_ALGdedo0_keep_V_0_load_A, "input_AX_ALGdedo0_keep_V_0_load_A");
    sc_trace(mVcdFile, input_AX_ALGdedo0_keep_V_0_load_B, "input_AX_ALGdedo0_keep_V_0_load_B");
    sc_trace(mVcdFile, input_AX_ALGdedo0_keep_V_0_state, "input_AX_ALGdedo0_keep_V_0_state");
    sc_trace(mVcdFile, input_AX_ALGdedo0_keep_V_0_state_cmp_full, "input_AX_ALGdedo0_keep_V_0_state_cmp_full");
    sc_trace(mVcdFile, input_AX_ALGdedo0_strb_V_0_data_out, "input_AX_ALGdedo0_strb_V_0_data_out");
    sc_trace(mVcdFile, input_AX_ALGdedo0_strb_V_0_vld_in, "input_AX_ALGdedo0_strb_V_0_vld_in");
    sc_trace(mVcdFile, input_AX_ALGdedo0_strb_V_0_vld_out, "input_AX_ALGdedo0_strb_V_0_vld_out");
    sc_trace(mVcdFile, input_AX_ALGdedo0_strb_V_0_ack_in, "input_AX_ALGdedo0_strb_V_0_ack_in");
    sc_trace(mVcdFile, input_AX_ALGdedo0_strb_V_0_ack_out, "input_AX_ALGdedo0_strb_V_0_ack_out");
    sc_trace(mVcdFile, input_AX_ALGdedo0_strb_V_0_payload_A, "input_AX_ALGdedo0_strb_V_0_payload_A");
    sc_trace(mVcdFile, input_AX_ALGdedo0_strb_V_0_payload_B, "input_AX_ALGdedo0_strb_V_0_payload_B");
    sc_trace(mVcdFile, input_AX_ALGdedo0_strb_V_0_sel_rd, "input_AX_ALGdedo0_strb_V_0_sel_rd");
    sc_trace(mVcdFile, input_AX_ALGdedo0_strb_V_0_sel_wr, "input_AX_ALGdedo0_strb_V_0_sel_wr");
    sc_trace(mVcdFile, input_AX_ALGdedo0_strb_V_0_sel, "input_AX_ALGdedo0_strb_V_0_sel");
    sc_trace(mVcdFile, input_AX_ALGdedo0_strb_V_0_load_A, "input_AX_ALGdedo0_strb_V_0_load_A");
    sc_trace(mVcdFile, input_AX_ALGdedo0_strb_V_0_load_B, "input_AX_ALGdedo0_strb_V_0_load_B");
    sc_trace(mVcdFile, input_AX_ALGdedo0_strb_V_0_state, "input_AX_ALGdedo0_strb_V_0_state");
    sc_trace(mVcdFile, input_AX_ALGdedo0_strb_V_0_state_cmp_full, "input_AX_ALGdedo0_strb_V_0_state_cmp_full");
    sc_trace(mVcdFile, input_AX_ALGdedo0_user_V_0_data_out, "input_AX_ALGdedo0_user_V_0_data_out");
    sc_trace(mVcdFile, input_AX_ALGdedo0_user_V_0_vld_in, "input_AX_ALGdedo0_user_V_0_vld_in");
    sc_trace(mVcdFile, input_AX_ALGdedo0_user_V_0_vld_out, "input_AX_ALGdedo0_user_V_0_vld_out");
    sc_trace(mVcdFile, input_AX_ALGdedo0_user_V_0_ack_in, "input_AX_ALGdedo0_user_V_0_ack_in");
    sc_trace(mVcdFile, input_AX_ALGdedo0_user_V_0_ack_out, "input_AX_ALGdedo0_user_V_0_ack_out");
    sc_trace(mVcdFile, input_AX_ALGdedo0_user_V_0_payload_A, "input_AX_ALGdedo0_user_V_0_payload_A");
    sc_trace(mVcdFile, input_AX_ALGdedo0_user_V_0_payload_B, "input_AX_ALGdedo0_user_V_0_payload_B");
    sc_trace(mVcdFile, input_AX_ALGdedo0_user_V_0_sel_rd, "input_AX_ALGdedo0_user_V_0_sel_rd");
    sc_trace(mVcdFile, input_AX_ALGdedo0_user_V_0_sel_wr, "input_AX_ALGdedo0_user_V_0_sel_wr");
    sc_trace(mVcdFile, input_AX_ALGdedo0_user_V_0_sel, "input_AX_ALGdedo0_user_V_0_sel");
    sc_trace(mVcdFile, input_AX_ALGdedo0_user_V_0_load_A, "input_AX_ALGdedo0_user_V_0_load_A");
    sc_trace(mVcdFile, input_AX_ALGdedo0_user_V_0_load_B, "input_AX_ALGdedo0_user_V_0_load_B");
    sc_trace(mVcdFile, input_AX_ALGdedo0_user_V_0_state, "input_AX_ALGdedo0_user_V_0_state");
    sc_trace(mVcdFile, input_AX_ALGdedo0_user_V_0_state_cmp_full, "input_AX_ALGdedo0_user_V_0_state_cmp_full");
    sc_trace(mVcdFile, input_AX_ALGdedo0_last_V_0_data_out, "input_AX_ALGdedo0_last_V_0_data_out");
    sc_trace(mVcdFile, input_AX_ALGdedo0_last_V_0_vld_in, "input_AX_ALGdedo0_last_V_0_vld_in");
    sc_trace(mVcdFile, input_AX_ALGdedo0_last_V_0_vld_out, "input_AX_ALGdedo0_last_V_0_vld_out");
    sc_trace(mVcdFile, input_AX_ALGdedo0_last_V_0_ack_in, "input_AX_ALGdedo0_last_V_0_ack_in");
    sc_trace(mVcdFile, input_AX_ALGdedo0_last_V_0_ack_out, "input_AX_ALGdedo0_last_V_0_ack_out");
    sc_trace(mVcdFile, input_AX_ALGdedo0_last_V_0_payload_A, "input_AX_ALGdedo0_last_V_0_payload_A");
    sc_trace(mVcdFile, input_AX_ALGdedo0_last_V_0_payload_B, "input_AX_ALGdedo0_last_V_0_payload_B");
    sc_trace(mVcdFile, input_AX_ALGdedo0_last_V_0_sel_rd, "input_AX_ALGdedo0_last_V_0_sel_rd");
    sc_trace(mVcdFile, input_AX_ALGdedo0_last_V_0_sel_wr, "input_AX_ALGdedo0_last_V_0_sel_wr");
    sc_trace(mVcdFile, input_AX_ALGdedo0_last_V_0_sel, "input_AX_ALGdedo0_last_V_0_sel");
    sc_trace(mVcdFile, input_AX_ALGdedo0_last_V_0_load_A, "input_AX_ALGdedo0_last_V_0_load_A");
    sc_trace(mVcdFile, input_AX_ALGdedo0_last_V_0_load_B, "input_AX_ALGdedo0_last_V_0_load_B");
    sc_trace(mVcdFile, input_AX_ALGdedo0_last_V_0_state, "input_AX_ALGdedo0_last_V_0_state");
    sc_trace(mVcdFile, input_AX_ALGdedo0_last_V_0_state_cmp_full, "input_AX_ALGdedo0_last_V_0_state_cmp_full");
    sc_trace(mVcdFile, input_AX_ALGdedo0_id_V_0_data_out, "input_AX_ALGdedo0_id_V_0_data_out");
    sc_trace(mVcdFile, input_AX_ALGdedo0_id_V_0_vld_in, "input_AX_ALGdedo0_id_V_0_vld_in");
    sc_trace(mVcdFile, input_AX_ALGdedo0_id_V_0_vld_out, "input_AX_ALGdedo0_id_V_0_vld_out");
    sc_trace(mVcdFile, input_AX_ALGdedo0_id_V_0_ack_in, "input_AX_ALGdedo0_id_V_0_ack_in");
    sc_trace(mVcdFile, input_AX_ALGdedo0_id_V_0_ack_out, "input_AX_ALGdedo0_id_V_0_ack_out");
    sc_trace(mVcdFile, input_AX_ALGdedo0_id_V_0_payload_A, "input_AX_ALGdedo0_id_V_0_payload_A");
    sc_trace(mVcdFile, input_AX_ALGdedo0_id_V_0_payload_B, "input_AX_ALGdedo0_id_V_0_payload_B");
    sc_trace(mVcdFile, input_AX_ALGdedo0_id_V_0_sel_rd, "input_AX_ALGdedo0_id_V_0_sel_rd");
    sc_trace(mVcdFile, input_AX_ALGdedo0_id_V_0_sel_wr, "input_AX_ALGdedo0_id_V_0_sel_wr");
    sc_trace(mVcdFile, input_AX_ALGdedo0_id_V_0_sel, "input_AX_ALGdedo0_id_V_0_sel");
    sc_trace(mVcdFile, input_AX_ALGdedo0_id_V_0_load_A, "input_AX_ALGdedo0_id_V_0_load_A");
    sc_trace(mVcdFile, input_AX_ALGdedo0_id_V_0_load_B, "input_AX_ALGdedo0_id_V_0_load_B");
    sc_trace(mVcdFile, input_AX_ALGdedo0_id_V_0_state, "input_AX_ALGdedo0_id_V_0_state");
    sc_trace(mVcdFile, input_AX_ALGdedo0_id_V_0_state_cmp_full, "input_AX_ALGdedo0_id_V_0_state_cmp_full");
    sc_trace(mVcdFile, input_AX_ALGdedo0_dest_V_0_data_out, "input_AX_ALGdedo0_dest_V_0_data_out");
    sc_trace(mVcdFile, input_AX_ALGdedo0_dest_V_0_vld_in, "input_AX_ALGdedo0_dest_V_0_vld_in");
    sc_trace(mVcdFile, input_AX_ALGdedo0_dest_V_0_vld_out, "input_AX_ALGdedo0_dest_V_0_vld_out");
    sc_trace(mVcdFile, input_AX_ALGdedo0_dest_V_0_ack_in, "input_AX_ALGdedo0_dest_V_0_ack_in");
    sc_trace(mVcdFile, input_AX_ALGdedo0_dest_V_0_ack_out, "input_AX_ALGdedo0_dest_V_0_ack_out");
    sc_trace(mVcdFile, input_AX_ALGdedo0_dest_V_0_payload_A, "input_AX_ALGdedo0_dest_V_0_payload_A");
    sc_trace(mVcdFile, input_AX_ALGdedo0_dest_V_0_payload_B, "input_AX_ALGdedo0_dest_V_0_payload_B");
    sc_trace(mVcdFile, input_AX_ALGdedo0_dest_V_0_sel_rd, "input_AX_ALGdedo0_dest_V_0_sel_rd");
    sc_trace(mVcdFile, input_AX_ALGdedo0_dest_V_0_sel_wr, "input_AX_ALGdedo0_dest_V_0_sel_wr");
    sc_trace(mVcdFile, input_AX_ALGdedo0_dest_V_0_sel, "input_AX_ALGdedo0_dest_V_0_sel");
    sc_trace(mVcdFile, input_AX_ALGdedo0_dest_V_0_load_A, "input_AX_ALGdedo0_dest_V_0_load_A");
    sc_trace(mVcdFile, input_AX_ALGdedo0_dest_V_0_load_B, "input_AX_ALGdedo0_dest_V_0_load_B");
    sc_trace(mVcdFile, input_AX_ALGdedo0_dest_V_0_state, "input_AX_ALGdedo0_dest_V_0_state");
    sc_trace(mVcdFile, input_AX_ALGdedo0_dest_V_0_state_cmp_full, "input_AX_ALGdedo0_dest_V_0_state_cmp_full");
    sc_trace(mVcdFile, input_AX_ALGpalma0_data_V_0_data_out, "input_AX_ALGpalma0_data_V_0_data_out");
    sc_trace(mVcdFile, input_AX_ALGpalma0_data_V_0_vld_in, "input_AX_ALGpalma0_data_V_0_vld_in");
    sc_trace(mVcdFile, input_AX_ALGpalma0_data_V_0_vld_out, "input_AX_ALGpalma0_data_V_0_vld_out");
    sc_trace(mVcdFile, input_AX_ALGpalma0_data_V_0_ack_in, "input_AX_ALGpalma0_data_V_0_ack_in");
    sc_trace(mVcdFile, input_AX_ALGpalma0_data_V_0_ack_out, "input_AX_ALGpalma0_data_V_0_ack_out");
    sc_trace(mVcdFile, input_AX_ALGpalma0_data_V_0_payload_A, "input_AX_ALGpalma0_data_V_0_payload_A");
    sc_trace(mVcdFile, input_AX_ALGpalma0_data_V_0_payload_B, "input_AX_ALGpalma0_data_V_0_payload_B");
    sc_trace(mVcdFile, input_AX_ALGpalma0_data_V_0_sel_rd, "input_AX_ALGpalma0_data_V_0_sel_rd");
    sc_trace(mVcdFile, input_AX_ALGpalma0_data_V_0_sel_wr, "input_AX_ALGpalma0_data_V_0_sel_wr");
    sc_trace(mVcdFile, input_AX_ALGpalma0_data_V_0_sel, "input_AX_ALGpalma0_data_V_0_sel");
    sc_trace(mVcdFile, input_AX_ALGpalma0_data_V_0_load_A, "input_AX_ALGpalma0_data_V_0_load_A");
    sc_trace(mVcdFile, input_AX_ALGpalma0_data_V_0_load_B, "input_AX_ALGpalma0_data_V_0_load_B");
    sc_trace(mVcdFile, input_AX_ALGpalma0_data_V_0_state, "input_AX_ALGpalma0_data_V_0_state");
    sc_trace(mVcdFile, input_AX_ALGpalma0_data_V_0_state_cmp_full, "input_AX_ALGpalma0_data_V_0_state_cmp_full");
    sc_trace(mVcdFile, input_AX_ALGpalma0_keep_V_0_data_out, "input_AX_ALGpalma0_keep_V_0_data_out");
    sc_trace(mVcdFile, input_AX_ALGpalma0_keep_V_0_vld_in, "input_AX_ALGpalma0_keep_V_0_vld_in");
    sc_trace(mVcdFile, input_AX_ALGpalma0_keep_V_0_vld_out, "input_AX_ALGpalma0_keep_V_0_vld_out");
    sc_trace(mVcdFile, input_AX_ALGpalma0_keep_V_0_ack_in, "input_AX_ALGpalma0_keep_V_0_ack_in");
    sc_trace(mVcdFile, input_AX_ALGpalma0_keep_V_0_ack_out, "input_AX_ALGpalma0_keep_V_0_ack_out");
    sc_trace(mVcdFile, input_AX_ALGpalma0_keep_V_0_payload_A, "input_AX_ALGpalma0_keep_V_0_payload_A");
    sc_trace(mVcdFile, input_AX_ALGpalma0_keep_V_0_payload_B, "input_AX_ALGpalma0_keep_V_0_payload_B");
    sc_trace(mVcdFile, input_AX_ALGpalma0_keep_V_0_sel_rd, "input_AX_ALGpalma0_keep_V_0_sel_rd");
    sc_trace(mVcdFile, input_AX_ALGpalma0_keep_V_0_sel_wr, "input_AX_ALGpalma0_keep_V_0_sel_wr");
    sc_trace(mVcdFile, input_AX_ALGpalma0_keep_V_0_sel, "input_AX_ALGpalma0_keep_V_0_sel");
    sc_trace(mVcdFile, input_AX_ALGpalma0_keep_V_0_load_A, "input_AX_ALGpalma0_keep_V_0_load_A");
    sc_trace(mVcdFile, input_AX_ALGpalma0_keep_V_0_load_B, "input_AX_ALGpalma0_keep_V_0_load_B");
    sc_trace(mVcdFile, input_AX_ALGpalma0_keep_V_0_state, "input_AX_ALGpalma0_keep_V_0_state");
    sc_trace(mVcdFile, input_AX_ALGpalma0_keep_V_0_state_cmp_full, "input_AX_ALGpalma0_keep_V_0_state_cmp_full");
    sc_trace(mVcdFile, input_AX_ALGpalma0_strb_V_0_data_out, "input_AX_ALGpalma0_strb_V_0_data_out");
    sc_trace(mVcdFile, input_AX_ALGpalma0_strb_V_0_vld_in, "input_AX_ALGpalma0_strb_V_0_vld_in");
    sc_trace(mVcdFile, input_AX_ALGpalma0_strb_V_0_vld_out, "input_AX_ALGpalma0_strb_V_0_vld_out");
    sc_trace(mVcdFile, input_AX_ALGpalma0_strb_V_0_ack_in, "input_AX_ALGpalma0_strb_V_0_ack_in");
    sc_trace(mVcdFile, input_AX_ALGpalma0_strb_V_0_ack_out, "input_AX_ALGpalma0_strb_V_0_ack_out");
    sc_trace(mVcdFile, input_AX_ALGpalma0_strb_V_0_payload_A, "input_AX_ALGpalma0_strb_V_0_payload_A");
    sc_trace(mVcdFile, input_AX_ALGpalma0_strb_V_0_payload_B, "input_AX_ALGpalma0_strb_V_0_payload_B");
    sc_trace(mVcdFile, input_AX_ALGpalma0_strb_V_0_sel_rd, "input_AX_ALGpalma0_strb_V_0_sel_rd");
    sc_trace(mVcdFile, input_AX_ALGpalma0_strb_V_0_sel_wr, "input_AX_ALGpalma0_strb_V_0_sel_wr");
    sc_trace(mVcdFile, input_AX_ALGpalma0_strb_V_0_sel, "input_AX_ALGpalma0_strb_V_0_sel");
    sc_trace(mVcdFile, input_AX_ALGpalma0_strb_V_0_load_A, "input_AX_ALGpalma0_strb_V_0_load_A");
    sc_trace(mVcdFile, input_AX_ALGpalma0_strb_V_0_load_B, "input_AX_ALGpalma0_strb_V_0_load_B");
    sc_trace(mVcdFile, input_AX_ALGpalma0_strb_V_0_state, "input_AX_ALGpalma0_strb_V_0_state");
    sc_trace(mVcdFile, input_AX_ALGpalma0_strb_V_0_state_cmp_full, "input_AX_ALGpalma0_strb_V_0_state_cmp_full");
    sc_trace(mVcdFile, input_AX_ALGpalma0_user_V_0_data_out, "input_AX_ALGpalma0_user_V_0_data_out");
    sc_trace(mVcdFile, input_AX_ALGpalma0_user_V_0_vld_in, "input_AX_ALGpalma0_user_V_0_vld_in");
    sc_trace(mVcdFile, input_AX_ALGpalma0_user_V_0_vld_out, "input_AX_ALGpalma0_user_V_0_vld_out");
    sc_trace(mVcdFile, input_AX_ALGpalma0_user_V_0_ack_in, "input_AX_ALGpalma0_user_V_0_ack_in");
    sc_trace(mVcdFile, input_AX_ALGpalma0_user_V_0_ack_out, "input_AX_ALGpalma0_user_V_0_ack_out");
    sc_trace(mVcdFile, input_AX_ALGpalma0_user_V_0_payload_A, "input_AX_ALGpalma0_user_V_0_payload_A");
    sc_trace(mVcdFile, input_AX_ALGpalma0_user_V_0_payload_B, "input_AX_ALGpalma0_user_V_0_payload_B");
    sc_trace(mVcdFile, input_AX_ALGpalma0_user_V_0_sel_rd, "input_AX_ALGpalma0_user_V_0_sel_rd");
    sc_trace(mVcdFile, input_AX_ALGpalma0_user_V_0_sel_wr, "input_AX_ALGpalma0_user_V_0_sel_wr");
    sc_trace(mVcdFile, input_AX_ALGpalma0_user_V_0_sel, "input_AX_ALGpalma0_user_V_0_sel");
    sc_trace(mVcdFile, input_AX_ALGpalma0_user_V_0_load_A, "input_AX_ALGpalma0_user_V_0_load_A");
    sc_trace(mVcdFile, input_AX_ALGpalma0_user_V_0_load_B, "input_AX_ALGpalma0_user_V_0_load_B");
    sc_trace(mVcdFile, input_AX_ALGpalma0_user_V_0_state, "input_AX_ALGpalma0_user_V_0_state");
    sc_trace(mVcdFile, input_AX_ALGpalma0_user_V_0_state_cmp_full, "input_AX_ALGpalma0_user_V_0_state_cmp_full");
    sc_trace(mVcdFile, input_AX_ALGpalma0_last_V_0_data_out, "input_AX_ALGpalma0_last_V_0_data_out");
    sc_trace(mVcdFile, input_AX_ALGpalma0_last_V_0_vld_in, "input_AX_ALGpalma0_last_V_0_vld_in");
    sc_trace(mVcdFile, input_AX_ALGpalma0_last_V_0_vld_out, "input_AX_ALGpalma0_last_V_0_vld_out");
    sc_trace(mVcdFile, input_AX_ALGpalma0_last_V_0_ack_in, "input_AX_ALGpalma0_last_V_0_ack_in");
    sc_trace(mVcdFile, input_AX_ALGpalma0_last_V_0_ack_out, "input_AX_ALGpalma0_last_V_0_ack_out");
    sc_trace(mVcdFile, input_AX_ALGpalma0_last_V_0_payload_A, "input_AX_ALGpalma0_last_V_0_payload_A");
    sc_trace(mVcdFile, input_AX_ALGpalma0_last_V_0_payload_B, "input_AX_ALGpalma0_last_V_0_payload_B");
    sc_trace(mVcdFile, input_AX_ALGpalma0_last_V_0_sel_rd, "input_AX_ALGpalma0_last_V_0_sel_rd");
    sc_trace(mVcdFile, input_AX_ALGpalma0_last_V_0_sel_wr, "input_AX_ALGpalma0_last_V_0_sel_wr");
    sc_trace(mVcdFile, input_AX_ALGpalma0_last_V_0_sel, "input_AX_ALGpalma0_last_V_0_sel");
    sc_trace(mVcdFile, input_AX_ALGpalma0_last_V_0_load_A, "input_AX_ALGpalma0_last_V_0_load_A");
    sc_trace(mVcdFile, input_AX_ALGpalma0_last_V_0_load_B, "input_AX_ALGpalma0_last_V_0_load_B");
    sc_trace(mVcdFile, input_AX_ALGpalma0_last_V_0_state, "input_AX_ALGpalma0_last_V_0_state");
    sc_trace(mVcdFile, input_AX_ALGpalma0_last_V_0_state_cmp_full, "input_AX_ALGpalma0_last_V_0_state_cmp_full");
    sc_trace(mVcdFile, input_AX_ALGpalma0_id_V_0_data_out, "input_AX_ALGpalma0_id_V_0_data_out");
    sc_trace(mVcdFile, input_AX_ALGpalma0_id_V_0_vld_in, "input_AX_ALGpalma0_id_V_0_vld_in");
    sc_trace(mVcdFile, input_AX_ALGpalma0_id_V_0_vld_out, "input_AX_ALGpalma0_id_V_0_vld_out");
    sc_trace(mVcdFile, input_AX_ALGpalma0_id_V_0_ack_in, "input_AX_ALGpalma0_id_V_0_ack_in");
    sc_trace(mVcdFile, input_AX_ALGpalma0_id_V_0_ack_out, "input_AX_ALGpalma0_id_V_0_ack_out");
    sc_trace(mVcdFile, input_AX_ALGpalma0_id_V_0_payload_A, "input_AX_ALGpalma0_id_V_0_payload_A");
    sc_trace(mVcdFile, input_AX_ALGpalma0_id_V_0_payload_B, "input_AX_ALGpalma0_id_V_0_payload_B");
    sc_trace(mVcdFile, input_AX_ALGpalma0_id_V_0_sel_rd, "input_AX_ALGpalma0_id_V_0_sel_rd");
    sc_trace(mVcdFile, input_AX_ALGpalma0_id_V_0_sel_wr, "input_AX_ALGpalma0_id_V_0_sel_wr");
    sc_trace(mVcdFile, input_AX_ALGpalma0_id_V_0_sel, "input_AX_ALGpalma0_id_V_0_sel");
    sc_trace(mVcdFile, input_AX_ALGpalma0_id_V_0_load_A, "input_AX_ALGpalma0_id_V_0_load_A");
    sc_trace(mVcdFile, input_AX_ALGpalma0_id_V_0_load_B, "input_AX_ALGpalma0_id_V_0_load_B");
    sc_trace(mVcdFile, input_AX_ALGpalma0_id_V_0_state, "input_AX_ALGpalma0_id_V_0_state");
    sc_trace(mVcdFile, input_AX_ALGpalma0_id_V_0_state_cmp_full, "input_AX_ALGpalma0_id_V_0_state_cmp_full");
    sc_trace(mVcdFile, input_AX_ALGpalma0_dest_V_0_data_out, "input_AX_ALGpalma0_dest_V_0_data_out");
    sc_trace(mVcdFile, input_AX_ALGpalma0_dest_V_0_vld_in, "input_AX_ALGpalma0_dest_V_0_vld_in");
    sc_trace(mVcdFile, input_AX_ALGpalma0_dest_V_0_vld_out, "input_AX_ALGpalma0_dest_V_0_vld_out");
    sc_trace(mVcdFile, input_AX_ALGpalma0_dest_V_0_ack_in, "input_AX_ALGpalma0_dest_V_0_ack_in");
    sc_trace(mVcdFile, input_AX_ALGpalma0_dest_V_0_ack_out, "input_AX_ALGpalma0_dest_V_0_ack_out");
    sc_trace(mVcdFile, input_AX_ALGpalma0_dest_V_0_payload_A, "input_AX_ALGpalma0_dest_V_0_payload_A");
    sc_trace(mVcdFile, input_AX_ALGpalma0_dest_V_0_payload_B, "input_AX_ALGpalma0_dest_V_0_payload_B");
    sc_trace(mVcdFile, input_AX_ALGpalma0_dest_V_0_sel_rd, "input_AX_ALGpalma0_dest_V_0_sel_rd");
    sc_trace(mVcdFile, input_AX_ALGpalma0_dest_V_0_sel_wr, "input_AX_ALGpalma0_dest_V_0_sel_wr");
    sc_trace(mVcdFile, input_AX_ALGpalma0_dest_V_0_sel, "input_AX_ALGpalma0_dest_V_0_sel");
    sc_trace(mVcdFile, input_AX_ALGpalma0_dest_V_0_load_A, "input_AX_ALGpalma0_dest_V_0_load_A");
    sc_trace(mVcdFile, input_AX_ALGpalma0_dest_V_0_load_B, "input_AX_ALGpalma0_dest_V_0_load_B");
    sc_trace(mVcdFile, input_AX_ALGpalma0_dest_V_0_state, "input_AX_ALGpalma0_dest_V_0_state");
    sc_trace(mVcdFile, input_AX_ALGpalma0_dest_V_0_state_cmp_full, "input_AX_ALGpalma0_dest_V_0_state_cmp_full");
    sc_trace(mVcdFile, input_AX_ALGdedo1_data_V_0_data_out, "input_AX_ALGdedo1_data_V_0_data_out");
    sc_trace(mVcdFile, input_AX_ALGdedo1_data_V_0_vld_in, "input_AX_ALGdedo1_data_V_0_vld_in");
    sc_trace(mVcdFile, input_AX_ALGdedo1_data_V_0_vld_out, "input_AX_ALGdedo1_data_V_0_vld_out");
    sc_trace(mVcdFile, input_AX_ALGdedo1_data_V_0_ack_in, "input_AX_ALGdedo1_data_V_0_ack_in");
    sc_trace(mVcdFile, input_AX_ALGdedo1_data_V_0_ack_out, "input_AX_ALGdedo1_data_V_0_ack_out");
    sc_trace(mVcdFile, input_AX_ALGdedo1_data_V_0_payload_A, "input_AX_ALGdedo1_data_V_0_payload_A");
    sc_trace(mVcdFile, input_AX_ALGdedo1_data_V_0_payload_B, "input_AX_ALGdedo1_data_V_0_payload_B");
    sc_trace(mVcdFile, input_AX_ALGdedo1_data_V_0_sel_rd, "input_AX_ALGdedo1_data_V_0_sel_rd");
    sc_trace(mVcdFile, input_AX_ALGdedo1_data_V_0_sel_wr, "input_AX_ALGdedo1_data_V_0_sel_wr");
    sc_trace(mVcdFile, input_AX_ALGdedo1_data_V_0_sel, "input_AX_ALGdedo1_data_V_0_sel");
    sc_trace(mVcdFile, input_AX_ALGdedo1_data_V_0_load_A, "input_AX_ALGdedo1_data_V_0_load_A");
    sc_trace(mVcdFile, input_AX_ALGdedo1_data_V_0_load_B, "input_AX_ALGdedo1_data_V_0_load_B");
    sc_trace(mVcdFile, input_AX_ALGdedo1_data_V_0_state, "input_AX_ALGdedo1_data_V_0_state");
    sc_trace(mVcdFile, input_AX_ALGdedo1_data_V_0_state_cmp_full, "input_AX_ALGdedo1_data_V_0_state_cmp_full");
    sc_trace(mVcdFile, input_AX_ALGdedo1_keep_V_0_data_out, "input_AX_ALGdedo1_keep_V_0_data_out");
    sc_trace(mVcdFile, input_AX_ALGdedo1_keep_V_0_vld_in, "input_AX_ALGdedo1_keep_V_0_vld_in");
    sc_trace(mVcdFile, input_AX_ALGdedo1_keep_V_0_vld_out, "input_AX_ALGdedo1_keep_V_0_vld_out");
    sc_trace(mVcdFile, input_AX_ALGdedo1_keep_V_0_ack_in, "input_AX_ALGdedo1_keep_V_0_ack_in");
    sc_trace(mVcdFile, input_AX_ALGdedo1_keep_V_0_ack_out, "input_AX_ALGdedo1_keep_V_0_ack_out");
    sc_trace(mVcdFile, input_AX_ALGdedo1_keep_V_0_payload_A, "input_AX_ALGdedo1_keep_V_0_payload_A");
    sc_trace(mVcdFile, input_AX_ALGdedo1_keep_V_0_payload_B, "input_AX_ALGdedo1_keep_V_0_payload_B");
    sc_trace(mVcdFile, input_AX_ALGdedo1_keep_V_0_sel_rd, "input_AX_ALGdedo1_keep_V_0_sel_rd");
    sc_trace(mVcdFile, input_AX_ALGdedo1_keep_V_0_sel_wr, "input_AX_ALGdedo1_keep_V_0_sel_wr");
    sc_trace(mVcdFile, input_AX_ALGdedo1_keep_V_0_sel, "input_AX_ALGdedo1_keep_V_0_sel");
    sc_trace(mVcdFile, input_AX_ALGdedo1_keep_V_0_load_A, "input_AX_ALGdedo1_keep_V_0_load_A");
    sc_trace(mVcdFile, input_AX_ALGdedo1_keep_V_0_load_B, "input_AX_ALGdedo1_keep_V_0_load_B");
    sc_trace(mVcdFile, input_AX_ALGdedo1_keep_V_0_state, "input_AX_ALGdedo1_keep_V_0_state");
    sc_trace(mVcdFile, input_AX_ALGdedo1_keep_V_0_state_cmp_full, "input_AX_ALGdedo1_keep_V_0_state_cmp_full");
    sc_trace(mVcdFile, input_AX_ALGdedo1_strb_V_0_data_out, "input_AX_ALGdedo1_strb_V_0_data_out");
    sc_trace(mVcdFile, input_AX_ALGdedo1_strb_V_0_vld_in, "input_AX_ALGdedo1_strb_V_0_vld_in");
    sc_trace(mVcdFile, input_AX_ALGdedo1_strb_V_0_vld_out, "input_AX_ALGdedo1_strb_V_0_vld_out");
    sc_trace(mVcdFile, input_AX_ALGdedo1_strb_V_0_ack_in, "input_AX_ALGdedo1_strb_V_0_ack_in");
    sc_trace(mVcdFile, input_AX_ALGdedo1_strb_V_0_ack_out, "input_AX_ALGdedo1_strb_V_0_ack_out");
    sc_trace(mVcdFile, input_AX_ALGdedo1_strb_V_0_payload_A, "input_AX_ALGdedo1_strb_V_0_payload_A");
    sc_trace(mVcdFile, input_AX_ALGdedo1_strb_V_0_payload_B, "input_AX_ALGdedo1_strb_V_0_payload_B");
    sc_trace(mVcdFile, input_AX_ALGdedo1_strb_V_0_sel_rd, "input_AX_ALGdedo1_strb_V_0_sel_rd");
    sc_trace(mVcdFile, input_AX_ALGdedo1_strb_V_0_sel_wr, "input_AX_ALGdedo1_strb_V_0_sel_wr");
    sc_trace(mVcdFile, input_AX_ALGdedo1_strb_V_0_sel, "input_AX_ALGdedo1_strb_V_0_sel");
    sc_trace(mVcdFile, input_AX_ALGdedo1_strb_V_0_load_A, "input_AX_ALGdedo1_strb_V_0_load_A");
    sc_trace(mVcdFile, input_AX_ALGdedo1_strb_V_0_load_B, "input_AX_ALGdedo1_strb_V_0_load_B");
    sc_trace(mVcdFile, input_AX_ALGdedo1_strb_V_0_state, "input_AX_ALGdedo1_strb_V_0_state");
    sc_trace(mVcdFile, input_AX_ALGdedo1_strb_V_0_state_cmp_full, "input_AX_ALGdedo1_strb_V_0_state_cmp_full");
    sc_trace(mVcdFile, input_AX_ALGdedo1_user_V_0_data_out, "input_AX_ALGdedo1_user_V_0_data_out");
    sc_trace(mVcdFile, input_AX_ALGdedo1_user_V_0_vld_in, "input_AX_ALGdedo1_user_V_0_vld_in");
    sc_trace(mVcdFile, input_AX_ALGdedo1_user_V_0_vld_out, "input_AX_ALGdedo1_user_V_0_vld_out");
    sc_trace(mVcdFile, input_AX_ALGdedo1_user_V_0_ack_in, "input_AX_ALGdedo1_user_V_0_ack_in");
    sc_trace(mVcdFile, input_AX_ALGdedo1_user_V_0_ack_out, "input_AX_ALGdedo1_user_V_0_ack_out");
    sc_trace(mVcdFile, input_AX_ALGdedo1_user_V_0_payload_A, "input_AX_ALGdedo1_user_V_0_payload_A");
    sc_trace(mVcdFile, input_AX_ALGdedo1_user_V_0_payload_B, "input_AX_ALGdedo1_user_V_0_payload_B");
    sc_trace(mVcdFile, input_AX_ALGdedo1_user_V_0_sel_rd, "input_AX_ALGdedo1_user_V_0_sel_rd");
    sc_trace(mVcdFile, input_AX_ALGdedo1_user_V_0_sel_wr, "input_AX_ALGdedo1_user_V_0_sel_wr");
    sc_trace(mVcdFile, input_AX_ALGdedo1_user_V_0_sel, "input_AX_ALGdedo1_user_V_0_sel");
    sc_trace(mVcdFile, input_AX_ALGdedo1_user_V_0_load_A, "input_AX_ALGdedo1_user_V_0_load_A");
    sc_trace(mVcdFile, input_AX_ALGdedo1_user_V_0_load_B, "input_AX_ALGdedo1_user_V_0_load_B");
    sc_trace(mVcdFile, input_AX_ALGdedo1_user_V_0_state, "input_AX_ALGdedo1_user_V_0_state");
    sc_trace(mVcdFile, input_AX_ALGdedo1_user_V_0_state_cmp_full, "input_AX_ALGdedo1_user_V_0_state_cmp_full");
    sc_trace(mVcdFile, input_AX_ALGdedo1_last_V_0_data_out, "input_AX_ALGdedo1_last_V_0_data_out");
    sc_trace(mVcdFile, input_AX_ALGdedo1_last_V_0_vld_in, "input_AX_ALGdedo1_last_V_0_vld_in");
    sc_trace(mVcdFile, input_AX_ALGdedo1_last_V_0_vld_out, "input_AX_ALGdedo1_last_V_0_vld_out");
    sc_trace(mVcdFile, input_AX_ALGdedo1_last_V_0_ack_in, "input_AX_ALGdedo1_last_V_0_ack_in");
    sc_trace(mVcdFile, input_AX_ALGdedo1_last_V_0_ack_out, "input_AX_ALGdedo1_last_V_0_ack_out");
    sc_trace(mVcdFile, input_AX_ALGdedo1_last_V_0_payload_A, "input_AX_ALGdedo1_last_V_0_payload_A");
    sc_trace(mVcdFile, input_AX_ALGdedo1_last_V_0_payload_B, "input_AX_ALGdedo1_last_V_0_payload_B");
    sc_trace(mVcdFile, input_AX_ALGdedo1_last_V_0_sel_rd, "input_AX_ALGdedo1_last_V_0_sel_rd");
    sc_trace(mVcdFile, input_AX_ALGdedo1_last_V_0_sel_wr, "input_AX_ALGdedo1_last_V_0_sel_wr");
    sc_trace(mVcdFile, input_AX_ALGdedo1_last_V_0_sel, "input_AX_ALGdedo1_last_V_0_sel");
    sc_trace(mVcdFile, input_AX_ALGdedo1_last_V_0_load_A, "input_AX_ALGdedo1_last_V_0_load_A");
    sc_trace(mVcdFile, input_AX_ALGdedo1_last_V_0_load_B, "input_AX_ALGdedo1_last_V_0_load_B");
    sc_trace(mVcdFile, input_AX_ALGdedo1_last_V_0_state, "input_AX_ALGdedo1_last_V_0_state");
    sc_trace(mVcdFile, input_AX_ALGdedo1_last_V_0_state_cmp_full, "input_AX_ALGdedo1_last_V_0_state_cmp_full");
    sc_trace(mVcdFile, input_AX_ALGdedo1_id_V_0_data_out, "input_AX_ALGdedo1_id_V_0_data_out");
    sc_trace(mVcdFile, input_AX_ALGdedo1_id_V_0_vld_in, "input_AX_ALGdedo1_id_V_0_vld_in");
    sc_trace(mVcdFile, input_AX_ALGdedo1_id_V_0_vld_out, "input_AX_ALGdedo1_id_V_0_vld_out");
    sc_trace(mVcdFile, input_AX_ALGdedo1_id_V_0_ack_in, "input_AX_ALGdedo1_id_V_0_ack_in");
    sc_trace(mVcdFile, input_AX_ALGdedo1_id_V_0_ack_out, "input_AX_ALGdedo1_id_V_0_ack_out");
    sc_trace(mVcdFile, input_AX_ALGdedo1_id_V_0_payload_A, "input_AX_ALGdedo1_id_V_0_payload_A");
    sc_trace(mVcdFile, input_AX_ALGdedo1_id_V_0_payload_B, "input_AX_ALGdedo1_id_V_0_payload_B");
    sc_trace(mVcdFile, input_AX_ALGdedo1_id_V_0_sel_rd, "input_AX_ALGdedo1_id_V_0_sel_rd");
    sc_trace(mVcdFile, input_AX_ALGdedo1_id_V_0_sel_wr, "input_AX_ALGdedo1_id_V_0_sel_wr");
    sc_trace(mVcdFile, input_AX_ALGdedo1_id_V_0_sel, "input_AX_ALGdedo1_id_V_0_sel");
    sc_trace(mVcdFile, input_AX_ALGdedo1_id_V_0_load_A, "input_AX_ALGdedo1_id_V_0_load_A");
    sc_trace(mVcdFile, input_AX_ALGdedo1_id_V_0_load_B, "input_AX_ALGdedo1_id_V_0_load_B");
    sc_trace(mVcdFile, input_AX_ALGdedo1_id_V_0_state, "input_AX_ALGdedo1_id_V_0_state");
    sc_trace(mVcdFile, input_AX_ALGdedo1_id_V_0_state_cmp_full, "input_AX_ALGdedo1_id_V_0_state_cmp_full");
    sc_trace(mVcdFile, input_AX_ALGdedo1_dest_V_0_data_out, "input_AX_ALGdedo1_dest_V_0_data_out");
    sc_trace(mVcdFile, input_AX_ALGdedo1_dest_V_0_vld_in, "input_AX_ALGdedo1_dest_V_0_vld_in");
    sc_trace(mVcdFile, input_AX_ALGdedo1_dest_V_0_vld_out, "input_AX_ALGdedo1_dest_V_0_vld_out");
    sc_trace(mVcdFile, input_AX_ALGdedo1_dest_V_0_ack_in, "input_AX_ALGdedo1_dest_V_0_ack_in");
    sc_trace(mVcdFile, input_AX_ALGdedo1_dest_V_0_ack_out, "input_AX_ALGdedo1_dest_V_0_ack_out");
    sc_trace(mVcdFile, input_AX_ALGdedo1_dest_V_0_payload_A, "input_AX_ALGdedo1_dest_V_0_payload_A");
    sc_trace(mVcdFile, input_AX_ALGdedo1_dest_V_0_payload_B, "input_AX_ALGdedo1_dest_V_0_payload_B");
    sc_trace(mVcdFile, input_AX_ALGdedo1_dest_V_0_sel_rd, "input_AX_ALGdedo1_dest_V_0_sel_rd");
    sc_trace(mVcdFile, input_AX_ALGdedo1_dest_V_0_sel_wr, "input_AX_ALGdedo1_dest_V_0_sel_wr");
    sc_trace(mVcdFile, input_AX_ALGdedo1_dest_V_0_sel, "input_AX_ALGdedo1_dest_V_0_sel");
    sc_trace(mVcdFile, input_AX_ALGdedo1_dest_V_0_load_A, "input_AX_ALGdedo1_dest_V_0_load_A");
    sc_trace(mVcdFile, input_AX_ALGdedo1_dest_V_0_load_B, "input_AX_ALGdedo1_dest_V_0_load_B");
    sc_trace(mVcdFile, input_AX_ALGdedo1_dest_V_0_state, "input_AX_ALGdedo1_dest_V_0_state");
    sc_trace(mVcdFile, input_AX_ALGdedo1_dest_V_0_state_cmp_full, "input_AX_ALGdedo1_dest_V_0_state_cmp_full");
    sc_trace(mVcdFile, input_AX_ALGpalma1_data_V_0_data_out, "input_AX_ALGpalma1_data_V_0_data_out");
    sc_trace(mVcdFile, input_AX_ALGpalma1_data_V_0_vld_in, "input_AX_ALGpalma1_data_V_0_vld_in");
    sc_trace(mVcdFile, input_AX_ALGpalma1_data_V_0_vld_out, "input_AX_ALGpalma1_data_V_0_vld_out");
    sc_trace(mVcdFile, input_AX_ALGpalma1_data_V_0_ack_in, "input_AX_ALGpalma1_data_V_0_ack_in");
    sc_trace(mVcdFile, input_AX_ALGpalma1_data_V_0_ack_out, "input_AX_ALGpalma1_data_V_0_ack_out");
    sc_trace(mVcdFile, input_AX_ALGpalma1_data_V_0_payload_A, "input_AX_ALGpalma1_data_V_0_payload_A");
    sc_trace(mVcdFile, input_AX_ALGpalma1_data_V_0_payload_B, "input_AX_ALGpalma1_data_V_0_payload_B");
    sc_trace(mVcdFile, input_AX_ALGpalma1_data_V_0_sel_rd, "input_AX_ALGpalma1_data_V_0_sel_rd");
    sc_trace(mVcdFile, input_AX_ALGpalma1_data_V_0_sel_wr, "input_AX_ALGpalma1_data_V_0_sel_wr");
    sc_trace(mVcdFile, input_AX_ALGpalma1_data_V_0_sel, "input_AX_ALGpalma1_data_V_0_sel");
    sc_trace(mVcdFile, input_AX_ALGpalma1_data_V_0_load_A, "input_AX_ALGpalma1_data_V_0_load_A");
    sc_trace(mVcdFile, input_AX_ALGpalma1_data_V_0_load_B, "input_AX_ALGpalma1_data_V_0_load_B");
    sc_trace(mVcdFile, input_AX_ALGpalma1_data_V_0_state, "input_AX_ALGpalma1_data_V_0_state");
    sc_trace(mVcdFile, input_AX_ALGpalma1_data_V_0_state_cmp_full, "input_AX_ALGpalma1_data_V_0_state_cmp_full");
    sc_trace(mVcdFile, input_AX_ALGpalma1_keep_V_0_data_out, "input_AX_ALGpalma1_keep_V_0_data_out");
    sc_trace(mVcdFile, input_AX_ALGpalma1_keep_V_0_vld_in, "input_AX_ALGpalma1_keep_V_0_vld_in");
    sc_trace(mVcdFile, input_AX_ALGpalma1_keep_V_0_vld_out, "input_AX_ALGpalma1_keep_V_0_vld_out");
    sc_trace(mVcdFile, input_AX_ALGpalma1_keep_V_0_ack_in, "input_AX_ALGpalma1_keep_V_0_ack_in");
    sc_trace(mVcdFile, input_AX_ALGpalma1_keep_V_0_ack_out, "input_AX_ALGpalma1_keep_V_0_ack_out");
    sc_trace(mVcdFile, input_AX_ALGpalma1_keep_V_0_payload_A, "input_AX_ALGpalma1_keep_V_0_payload_A");
    sc_trace(mVcdFile, input_AX_ALGpalma1_keep_V_0_payload_B, "input_AX_ALGpalma1_keep_V_0_payload_B");
    sc_trace(mVcdFile, input_AX_ALGpalma1_keep_V_0_sel_rd, "input_AX_ALGpalma1_keep_V_0_sel_rd");
    sc_trace(mVcdFile, input_AX_ALGpalma1_keep_V_0_sel_wr, "input_AX_ALGpalma1_keep_V_0_sel_wr");
    sc_trace(mVcdFile, input_AX_ALGpalma1_keep_V_0_sel, "input_AX_ALGpalma1_keep_V_0_sel");
    sc_trace(mVcdFile, input_AX_ALGpalma1_keep_V_0_load_A, "input_AX_ALGpalma1_keep_V_0_load_A");
    sc_trace(mVcdFile, input_AX_ALGpalma1_keep_V_0_load_B, "input_AX_ALGpalma1_keep_V_0_load_B");
    sc_trace(mVcdFile, input_AX_ALGpalma1_keep_V_0_state, "input_AX_ALGpalma1_keep_V_0_state");
    sc_trace(mVcdFile, input_AX_ALGpalma1_keep_V_0_state_cmp_full, "input_AX_ALGpalma1_keep_V_0_state_cmp_full");
    sc_trace(mVcdFile, input_AX_ALGpalma1_strb_V_0_data_out, "input_AX_ALGpalma1_strb_V_0_data_out");
    sc_trace(mVcdFile, input_AX_ALGpalma1_strb_V_0_vld_in, "input_AX_ALGpalma1_strb_V_0_vld_in");
    sc_trace(mVcdFile, input_AX_ALGpalma1_strb_V_0_vld_out, "input_AX_ALGpalma1_strb_V_0_vld_out");
    sc_trace(mVcdFile, input_AX_ALGpalma1_strb_V_0_ack_in, "input_AX_ALGpalma1_strb_V_0_ack_in");
    sc_trace(mVcdFile, input_AX_ALGpalma1_strb_V_0_ack_out, "input_AX_ALGpalma1_strb_V_0_ack_out");
    sc_trace(mVcdFile, input_AX_ALGpalma1_strb_V_0_payload_A, "input_AX_ALGpalma1_strb_V_0_payload_A");
    sc_trace(mVcdFile, input_AX_ALGpalma1_strb_V_0_payload_B, "input_AX_ALGpalma1_strb_V_0_payload_B");
    sc_trace(mVcdFile, input_AX_ALGpalma1_strb_V_0_sel_rd, "input_AX_ALGpalma1_strb_V_0_sel_rd");
    sc_trace(mVcdFile, input_AX_ALGpalma1_strb_V_0_sel_wr, "input_AX_ALGpalma1_strb_V_0_sel_wr");
    sc_trace(mVcdFile, input_AX_ALGpalma1_strb_V_0_sel, "input_AX_ALGpalma1_strb_V_0_sel");
    sc_trace(mVcdFile, input_AX_ALGpalma1_strb_V_0_load_A, "input_AX_ALGpalma1_strb_V_0_load_A");
    sc_trace(mVcdFile, input_AX_ALGpalma1_strb_V_0_load_B, "input_AX_ALGpalma1_strb_V_0_load_B");
    sc_trace(mVcdFile, input_AX_ALGpalma1_strb_V_0_state, "input_AX_ALGpalma1_strb_V_0_state");
    sc_trace(mVcdFile, input_AX_ALGpalma1_strb_V_0_state_cmp_full, "input_AX_ALGpalma1_strb_V_0_state_cmp_full");
    sc_trace(mVcdFile, input_AX_ALGpalma1_user_V_0_data_out, "input_AX_ALGpalma1_user_V_0_data_out");
    sc_trace(mVcdFile, input_AX_ALGpalma1_user_V_0_vld_in, "input_AX_ALGpalma1_user_V_0_vld_in");
    sc_trace(mVcdFile, input_AX_ALGpalma1_user_V_0_vld_out, "input_AX_ALGpalma1_user_V_0_vld_out");
    sc_trace(mVcdFile, input_AX_ALGpalma1_user_V_0_ack_in, "input_AX_ALGpalma1_user_V_0_ack_in");
    sc_trace(mVcdFile, input_AX_ALGpalma1_user_V_0_ack_out, "input_AX_ALGpalma1_user_V_0_ack_out");
    sc_trace(mVcdFile, input_AX_ALGpalma1_user_V_0_payload_A, "input_AX_ALGpalma1_user_V_0_payload_A");
    sc_trace(mVcdFile, input_AX_ALGpalma1_user_V_0_payload_B, "input_AX_ALGpalma1_user_V_0_payload_B");
    sc_trace(mVcdFile, input_AX_ALGpalma1_user_V_0_sel_rd, "input_AX_ALGpalma1_user_V_0_sel_rd");
    sc_trace(mVcdFile, input_AX_ALGpalma1_user_V_0_sel_wr, "input_AX_ALGpalma1_user_V_0_sel_wr");
    sc_trace(mVcdFile, input_AX_ALGpalma1_user_V_0_sel, "input_AX_ALGpalma1_user_V_0_sel");
    sc_trace(mVcdFile, input_AX_ALGpalma1_user_V_0_load_A, "input_AX_ALGpalma1_user_V_0_load_A");
    sc_trace(mVcdFile, input_AX_ALGpalma1_user_V_0_load_B, "input_AX_ALGpalma1_user_V_0_load_B");
    sc_trace(mVcdFile, input_AX_ALGpalma1_user_V_0_state, "input_AX_ALGpalma1_user_V_0_state");
    sc_trace(mVcdFile, input_AX_ALGpalma1_user_V_0_state_cmp_full, "input_AX_ALGpalma1_user_V_0_state_cmp_full");
    sc_trace(mVcdFile, input_AX_ALGpalma1_last_V_0_data_out, "input_AX_ALGpalma1_last_V_0_data_out");
    sc_trace(mVcdFile, input_AX_ALGpalma1_last_V_0_vld_in, "input_AX_ALGpalma1_last_V_0_vld_in");
    sc_trace(mVcdFile, input_AX_ALGpalma1_last_V_0_vld_out, "input_AX_ALGpalma1_last_V_0_vld_out");
    sc_trace(mVcdFile, input_AX_ALGpalma1_last_V_0_ack_in, "input_AX_ALGpalma1_last_V_0_ack_in");
    sc_trace(mVcdFile, input_AX_ALGpalma1_last_V_0_ack_out, "input_AX_ALGpalma1_last_V_0_ack_out");
    sc_trace(mVcdFile, input_AX_ALGpalma1_last_V_0_payload_A, "input_AX_ALGpalma1_last_V_0_payload_A");
    sc_trace(mVcdFile, input_AX_ALGpalma1_last_V_0_payload_B, "input_AX_ALGpalma1_last_V_0_payload_B");
    sc_trace(mVcdFile, input_AX_ALGpalma1_last_V_0_sel_rd, "input_AX_ALGpalma1_last_V_0_sel_rd");
    sc_trace(mVcdFile, input_AX_ALGpalma1_last_V_0_sel_wr, "input_AX_ALGpalma1_last_V_0_sel_wr");
    sc_trace(mVcdFile, input_AX_ALGpalma1_last_V_0_sel, "input_AX_ALGpalma1_last_V_0_sel");
    sc_trace(mVcdFile, input_AX_ALGpalma1_last_V_0_load_A, "input_AX_ALGpalma1_last_V_0_load_A");
    sc_trace(mVcdFile, input_AX_ALGpalma1_last_V_0_load_B, "input_AX_ALGpalma1_last_V_0_load_B");
    sc_trace(mVcdFile, input_AX_ALGpalma1_last_V_0_state, "input_AX_ALGpalma1_last_V_0_state");
    sc_trace(mVcdFile, input_AX_ALGpalma1_last_V_0_state_cmp_full, "input_AX_ALGpalma1_last_V_0_state_cmp_full");
    sc_trace(mVcdFile, input_AX_ALGpalma1_id_V_0_data_out, "input_AX_ALGpalma1_id_V_0_data_out");
    sc_trace(mVcdFile, input_AX_ALGpalma1_id_V_0_vld_in, "input_AX_ALGpalma1_id_V_0_vld_in");
    sc_trace(mVcdFile, input_AX_ALGpalma1_id_V_0_vld_out, "input_AX_ALGpalma1_id_V_0_vld_out");
    sc_trace(mVcdFile, input_AX_ALGpalma1_id_V_0_ack_in, "input_AX_ALGpalma1_id_V_0_ack_in");
    sc_trace(mVcdFile, input_AX_ALGpalma1_id_V_0_ack_out, "input_AX_ALGpalma1_id_V_0_ack_out");
    sc_trace(mVcdFile, input_AX_ALGpalma1_id_V_0_payload_A, "input_AX_ALGpalma1_id_V_0_payload_A");
    sc_trace(mVcdFile, input_AX_ALGpalma1_id_V_0_payload_B, "input_AX_ALGpalma1_id_V_0_payload_B");
    sc_trace(mVcdFile, input_AX_ALGpalma1_id_V_0_sel_rd, "input_AX_ALGpalma1_id_V_0_sel_rd");
    sc_trace(mVcdFile, input_AX_ALGpalma1_id_V_0_sel_wr, "input_AX_ALGpalma1_id_V_0_sel_wr");
    sc_trace(mVcdFile, input_AX_ALGpalma1_id_V_0_sel, "input_AX_ALGpalma1_id_V_0_sel");
    sc_trace(mVcdFile, input_AX_ALGpalma1_id_V_0_load_A, "input_AX_ALGpalma1_id_V_0_load_A");
    sc_trace(mVcdFile, input_AX_ALGpalma1_id_V_0_load_B, "input_AX_ALGpalma1_id_V_0_load_B");
    sc_trace(mVcdFile, input_AX_ALGpalma1_id_V_0_state, "input_AX_ALGpalma1_id_V_0_state");
    sc_trace(mVcdFile, input_AX_ALGpalma1_id_V_0_state_cmp_full, "input_AX_ALGpalma1_id_V_0_state_cmp_full");
    sc_trace(mVcdFile, input_AX_ALGpalma1_dest_V_0_data_out, "input_AX_ALGpalma1_dest_V_0_data_out");
    sc_trace(mVcdFile, input_AX_ALGpalma1_dest_V_0_vld_in, "input_AX_ALGpalma1_dest_V_0_vld_in");
    sc_trace(mVcdFile, input_AX_ALGpalma1_dest_V_0_vld_out, "input_AX_ALGpalma1_dest_V_0_vld_out");
    sc_trace(mVcdFile, input_AX_ALGpalma1_dest_V_0_ack_in, "input_AX_ALGpalma1_dest_V_0_ack_in");
    sc_trace(mVcdFile, input_AX_ALGpalma1_dest_V_0_ack_out, "input_AX_ALGpalma1_dest_V_0_ack_out");
    sc_trace(mVcdFile, input_AX_ALGpalma1_dest_V_0_payload_A, "input_AX_ALGpalma1_dest_V_0_payload_A");
    sc_trace(mVcdFile, input_AX_ALGpalma1_dest_V_0_payload_B, "input_AX_ALGpalma1_dest_V_0_payload_B");
    sc_trace(mVcdFile, input_AX_ALGpalma1_dest_V_0_sel_rd, "input_AX_ALGpalma1_dest_V_0_sel_rd");
    sc_trace(mVcdFile, input_AX_ALGpalma1_dest_V_0_sel_wr, "input_AX_ALGpalma1_dest_V_0_sel_wr");
    sc_trace(mVcdFile, input_AX_ALGpalma1_dest_V_0_sel, "input_AX_ALGpalma1_dest_V_0_sel");
    sc_trace(mVcdFile, input_AX_ALGpalma1_dest_V_0_load_A, "input_AX_ALGpalma1_dest_V_0_load_A");
    sc_trace(mVcdFile, input_AX_ALGpalma1_dest_V_0_load_B, "input_AX_ALGpalma1_dest_V_0_load_B");
    sc_trace(mVcdFile, input_AX_ALGpalma1_dest_V_0_state, "input_AX_ALGpalma1_dest_V_0_state");
    sc_trace(mVcdFile, input_AX_ALGpalma1_dest_V_0_state_cmp_full, "input_AX_ALGpalma1_dest_V_0_state_cmp_full");
    sc_trace(mVcdFile, output_AX_ALG_data_V_1_data_out, "output_AX_ALG_data_V_1_data_out");
    sc_trace(mVcdFile, output_AX_ALG_data_V_1_vld_in, "output_AX_ALG_data_V_1_vld_in");
    sc_trace(mVcdFile, output_AX_ALG_data_V_1_vld_out, "output_AX_ALG_data_V_1_vld_out");
    sc_trace(mVcdFile, output_AX_ALG_data_V_1_ack_in, "output_AX_ALG_data_V_1_ack_in");
    sc_trace(mVcdFile, output_AX_ALG_data_V_1_ack_out, "output_AX_ALG_data_V_1_ack_out");
    sc_trace(mVcdFile, output_AX_ALG_data_V_1_payload_A, "output_AX_ALG_data_V_1_payload_A");
    sc_trace(mVcdFile, output_AX_ALG_data_V_1_payload_B, "output_AX_ALG_data_V_1_payload_B");
    sc_trace(mVcdFile, output_AX_ALG_data_V_1_sel_rd, "output_AX_ALG_data_V_1_sel_rd");
    sc_trace(mVcdFile, output_AX_ALG_data_V_1_sel_wr, "output_AX_ALG_data_V_1_sel_wr");
    sc_trace(mVcdFile, output_AX_ALG_data_V_1_sel, "output_AX_ALG_data_V_1_sel");
    sc_trace(mVcdFile, output_AX_ALG_data_V_1_load_A, "output_AX_ALG_data_V_1_load_A");
    sc_trace(mVcdFile, output_AX_ALG_data_V_1_load_B, "output_AX_ALG_data_V_1_load_B");
    sc_trace(mVcdFile, output_AX_ALG_data_V_1_state, "output_AX_ALG_data_V_1_state");
    sc_trace(mVcdFile, output_AX_ALG_data_V_1_state_cmp_full, "output_AX_ALG_data_V_1_state_cmp_full");
    sc_trace(mVcdFile, output_AX_ALG_keep_V_1_data_out, "output_AX_ALG_keep_V_1_data_out");
    sc_trace(mVcdFile, output_AX_ALG_keep_V_1_vld_in, "output_AX_ALG_keep_V_1_vld_in");
    sc_trace(mVcdFile, output_AX_ALG_keep_V_1_vld_out, "output_AX_ALG_keep_V_1_vld_out");
    sc_trace(mVcdFile, output_AX_ALG_keep_V_1_ack_in, "output_AX_ALG_keep_V_1_ack_in");
    sc_trace(mVcdFile, output_AX_ALG_keep_V_1_ack_out, "output_AX_ALG_keep_V_1_ack_out");
    sc_trace(mVcdFile, output_AX_ALG_keep_V_1_payload_A, "output_AX_ALG_keep_V_1_payload_A");
    sc_trace(mVcdFile, output_AX_ALG_keep_V_1_payload_B, "output_AX_ALG_keep_V_1_payload_B");
    sc_trace(mVcdFile, output_AX_ALG_keep_V_1_sel_rd, "output_AX_ALG_keep_V_1_sel_rd");
    sc_trace(mVcdFile, output_AX_ALG_keep_V_1_sel_wr, "output_AX_ALG_keep_V_1_sel_wr");
    sc_trace(mVcdFile, output_AX_ALG_keep_V_1_sel, "output_AX_ALG_keep_V_1_sel");
    sc_trace(mVcdFile, output_AX_ALG_keep_V_1_load_A, "output_AX_ALG_keep_V_1_load_A");
    sc_trace(mVcdFile, output_AX_ALG_keep_V_1_load_B, "output_AX_ALG_keep_V_1_load_B");
    sc_trace(mVcdFile, output_AX_ALG_keep_V_1_state, "output_AX_ALG_keep_V_1_state");
    sc_trace(mVcdFile, output_AX_ALG_keep_V_1_state_cmp_full, "output_AX_ALG_keep_V_1_state_cmp_full");
    sc_trace(mVcdFile, output_AX_ALG_strb_V_1_data_out, "output_AX_ALG_strb_V_1_data_out");
    sc_trace(mVcdFile, output_AX_ALG_strb_V_1_vld_in, "output_AX_ALG_strb_V_1_vld_in");
    sc_trace(mVcdFile, output_AX_ALG_strb_V_1_vld_out, "output_AX_ALG_strb_V_1_vld_out");
    sc_trace(mVcdFile, output_AX_ALG_strb_V_1_ack_in, "output_AX_ALG_strb_V_1_ack_in");
    sc_trace(mVcdFile, output_AX_ALG_strb_V_1_ack_out, "output_AX_ALG_strb_V_1_ack_out");
    sc_trace(mVcdFile, output_AX_ALG_strb_V_1_payload_A, "output_AX_ALG_strb_V_1_payload_A");
    sc_trace(mVcdFile, output_AX_ALG_strb_V_1_payload_B, "output_AX_ALG_strb_V_1_payload_B");
    sc_trace(mVcdFile, output_AX_ALG_strb_V_1_sel_rd, "output_AX_ALG_strb_V_1_sel_rd");
    sc_trace(mVcdFile, output_AX_ALG_strb_V_1_sel_wr, "output_AX_ALG_strb_V_1_sel_wr");
    sc_trace(mVcdFile, output_AX_ALG_strb_V_1_sel, "output_AX_ALG_strb_V_1_sel");
    sc_trace(mVcdFile, output_AX_ALG_strb_V_1_load_A, "output_AX_ALG_strb_V_1_load_A");
    sc_trace(mVcdFile, output_AX_ALG_strb_V_1_load_B, "output_AX_ALG_strb_V_1_load_B");
    sc_trace(mVcdFile, output_AX_ALG_strb_V_1_state, "output_AX_ALG_strb_V_1_state");
    sc_trace(mVcdFile, output_AX_ALG_strb_V_1_state_cmp_full, "output_AX_ALG_strb_V_1_state_cmp_full");
    sc_trace(mVcdFile, output_AX_ALG_user_V_1_data_out, "output_AX_ALG_user_V_1_data_out");
    sc_trace(mVcdFile, output_AX_ALG_user_V_1_vld_in, "output_AX_ALG_user_V_1_vld_in");
    sc_trace(mVcdFile, output_AX_ALG_user_V_1_vld_out, "output_AX_ALG_user_V_1_vld_out");
    sc_trace(mVcdFile, output_AX_ALG_user_V_1_ack_in, "output_AX_ALG_user_V_1_ack_in");
    sc_trace(mVcdFile, output_AX_ALG_user_V_1_ack_out, "output_AX_ALG_user_V_1_ack_out");
    sc_trace(mVcdFile, output_AX_ALG_user_V_1_payload_A, "output_AX_ALG_user_V_1_payload_A");
    sc_trace(mVcdFile, output_AX_ALG_user_V_1_payload_B, "output_AX_ALG_user_V_1_payload_B");
    sc_trace(mVcdFile, output_AX_ALG_user_V_1_sel_rd, "output_AX_ALG_user_V_1_sel_rd");
    sc_trace(mVcdFile, output_AX_ALG_user_V_1_sel_wr, "output_AX_ALG_user_V_1_sel_wr");
    sc_trace(mVcdFile, output_AX_ALG_user_V_1_sel, "output_AX_ALG_user_V_1_sel");
    sc_trace(mVcdFile, output_AX_ALG_user_V_1_load_A, "output_AX_ALG_user_V_1_load_A");
    sc_trace(mVcdFile, output_AX_ALG_user_V_1_load_B, "output_AX_ALG_user_V_1_load_B");
    sc_trace(mVcdFile, output_AX_ALG_user_V_1_state, "output_AX_ALG_user_V_1_state");
    sc_trace(mVcdFile, output_AX_ALG_user_V_1_state_cmp_full, "output_AX_ALG_user_V_1_state_cmp_full");
    sc_trace(mVcdFile, output_AX_ALG_last_V_1_data_out, "output_AX_ALG_last_V_1_data_out");
    sc_trace(mVcdFile, output_AX_ALG_last_V_1_vld_in, "output_AX_ALG_last_V_1_vld_in");
    sc_trace(mVcdFile, output_AX_ALG_last_V_1_vld_out, "output_AX_ALG_last_V_1_vld_out");
    sc_trace(mVcdFile, output_AX_ALG_last_V_1_ack_in, "output_AX_ALG_last_V_1_ack_in");
    sc_trace(mVcdFile, output_AX_ALG_last_V_1_ack_out, "output_AX_ALG_last_V_1_ack_out");
    sc_trace(mVcdFile, output_AX_ALG_last_V_1_payload_A, "output_AX_ALG_last_V_1_payload_A");
    sc_trace(mVcdFile, output_AX_ALG_last_V_1_payload_B, "output_AX_ALG_last_V_1_payload_B");
    sc_trace(mVcdFile, output_AX_ALG_last_V_1_sel_rd, "output_AX_ALG_last_V_1_sel_rd");
    sc_trace(mVcdFile, output_AX_ALG_last_V_1_sel_wr, "output_AX_ALG_last_V_1_sel_wr");
    sc_trace(mVcdFile, output_AX_ALG_last_V_1_sel, "output_AX_ALG_last_V_1_sel");
    sc_trace(mVcdFile, output_AX_ALG_last_V_1_load_A, "output_AX_ALG_last_V_1_load_A");
    sc_trace(mVcdFile, output_AX_ALG_last_V_1_load_B, "output_AX_ALG_last_V_1_load_B");
    sc_trace(mVcdFile, output_AX_ALG_last_V_1_state, "output_AX_ALG_last_V_1_state");
    sc_trace(mVcdFile, output_AX_ALG_last_V_1_state_cmp_full, "output_AX_ALG_last_V_1_state_cmp_full");
    sc_trace(mVcdFile, output_AX_ALG_id_V_1_data_out, "output_AX_ALG_id_V_1_data_out");
    sc_trace(mVcdFile, output_AX_ALG_id_V_1_vld_in, "output_AX_ALG_id_V_1_vld_in");
    sc_trace(mVcdFile, output_AX_ALG_id_V_1_vld_out, "output_AX_ALG_id_V_1_vld_out");
    sc_trace(mVcdFile, output_AX_ALG_id_V_1_ack_in, "output_AX_ALG_id_V_1_ack_in");
    sc_trace(mVcdFile, output_AX_ALG_id_V_1_ack_out, "output_AX_ALG_id_V_1_ack_out");
    sc_trace(mVcdFile, output_AX_ALG_id_V_1_payload_A, "output_AX_ALG_id_V_1_payload_A");
    sc_trace(mVcdFile, output_AX_ALG_id_V_1_payload_B, "output_AX_ALG_id_V_1_payload_B");
    sc_trace(mVcdFile, output_AX_ALG_id_V_1_sel_rd, "output_AX_ALG_id_V_1_sel_rd");
    sc_trace(mVcdFile, output_AX_ALG_id_V_1_sel_wr, "output_AX_ALG_id_V_1_sel_wr");
    sc_trace(mVcdFile, output_AX_ALG_id_V_1_sel, "output_AX_ALG_id_V_1_sel");
    sc_trace(mVcdFile, output_AX_ALG_id_V_1_load_A, "output_AX_ALG_id_V_1_load_A");
    sc_trace(mVcdFile, output_AX_ALG_id_V_1_load_B, "output_AX_ALG_id_V_1_load_B");
    sc_trace(mVcdFile, output_AX_ALG_id_V_1_state, "output_AX_ALG_id_V_1_state");
    sc_trace(mVcdFile, output_AX_ALG_id_V_1_state_cmp_full, "output_AX_ALG_id_V_1_state_cmp_full");
    sc_trace(mVcdFile, output_AX_ALG_dest_V_1_data_out, "output_AX_ALG_dest_V_1_data_out");
    sc_trace(mVcdFile, output_AX_ALG_dest_V_1_vld_in, "output_AX_ALG_dest_V_1_vld_in");
    sc_trace(mVcdFile, output_AX_ALG_dest_V_1_vld_out, "output_AX_ALG_dest_V_1_vld_out");
    sc_trace(mVcdFile, output_AX_ALG_dest_V_1_ack_in, "output_AX_ALG_dest_V_1_ack_in");
    sc_trace(mVcdFile, output_AX_ALG_dest_V_1_ack_out, "output_AX_ALG_dest_V_1_ack_out");
    sc_trace(mVcdFile, output_AX_ALG_dest_V_1_payload_A, "output_AX_ALG_dest_V_1_payload_A");
    sc_trace(mVcdFile, output_AX_ALG_dest_V_1_payload_B, "output_AX_ALG_dest_V_1_payload_B");
    sc_trace(mVcdFile, output_AX_ALG_dest_V_1_sel_rd, "output_AX_ALG_dest_V_1_sel_rd");
    sc_trace(mVcdFile, output_AX_ALG_dest_V_1_sel_wr, "output_AX_ALG_dest_V_1_sel_wr");
    sc_trace(mVcdFile, output_AX_ALG_dest_V_1_sel, "output_AX_ALG_dest_V_1_sel");
    sc_trace(mVcdFile, output_AX_ALG_dest_V_1_load_A, "output_AX_ALG_dest_V_1_load_A");
    sc_trace(mVcdFile, output_AX_ALG_dest_V_1_load_B, "output_AX_ALG_dest_V_1_load_B");
    sc_trace(mVcdFile, output_AX_ALG_dest_V_1_state, "output_AX_ALG_dest_V_1_state");
    sc_trace(mVcdFile, output_AX_ALG_dest_V_1_state_cmp_full, "output_AX_ALG_dest_V_1_state_cmp_full");
    sc_trace(mVcdFile, dedo0_0_V_read_data_fu_118_input_AX_ALGpalma1_TDATA_blk_n, "dedo0_0_V_read_data_fu_118_input_AX_ALGpalma1_TDATA_blk_n");
    sc_trace(mVcdFile, input_AX_ALGdedo0_TDATA_blk_n, "input_AX_ALGdedo0_TDATA_blk_n");
    sc_trace(mVcdFile, ap_CS_fsm, "ap_CS_fsm");
    sc_trace(mVcdFile, ap_CS_fsm_state2, "ap_CS_fsm_state2");
    sc_trace(mVcdFile, palma0_0_V_read_data_fu_137_input_AX_ALGpalma1_TDATA_blk_n, "palma0_0_V_read_data_fu_137_input_AX_ALGpalma1_TDATA_blk_n");
    sc_trace(mVcdFile, input_AX_ALGpalma0_TDATA_blk_n, "input_AX_ALGpalma0_TDATA_blk_n");
    sc_trace(mVcdFile, dedo1_0_V_read_data_fu_156_input_AX_ALGpalma1_TDATA_blk_n, "dedo1_0_V_read_data_fu_156_input_AX_ALGpalma1_TDATA_blk_n");
    sc_trace(mVcdFile, input_AX_ALGdedo1_TDATA_blk_n, "input_AX_ALGdedo1_TDATA_blk_n");
    sc_trace(mVcdFile, palma1_0_V_read_data_fu_175_input_AX_ALGpalma1_TDATA_blk_n, "palma1_0_V_read_data_fu_175_input_AX_ALGpalma1_TDATA_blk_n");
    sc_trace(mVcdFile, input_AX_ALGpalma1_TDATA_blk_n, "input_AX_ALGpalma1_TDATA_blk_n");
    sc_trace(mVcdFile, dedo0_0_V_read_data_fu_118_ap_return, "dedo0_0_V_read_data_fu_118_ap_return");
    sc_trace(mVcdFile, dedo0_0_V_reg_194, "dedo0_0_V_reg_194");
    sc_trace(mVcdFile, ap_block_state2, "ap_block_state2");
    sc_trace(mVcdFile, palma0_0_V_read_data_fu_137_ap_return, "palma0_0_V_read_data_fu_137_ap_return");
    sc_trace(mVcdFile, palma0_0_V_reg_199, "palma0_0_V_reg_199");
    sc_trace(mVcdFile, dedo1_0_V_read_data_fu_156_ap_return, "dedo1_0_V_read_data_fu_156_ap_return");
    sc_trace(mVcdFile, dedo1_0_V_reg_204, "dedo1_0_V_reg_204");
    sc_trace(mVcdFile, palma1_0_V_read_data_fu_175_ap_return, "palma1_0_V_read_data_fu_175_ap_return");
    sc_trace(mVcdFile, palma1_0_V_reg_209, "palma1_0_V_reg_209");
    sc_trace(mVcdFile, grp_write_data_fu_96_ap_start, "grp_write_data_fu_96_ap_start");
    sc_trace(mVcdFile, grp_write_data_fu_96_ap_done, "grp_write_data_fu_96_ap_done");
    sc_trace(mVcdFile, grp_write_data_fu_96_ap_idle, "grp_write_data_fu_96_ap_idle");
    sc_trace(mVcdFile, grp_write_data_fu_96_ap_ready, "grp_write_data_fu_96_ap_ready");
    sc_trace(mVcdFile, grp_write_data_fu_96_output_AX_ALG_TDATA, "grp_write_data_fu_96_output_AX_ALG_TDATA");
    sc_trace(mVcdFile, grp_write_data_fu_96_output_AX_ALG_TVALID, "grp_write_data_fu_96_output_AX_ALG_TVALID");
    sc_trace(mVcdFile, grp_write_data_fu_96_output_AX_ALG_TREADY, "grp_write_data_fu_96_output_AX_ALG_TREADY");
    sc_trace(mVcdFile, grp_write_data_fu_96_output_AX_ALG_TKEEP, "grp_write_data_fu_96_output_AX_ALG_TKEEP");
    sc_trace(mVcdFile, grp_write_data_fu_96_output_AX_ALG_TSTRB, "grp_write_data_fu_96_output_AX_ALG_TSTRB");
    sc_trace(mVcdFile, grp_write_data_fu_96_output_AX_ALG_TUSER, "grp_write_data_fu_96_output_AX_ALG_TUSER");
    sc_trace(mVcdFile, grp_write_data_fu_96_output_AX_ALG_TLAST, "grp_write_data_fu_96_output_AX_ALG_TLAST");
    sc_trace(mVcdFile, grp_write_data_fu_96_output_AX_ALG_TID, "grp_write_data_fu_96_output_AX_ALG_TID");
    sc_trace(mVcdFile, grp_write_data_fu_96_output_AX_ALG_TDEST, "grp_write_data_fu_96_output_AX_ALG_TDEST");
    sc_trace(mVcdFile, dedo0_0_V_read_data_fu_118_ap_start, "dedo0_0_V_read_data_fu_118_ap_start");
    sc_trace(mVcdFile, dedo0_0_V_read_data_fu_118_ap_done, "dedo0_0_V_read_data_fu_118_ap_done");
    sc_trace(mVcdFile, dedo0_0_V_read_data_fu_118_ap_idle, "dedo0_0_V_read_data_fu_118_ap_idle");
    sc_trace(mVcdFile, dedo0_0_V_read_data_fu_118_ap_ready, "dedo0_0_V_read_data_fu_118_ap_ready");
    sc_trace(mVcdFile, dedo0_0_V_read_data_fu_118_input_AX_ALGpalma1_TVALID, "dedo0_0_V_read_data_fu_118_input_AX_ALGpalma1_TVALID");
    sc_trace(mVcdFile, dedo0_0_V_read_data_fu_118_input_AX_ALGpalma1_TREADY, "dedo0_0_V_read_data_fu_118_input_AX_ALGpalma1_TREADY");
    sc_trace(mVcdFile, palma0_0_V_read_data_fu_137_ap_start, "palma0_0_V_read_data_fu_137_ap_start");
    sc_trace(mVcdFile, palma0_0_V_read_data_fu_137_ap_done, "palma0_0_V_read_data_fu_137_ap_done");
    sc_trace(mVcdFile, palma0_0_V_read_data_fu_137_ap_idle, "palma0_0_V_read_data_fu_137_ap_idle");
    sc_trace(mVcdFile, palma0_0_V_read_data_fu_137_ap_ready, "palma0_0_V_read_data_fu_137_ap_ready");
    sc_trace(mVcdFile, palma0_0_V_read_data_fu_137_input_AX_ALGpalma1_TVALID, "palma0_0_V_read_data_fu_137_input_AX_ALGpalma1_TVALID");
    sc_trace(mVcdFile, palma0_0_V_read_data_fu_137_input_AX_ALGpalma1_TREADY, "palma0_0_V_read_data_fu_137_input_AX_ALGpalma1_TREADY");
    sc_trace(mVcdFile, dedo1_0_V_read_data_fu_156_ap_start, "dedo1_0_V_read_data_fu_156_ap_start");
    sc_trace(mVcdFile, dedo1_0_V_read_data_fu_156_ap_done, "dedo1_0_V_read_data_fu_156_ap_done");
    sc_trace(mVcdFile, dedo1_0_V_read_data_fu_156_ap_idle, "dedo1_0_V_read_data_fu_156_ap_idle");
    sc_trace(mVcdFile, dedo1_0_V_read_data_fu_156_ap_ready, "dedo1_0_V_read_data_fu_156_ap_ready");
    sc_trace(mVcdFile, dedo1_0_V_read_data_fu_156_input_AX_ALGpalma1_TVALID, "dedo1_0_V_read_data_fu_156_input_AX_ALGpalma1_TVALID");
    sc_trace(mVcdFile, dedo1_0_V_read_data_fu_156_input_AX_ALGpalma1_TREADY, "dedo1_0_V_read_data_fu_156_input_AX_ALGpalma1_TREADY");
    sc_trace(mVcdFile, palma1_0_V_read_data_fu_175_ap_start, "palma1_0_V_read_data_fu_175_ap_start");
    sc_trace(mVcdFile, palma1_0_V_read_data_fu_175_ap_done, "palma1_0_V_read_data_fu_175_ap_done");
    sc_trace(mVcdFile, palma1_0_V_read_data_fu_175_ap_idle, "palma1_0_V_read_data_fu_175_ap_idle");
    sc_trace(mVcdFile, palma1_0_V_read_data_fu_175_ap_ready, "palma1_0_V_read_data_fu_175_ap_ready");
    sc_trace(mVcdFile, palma1_0_V_read_data_fu_175_input_AX_ALGpalma1_TVALID, "palma1_0_V_read_data_fu_175_input_AX_ALGpalma1_TVALID");
    sc_trace(mVcdFile, palma1_0_V_read_data_fu_175_input_AX_ALGpalma1_TREADY, "palma1_0_V_read_data_fu_175_input_AX_ALGpalma1_TREADY");
    sc_trace(mVcdFile, ap_reg_grp_write_data_fu_96_ap_start, "ap_reg_grp_write_data_fu_96_ap_start");
    sc_trace(mVcdFile, ap_block_state2_ignore_call46, "ap_block_state2_ignore_call46");
    sc_trace(mVcdFile, ap_CS_fsm_state3, "ap_CS_fsm_state3");
    sc_trace(mVcdFile, ap_block_state2_ignore_call42, "ap_block_state2_ignore_call42");
    sc_trace(mVcdFile, ap_block_state2_ignore_call43, "ap_block_state2_ignore_call43");
    sc_trace(mVcdFile, ap_block_state2_ignore_call44, "ap_block_state2_ignore_call44");
    sc_trace(mVcdFile, ap_block_state2_ignore_call45, "ap_block_state2_ignore_call45");
    sc_trace(mVcdFile, ap_NS_fsm, "ap_NS_fsm");
    sc_trace(mVcdFile, ap_CS_fsm_state4, "ap_CS_fsm_state4");
    sc_trace(mVcdFile, ap_block_state4, "ap_block_state4");
#endif

    }
    mHdltvinHandle.open("opcionA.hdltvin.dat");
    mHdltvoutHandle.open("opcionA.hdltvout.dat");
}

opcionA::~opcionA() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

    mHdltvinHandle << "] " << endl;
    mHdltvoutHandle << "] " << endl;
    mHdltvinHandle.close();
    mHdltvoutHandle.close();
    delete grp_write_data_fu_96;
    delete dedo0_0_V_read_data_fu_118;
    delete palma0_0_V_read_data_fu_137;
    delete dedo1_0_V_read_data_fu_156;
    delete palma1_0_V_read_data_fu_175;
}

void opcionA::thread_ap_clk_no_reset_() {
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_CS_fsm = ap_ST_fsm_state1;
    } else {
        ap_CS_fsm = ap_NS_fsm.read();
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_reg_grp_write_data_fu_96_ap_start = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
             !(esl_seteq<1,1,1>(ap_const_logic_0, dedo0_0_V_read_data_fu_118_input_AX_ALGpalma1_TDATA_blk_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, palma0_0_V_read_data_fu_137_input_AX_ALGpalma1_TDATA_blk_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, dedo1_0_V_read_data_fu_156_input_AX_ALGpalma1_TDATA_blk_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, palma1_0_V_read_data_fu_175_input_AX_ALGpalma1_TDATA_blk_n.read())))) {
            ap_reg_grp_write_data_fu_96_ap_start = ap_const_logic_1;
        } else if (esl_seteq<1,1,1>(ap_const_logic_1, grp_write_data_fu_96_ap_ready.read())) {
            ap_reg_grp_write_data_fu_96_ap_start = ap_const_logic_0;
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        input_AX_ALGdedo0_data_V_0_sel_rd = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, input_AX_ALGdedo0_data_V_0_ack_out.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_1, input_AX_ALGdedo0_data_V_0_vld_out.read()))) {
            input_AX_ALGdedo0_data_V_0_sel_rd =  (sc_logic) (~input_AX_ALGdedo0_data_V_0_sel_rd.read());
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        input_AX_ALGdedo0_data_V_0_sel_wr = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, input_AX_ALGdedo0_data_V_0_vld_in.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_1, input_AX_ALGdedo0_data_V_0_ack_in.read()))) {
            input_AX_ALGdedo0_data_V_0_sel_wr =  (sc_logic) (~input_AX_ALGdedo0_data_V_0_sel_wr.read());
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        input_AX_ALGdedo0_data_V_0_state = ap_const_lv2_0;
    } else {
        if (((esl_seteq<1,1,1>(ap_const_logic_0, input_AX_ALGdedo0_data_V_0_vld_in.read()) && 
              esl_seteq<1,1,1>(ap_const_logic_1, input_AX_ALGdedo0_data_V_0_ack_out.read()) && 
              esl_seteq<1,2,2>(input_AX_ALGdedo0_data_V_0_state.read(), ap_const_lv2_3)) || 
             (esl_seteq<1,1,1>(ap_const_logic_0, input_AX_ALGdedo0_data_V_0_vld_in.read()) && 
              esl_seteq<1,2,2>(input_AX_ALGdedo0_data_V_0_state.read(), ap_const_lv2_2)))) {
            input_AX_ALGdedo0_data_V_0_state = ap_const_lv2_2;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, input_AX_ALGdedo0_data_V_0_vld_in.read()) && 
                     esl_seteq<1,1,1>(ap_const_logic_0, input_AX_ALGdedo0_data_V_0_ack_out.read()) && 
                     esl_seteq<1,2,2>(input_AX_ALGdedo0_data_V_0_state.read(), ap_const_lv2_3)) || 
                    (esl_seteq<1,1,1>(ap_const_logic_0, input_AX_ALGdedo0_data_V_0_ack_out.read()) && 
                     esl_seteq<1,2,2>(input_AX_ALGdedo0_data_V_0_state.read(), ap_const_lv2_1)))) {
            input_AX_ALGdedo0_data_V_0_state = ap_const_lv2_1;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, input_AX_ALGdedo0_data_V_0_vld_in.read()) && 
                     esl_seteq<1,2,2>(input_AX_ALGdedo0_data_V_0_state.read(), ap_const_lv2_2)) || 
                    (esl_seteq<1,1,1>(ap_const_logic_1, input_AX_ALGdedo0_data_V_0_ack_out.read()) && 
                     esl_seteq<1,2,2>(input_AX_ALGdedo0_data_V_0_state.read(), ap_const_lv2_1)) || 
                    (esl_seteq<1,2,2>(input_AX_ALGdedo0_data_V_0_state.read(), ap_const_lv2_3) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_1, input_AX_ALGdedo0_data_V_0_vld_in.read()) && esl_seteq<1,1,1>(ap_const_logic_0, input_AX_ALGdedo0_data_V_0_ack_out.read())) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_0, input_AX_ALGdedo0_data_V_0_vld_in.read()) && esl_seteq<1,1,1>(ap_const_logic_1, input_AX_ALGdedo0_data_V_0_ack_out.read()))))) {
            input_AX_ALGdedo0_data_V_0_state = ap_const_lv2_3;
        } else {
            input_AX_ALGdedo0_data_V_0_state = ap_const_lv2_2;
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        input_AX_ALGdedo0_dest_V_0_sel_rd = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, input_AX_ALGdedo0_dest_V_0_ack_out.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_1, input_AX_ALGdedo0_dest_V_0_vld_out.read()))) {
            input_AX_ALGdedo0_dest_V_0_sel_rd =  (sc_logic) (~input_AX_ALGdedo0_dest_V_0_sel_rd.read());
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        input_AX_ALGdedo0_dest_V_0_sel_wr = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, input_AX_ALGdedo0_dest_V_0_vld_in.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_1, input_AX_ALGdedo0_dest_V_0_ack_in.read()))) {
            input_AX_ALGdedo0_dest_V_0_sel_wr =  (sc_logic) (~input_AX_ALGdedo0_dest_V_0_sel_wr.read());
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        input_AX_ALGdedo0_dest_V_0_state = ap_const_lv2_0;
    } else {
        if (((esl_seteq<1,1,1>(ap_const_logic_0, input_AX_ALGdedo0_dest_V_0_vld_in.read()) && 
              esl_seteq<1,1,1>(ap_const_logic_1, input_AX_ALGdedo0_dest_V_0_ack_out.read()) && 
              esl_seteq<1,2,2>(ap_const_lv2_3, input_AX_ALGdedo0_dest_V_0_state.read())) || 
             (esl_seteq<1,1,1>(ap_const_logic_0, input_AX_ALGdedo0_dest_V_0_vld_in.read()) && 
              esl_seteq<1,2,2>(ap_const_lv2_2, input_AX_ALGdedo0_dest_V_0_state.read())))) {
            input_AX_ALGdedo0_dest_V_0_state = ap_const_lv2_2;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, input_AX_ALGdedo0_dest_V_0_vld_in.read()) && 
                     esl_seteq<1,1,1>(ap_const_logic_0, input_AX_ALGdedo0_dest_V_0_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_3, input_AX_ALGdedo0_dest_V_0_state.read())) || 
                    (esl_seteq<1,1,1>(ap_const_logic_0, input_AX_ALGdedo0_dest_V_0_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_1, input_AX_ALGdedo0_dest_V_0_state.read())))) {
            input_AX_ALGdedo0_dest_V_0_state = ap_const_lv2_1;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, input_AX_ALGdedo0_dest_V_0_vld_in.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_2, input_AX_ALGdedo0_dest_V_0_state.read())) || 
                    (esl_seteq<1,1,1>(ap_const_logic_1, input_AX_ALGdedo0_dest_V_0_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_1, input_AX_ALGdedo0_dest_V_0_state.read())) || 
                    (esl_seteq<1,2,2>(ap_const_lv2_3, input_AX_ALGdedo0_dest_V_0_state.read()) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_1, input_AX_ALGdedo0_dest_V_0_vld_in.read()) && esl_seteq<1,1,1>(ap_const_logic_0, input_AX_ALGdedo0_dest_V_0_ack_out.read())) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_0, input_AX_ALGdedo0_dest_V_0_vld_in.read()) && esl_seteq<1,1,1>(ap_const_logic_1, input_AX_ALGdedo0_dest_V_0_ack_out.read()))))) {
            input_AX_ALGdedo0_dest_V_0_state = ap_const_lv2_3;
        } else {
            input_AX_ALGdedo0_dest_V_0_state = ap_const_lv2_2;
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        input_AX_ALGdedo0_id_V_0_sel_rd = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, input_AX_ALGdedo0_id_V_0_ack_out.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_1, input_AX_ALGdedo0_id_V_0_vld_out.read()))) {
            input_AX_ALGdedo0_id_V_0_sel_rd =  (sc_logic) (~input_AX_ALGdedo0_id_V_0_sel_rd.read());
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        input_AX_ALGdedo0_id_V_0_sel_wr = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, input_AX_ALGdedo0_id_V_0_vld_in.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_1, input_AX_ALGdedo0_id_V_0_ack_in.read()))) {
            input_AX_ALGdedo0_id_V_0_sel_wr =  (sc_logic) (~input_AX_ALGdedo0_id_V_0_sel_wr.read());
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        input_AX_ALGdedo0_id_V_0_state = ap_const_lv2_0;
    } else {
        if (((esl_seteq<1,1,1>(ap_const_logic_0, input_AX_ALGdedo0_id_V_0_vld_in.read()) && 
              esl_seteq<1,1,1>(ap_const_logic_1, input_AX_ALGdedo0_id_V_0_ack_out.read()) && 
              esl_seteq<1,2,2>(ap_const_lv2_3, input_AX_ALGdedo0_id_V_0_state.read())) || 
             (esl_seteq<1,1,1>(ap_const_logic_0, input_AX_ALGdedo0_id_V_0_vld_in.read()) && 
              esl_seteq<1,2,2>(ap_const_lv2_2, input_AX_ALGdedo0_id_V_0_state.read())))) {
            input_AX_ALGdedo0_id_V_0_state = ap_const_lv2_2;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, input_AX_ALGdedo0_id_V_0_vld_in.read()) && 
                     esl_seteq<1,1,1>(ap_const_logic_0, input_AX_ALGdedo0_id_V_0_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_3, input_AX_ALGdedo0_id_V_0_state.read())) || 
                    (esl_seteq<1,1,1>(ap_const_logic_0, input_AX_ALGdedo0_id_V_0_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_1, input_AX_ALGdedo0_id_V_0_state.read())))) {
            input_AX_ALGdedo0_id_V_0_state = ap_const_lv2_1;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, input_AX_ALGdedo0_id_V_0_vld_in.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_2, input_AX_ALGdedo0_id_V_0_state.read())) || 
                    (esl_seteq<1,1,1>(ap_const_logic_1, input_AX_ALGdedo0_id_V_0_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_1, input_AX_ALGdedo0_id_V_0_state.read())) || 
                    (esl_seteq<1,2,2>(ap_const_lv2_3, input_AX_ALGdedo0_id_V_0_state.read()) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_1, input_AX_ALGdedo0_id_V_0_vld_in.read()) && esl_seteq<1,1,1>(ap_const_logic_0, input_AX_ALGdedo0_id_V_0_ack_out.read())) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_0, input_AX_ALGdedo0_id_V_0_vld_in.read()) && esl_seteq<1,1,1>(ap_const_logic_1, input_AX_ALGdedo0_id_V_0_ack_out.read()))))) {
            input_AX_ALGdedo0_id_V_0_state = ap_const_lv2_3;
        } else {
            input_AX_ALGdedo0_id_V_0_state = ap_const_lv2_2;
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        input_AX_ALGdedo0_keep_V_0_sel_rd = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, input_AX_ALGdedo0_keep_V_0_ack_out.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_1, input_AX_ALGdedo0_keep_V_0_vld_out.read()))) {
            input_AX_ALGdedo0_keep_V_0_sel_rd =  (sc_logic) (~input_AX_ALGdedo0_keep_V_0_sel_rd.read());
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        input_AX_ALGdedo0_keep_V_0_sel_wr = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, input_AX_ALGdedo0_keep_V_0_vld_in.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_1, input_AX_ALGdedo0_keep_V_0_ack_in.read()))) {
            input_AX_ALGdedo0_keep_V_0_sel_wr =  (sc_logic) (~input_AX_ALGdedo0_keep_V_0_sel_wr.read());
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        input_AX_ALGdedo0_keep_V_0_state = ap_const_lv2_0;
    } else {
        if (((esl_seteq<1,1,1>(ap_const_logic_0, input_AX_ALGdedo0_keep_V_0_vld_in.read()) && 
              esl_seteq<1,1,1>(ap_const_logic_1, input_AX_ALGdedo0_keep_V_0_ack_out.read()) && 
              esl_seteq<1,2,2>(ap_const_lv2_3, input_AX_ALGdedo0_keep_V_0_state.read())) || 
             (esl_seteq<1,1,1>(ap_const_logic_0, input_AX_ALGdedo0_keep_V_0_vld_in.read()) && 
              esl_seteq<1,2,2>(ap_const_lv2_2, input_AX_ALGdedo0_keep_V_0_state.read())))) {
            input_AX_ALGdedo0_keep_V_0_state = ap_const_lv2_2;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, input_AX_ALGdedo0_keep_V_0_vld_in.read()) && 
                     esl_seteq<1,1,1>(ap_const_logic_0, input_AX_ALGdedo0_keep_V_0_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_3, input_AX_ALGdedo0_keep_V_0_state.read())) || 
                    (esl_seteq<1,1,1>(ap_const_logic_0, input_AX_ALGdedo0_keep_V_0_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_1, input_AX_ALGdedo0_keep_V_0_state.read())))) {
            input_AX_ALGdedo0_keep_V_0_state = ap_const_lv2_1;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, input_AX_ALGdedo0_keep_V_0_vld_in.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_2, input_AX_ALGdedo0_keep_V_0_state.read())) || 
                    (esl_seteq<1,1,1>(ap_const_logic_1, input_AX_ALGdedo0_keep_V_0_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_1, input_AX_ALGdedo0_keep_V_0_state.read())) || 
                    (esl_seteq<1,2,2>(ap_const_lv2_3, input_AX_ALGdedo0_keep_V_0_state.read()) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_1, input_AX_ALGdedo0_keep_V_0_vld_in.read()) && esl_seteq<1,1,1>(ap_const_logic_0, input_AX_ALGdedo0_keep_V_0_ack_out.read())) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_0, input_AX_ALGdedo0_keep_V_0_vld_in.read()) && esl_seteq<1,1,1>(ap_const_logic_1, input_AX_ALGdedo0_keep_V_0_ack_out.read()))))) {
            input_AX_ALGdedo0_keep_V_0_state = ap_const_lv2_3;
        } else {
            input_AX_ALGdedo0_keep_V_0_state = ap_const_lv2_2;
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        input_AX_ALGdedo0_last_V_0_sel_rd = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, input_AX_ALGdedo0_last_V_0_ack_out.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_1, input_AX_ALGdedo0_last_V_0_vld_out.read()))) {
            input_AX_ALGdedo0_last_V_0_sel_rd =  (sc_logic) (~input_AX_ALGdedo0_last_V_0_sel_rd.read());
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        input_AX_ALGdedo0_last_V_0_sel_wr = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, input_AX_ALGdedo0_last_V_0_vld_in.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_1, input_AX_ALGdedo0_last_V_0_ack_in.read()))) {
            input_AX_ALGdedo0_last_V_0_sel_wr =  (sc_logic) (~input_AX_ALGdedo0_last_V_0_sel_wr.read());
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        input_AX_ALGdedo0_last_V_0_state = ap_const_lv2_0;
    } else {
        if (((esl_seteq<1,1,1>(ap_const_logic_0, input_AX_ALGdedo0_last_V_0_vld_in.read()) && 
              esl_seteq<1,1,1>(ap_const_logic_1, input_AX_ALGdedo0_last_V_0_ack_out.read()) && 
              esl_seteq<1,2,2>(ap_const_lv2_3, input_AX_ALGdedo0_last_V_0_state.read())) || 
             (esl_seteq<1,1,1>(ap_const_logic_0, input_AX_ALGdedo0_last_V_0_vld_in.read()) && 
              esl_seteq<1,2,2>(ap_const_lv2_2, input_AX_ALGdedo0_last_V_0_state.read())))) {
            input_AX_ALGdedo0_last_V_0_state = ap_const_lv2_2;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, input_AX_ALGdedo0_last_V_0_vld_in.read()) && 
                     esl_seteq<1,1,1>(ap_const_logic_0, input_AX_ALGdedo0_last_V_0_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_3, input_AX_ALGdedo0_last_V_0_state.read())) || 
                    (esl_seteq<1,1,1>(ap_const_logic_0, input_AX_ALGdedo0_last_V_0_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_1, input_AX_ALGdedo0_last_V_0_state.read())))) {
            input_AX_ALGdedo0_last_V_0_state = ap_const_lv2_1;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, input_AX_ALGdedo0_last_V_0_vld_in.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_2, input_AX_ALGdedo0_last_V_0_state.read())) || 
                    (esl_seteq<1,1,1>(ap_const_logic_1, input_AX_ALGdedo0_last_V_0_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_1, input_AX_ALGdedo0_last_V_0_state.read())) || 
                    (esl_seteq<1,2,2>(ap_const_lv2_3, input_AX_ALGdedo0_last_V_0_state.read()) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_1, input_AX_ALGdedo0_last_V_0_vld_in.read()) && esl_seteq<1,1,1>(ap_const_logic_0, input_AX_ALGdedo0_last_V_0_ack_out.read())) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_0, input_AX_ALGdedo0_last_V_0_vld_in.read()) && esl_seteq<1,1,1>(ap_const_logic_1, input_AX_ALGdedo0_last_V_0_ack_out.read()))))) {
            input_AX_ALGdedo0_last_V_0_state = ap_const_lv2_3;
        } else {
            input_AX_ALGdedo0_last_V_0_state = ap_const_lv2_2;
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        input_AX_ALGdedo0_strb_V_0_sel_rd = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, input_AX_ALGdedo0_strb_V_0_ack_out.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_1, input_AX_ALGdedo0_strb_V_0_vld_out.read()))) {
            input_AX_ALGdedo0_strb_V_0_sel_rd =  (sc_logic) (~input_AX_ALGdedo0_strb_V_0_sel_rd.read());
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        input_AX_ALGdedo0_strb_V_0_sel_wr = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, input_AX_ALGdedo0_strb_V_0_vld_in.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_1, input_AX_ALGdedo0_strb_V_0_ack_in.read()))) {
            input_AX_ALGdedo0_strb_V_0_sel_wr =  (sc_logic) (~input_AX_ALGdedo0_strb_V_0_sel_wr.read());
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        input_AX_ALGdedo0_strb_V_0_state = ap_const_lv2_0;
    } else {
        if (((esl_seteq<1,1,1>(ap_const_logic_0, input_AX_ALGdedo0_strb_V_0_vld_in.read()) && 
              esl_seteq<1,1,1>(ap_const_logic_1, input_AX_ALGdedo0_strb_V_0_ack_out.read()) && 
              esl_seteq<1,2,2>(ap_const_lv2_3, input_AX_ALGdedo0_strb_V_0_state.read())) || 
             (esl_seteq<1,1,1>(ap_const_logic_0, input_AX_ALGdedo0_strb_V_0_vld_in.read()) && 
              esl_seteq<1,2,2>(ap_const_lv2_2, input_AX_ALGdedo0_strb_V_0_state.read())))) {
            input_AX_ALGdedo0_strb_V_0_state = ap_const_lv2_2;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, input_AX_ALGdedo0_strb_V_0_vld_in.read()) && 
                     esl_seteq<1,1,1>(ap_const_logic_0, input_AX_ALGdedo0_strb_V_0_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_3, input_AX_ALGdedo0_strb_V_0_state.read())) || 
                    (esl_seteq<1,1,1>(ap_const_logic_0, input_AX_ALGdedo0_strb_V_0_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_1, input_AX_ALGdedo0_strb_V_0_state.read())))) {
            input_AX_ALGdedo0_strb_V_0_state = ap_const_lv2_1;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, input_AX_ALGdedo0_strb_V_0_vld_in.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_2, input_AX_ALGdedo0_strb_V_0_state.read())) || 
                    (esl_seteq<1,1,1>(ap_const_logic_1, input_AX_ALGdedo0_strb_V_0_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_1, input_AX_ALGdedo0_strb_V_0_state.read())) || 
                    (esl_seteq<1,2,2>(ap_const_lv2_3, input_AX_ALGdedo0_strb_V_0_state.read()) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_1, input_AX_ALGdedo0_strb_V_0_vld_in.read()) && esl_seteq<1,1,1>(ap_const_logic_0, input_AX_ALGdedo0_strb_V_0_ack_out.read())) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_0, input_AX_ALGdedo0_strb_V_0_vld_in.read()) && esl_seteq<1,1,1>(ap_const_logic_1, input_AX_ALGdedo0_strb_V_0_ack_out.read()))))) {
            input_AX_ALGdedo0_strb_V_0_state = ap_const_lv2_3;
        } else {
            input_AX_ALGdedo0_strb_V_0_state = ap_const_lv2_2;
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        input_AX_ALGdedo0_user_V_0_sel_rd = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, input_AX_ALGdedo0_user_V_0_ack_out.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_1, input_AX_ALGdedo0_user_V_0_vld_out.read()))) {
            input_AX_ALGdedo0_user_V_0_sel_rd =  (sc_logic) (~input_AX_ALGdedo0_user_V_0_sel_rd.read());
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        input_AX_ALGdedo0_user_V_0_sel_wr = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, input_AX_ALGdedo0_user_V_0_vld_in.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_1, input_AX_ALGdedo0_user_V_0_ack_in.read()))) {
            input_AX_ALGdedo0_user_V_0_sel_wr =  (sc_logic) (~input_AX_ALGdedo0_user_V_0_sel_wr.read());
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        input_AX_ALGdedo0_user_V_0_state = ap_const_lv2_0;
    } else {
        if (((esl_seteq<1,1,1>(ap_const_logic_0, input_AX_ALGdedo0_user_V_0_vld_in.read()) && 
              esl_seteq<1,1,1>(ap_const_logic_1, input_AX_ALGdedo0_user_V_0_ack_out.read()) && 
              esl_seteq<1,2,2>(ap_const_lv2_3, input_AX_ALGdedo0_user_V_0_state.read())) || 
             (esl_seteq<1,1,1>(ap_const_logic_0, input_AX_ALGdedo0_user_V_0_vld_in.read()) && 
              esl_seteq<1,2,2>(ap_const_lv2_2, input_AX_ALGdedo0_user_V_0_state.read())))) {
            input_AX_ALGdedo0_user_V_0_state = ap_const_lv2_2;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, input_AX_ALGdedo0_user_V_0_vld_in.read()) && 
                     esl_seteq<1,1,1>(ap_const_logic_0, input_AX_ALGdedo0_user_V_0_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_3, input_AX_ALGdedo0_user_V_0_state.read())) || 
                    (esl_seteq<1,1,1>(ap_const_logic_0, input_AX_ALGdedo0_user_V_0_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_1, input_AX_ALGdedo0_user_V_0_state.read())))) {
            input_AX_ALGdedo0_user_V_0_state = ap_const_lv2_1;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, input_AX_ALGdedo0_user_V_0_vld_in.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_2, input_AX_ALGdedo0_user_V_0_state.read())) || 
                    (esl_seteq<1,1,1>(ap_const_logic_1, input_AX_ALGdedo0_user_V_0_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_1, input_AX_ALGdedo0_user_V_0_state.read())) || 
                    (esl_seteq<1,2,2>(ap_const_lv2_3, input_AX_ALGdedo0_user_V_0_state.read()) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_1, input_AX_ALGdedo0_user_V_0_vld_in.read()) && esl_seteq<1,1,1>(ap_const_logic_0, input_AX_ALGdedo0_user_V_0_ack_out.read())) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_0, input_AX_ALGdedo0_user_V_0_vld_in.read()) && esl_seteq<1,1,1>(ap_const_logic_1, input_AX_ALGdedo0_user_V_0_ack_out.read()))))) {
            input_AX_ALGdedo0_user_V_0_state = ap_const_lv2_3;
        } else {
            input_AX_ALGdedo0_user_V_0_state = ap_const_lv2_2;
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        input_AX_ALGdedo1_data_V_0_sel_rd = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, input_AX_ALGdedo1_data_V_0_ack_out.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_1, input_AX_ALGdedo1_data_V_0_vld_out.read()))) {
            input_AX_ALGdedo1_data_V_0_sel_rd =  (sc_logic) (~input_AX_ALGdedo1_data_V_0_sel_rd.read());
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        input_AX_ALGdedo1_data_V_0_sel_wr = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, input_AX_ALGdedo1_data_V_0_vld_in.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_1, input_AX_ALGdedo1_data_V_0_ack_in.read()))) {
            input_AX_ALGdedo1_data_V_0_sel_wr =  (sc_logic) (~input_AX_ALGdedo1_data_V_0_sel_wr.read());
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        input_AX_ALGdedo1_data_V_0_state = ap_const_lv2_0;
    } else {
        if (((esl_seteq<1,1,1>(ap_const_logic_0, input_AX_ALGdedo1_data_V_0_vld_in.read()) && 
              esl_seteq<1,1,1>(ap_const_logic_1, input_AX_ALGdedo1_data_V_0_ack_out.read()) && 
              esl_seteq<1,2,2>(ap_const_lv2_3, input_AX_ALGdedo1_data_V_0_state.read())) || 
             (esl_seteq<1,1,1>(ap_const_logic_0, input_AX_ALGdedo1_data_V_0_vld_in.read()) && 
              esl_seteq<1,2,2>(ap_const_lv2_2, input_AX_ALGdedo1_data_V_0_state.read())))) {
            input_AX_ALGdedo1_data_V_0_state = ap_const_lv2_2;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, input_AX_ALGdedo1_data_V_0_vld_in.read()) && 
                     esl_seteq<1,1,1>(ap_const_logic_0, input_AX_ALGdedo1_data_V_0_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_3, input_AX_ALGdedo1_data_V_0_state.read())) || 
                    (esl_seteq<1,1,1>(ap_const_logic_0, input_AX_ALGdedo1_data_V_0_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_1, input_AX_ALGdedo1_data_V_0_state.read())))) {
            input_AX_ALGdedo1_data_V_0_state = ap_const_lv2_1;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, input_AX_ALGdedo1_data_V_0_vld_in.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_2, input_AX_ALGdedo1_data_V_0_state.read())) || 
                    (esl_seteq<1,1,1>(ap_const_logic_1, input_AX_ALGdedo1_data_V_0_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_1, input_AX_ALGdedo1_data_V_0_state.read())) || 
                    (esl_seteq<1,2,2>(ap_const_lv2_3, input_AX_ALGdedo1_data_V_0_state.read()) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_1, input_AX_ALGdedo1_data_V_0_vld_in.read()) && esl_seteq<1,1,1>(ap_const_logic_0, input_AX_ALGdedo1_data_V_0_ack_out.read())) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_0, input_AX_ALGdedo1_data_V_0_vld_in.read()) && esl_seteq<1,1,1>(ap_const_logic_1, input_AX_ALGdedo1_data_V_0_ack_out.read()))))) {
            input_AX_ALGdedo1_data_V_0_state = ap_const_lv2_3;
        } else {
            input_AX_ALGdedo1_data_V_0_state = ap_const_lv2_2;
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        input_AX_ALGdedo1_dest_V_0_sel_rd = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, input_AX_ALGdedo1_dest_V_0_ack_out.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_1, input_AX_ALGdedo1_dest_V_0_vld_out.read()))) {
            input_AX_ALGdedo1_dest_V_0_sel_rd =  (sc_logic) (~input_AX_ALGdedo1_dest_V_0_sel_rd.read());
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        input_AX_ALGdedo1_dest_V_0_sel_wr = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, input_AX_ALGdedo1_dest_V_0_vld_in.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_1, input_AX_ALGdedo1_dest_V_0_ack_in.read()))) {
            input_AX_ALGdedo1_dest_V_0_sel_wr =  (sc_logic) (~input_AX_ALGdedo1_dest_V_0_sel_wr.read());
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        input_AX_ALGdedo1_dest_V_0_state = ap_const_lv2_0;
    } else {
        if (((esl_seteq<1,1,1>(ap_const_logic_0, input_AX_ALGdedo1_dest_V_0_vld_in.read()) && 
              esl_seteq<1,1,1>(ap_const_logic_1, input_AX_ALGdedo1_dest_V_0_ack_out.read()) && 
              esl_seteq<1,2,2>(ap_const_lv2_3, input_AX_ALGdedo1_dest_V_0_state.read())) || 
             (esl_seteq<1,1,1>(ap_const_logic_0, input_AX_ALGdedo1_dest_V_0_vld_in.read()) && 
              esl_seteq<1,2,2>(ap_const_lv2_2, input_AX_ALGdedo1_dest_V_0_state.read())))) {
            input_AX_ALGdedo1_dest_V_0_state = ap_const_lv2_2;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, input_AX_ALGdedo1_dest_V_0_vld_in.read()) && 
                     esl_seteq<1,1,1>(ap_const_logic_0, input_AX_ALGdedo1_dest_V_0_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_3, input_AX_ALGdedo1_dest_V_0_state.read())) || 
                    (esl_seteq<1,1,1>(ap_const_logic_0, input_AX_ALGdedo1_dest_V_0_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_1, input_AX_ALGdedo1_dest_V_0_state.read())))) {
            input_AX_ALGdedo1_dest_V_0_state = ap_const_lv2_1;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, input_AX_ALGdedo1_dest_V_0_vld_in.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_2, input_AX_ALGdedo1_dest_V_0_state.read())) || 
                    (esl_seteq<1,1,1>(ap_const_logic_1, input_AX_ALGdedo1_dest_V_0_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_1, input_AX_ALGdedo1_dest_V_0_state.read())) || 
                    (esl_seteq<1,2,2>(ap_const_lv2_3, input_AX_ALGdedo1_dest_V_0_state.read()) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_1, input_AX_ALGdedo1_dest_V_0_vld_in.read()) && esl_seteq<1,1,1>(ap_const_logic_0, input_AX_ALGdedo1_dest_V_0_ack_out.read())) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_0, input_AX_ALGdedo1_dest_V_0_vld_in.read()) && esl_seteq<1,1,1>(ap_const_logic_1, input_AX_ALGdedo1_dest_V_0_ack_out.read()))))) {
            input_AX_ALGdedo1_dest_V_0_state = ap_const_lv2_3;
        } else {
            input_AX_ALGdedo1_dest_V_0_state = ap_const_lv2_2;
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        input_AX_ALGdedo1_id_V_0_sel_rd = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, input_AX_ALGdedo1_id_V_0_ack_out.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_1, input_AX_ALGdedo1_id_V_0_vld_out.read()))) {
            input_AX_ALGdedo1_id_V_0_sel_rd =  (sc_logic) (~input_AX_ALGdedo1_id_V_0_sel_rd.read());
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        input_AX_ALGdedo1_id_V_0_sel_wr = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, input_AX_ALGdedo1_id_V_0_vld_in.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_1, input_AX_ALGdedo1_id_V_0_ack_in.read()))) {
            input_AX_ALGdedo1_id_V_0_sel_wr =  (sc_logic) (~input_AX_ALGdedo1_id_V_0_sel_wr.read());
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        input_AX_ALGdedo1_id_V_0_state = ap_const_lv2_0;
    } else {
        if (((esl_seteq<1,1,1>(ap_const_logic_0, input_AX_ALGdedo1_id_V_0_vld_in.read()) && 
              esl_seteq<1,1,1>(ap_const_logic_1, input_AX_ALGdedo1_id_V_0_ack_out.read()) && 
              esl_seteq<1,2,2>(ap_const_lv2_3, input_AX_ALGdedo1_id_V_0_state.read())) || 
             (esl_seteq<1,1,1>(ap_const_logic_0, input_AX_ALGdedo1_id_V_0_vld_in.read()) && 
              esl_seteq<1,2,2>(ap_const_lv2_2, input_AX_ALGdedo1_id_V_0_state.read())))) {
            input_AX_ALGdedo1_id_V_0_state = ap_const_lv2_2;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, input_AX_ALGdedo1_id_V_0_vld_in.read()) && 
                     esl_seteq<1,1,1>(ap_const_logic_0, input_AX_ALGdedo1_id_V_0_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_3, input_AX_ALGdedo1_id_V_0_state.read())) || 
                    (esl_seteq<1,1,1>(ap_const_logic_0, input_AX_ALGdedo1_id_V_0_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_1, input_AX_ALGdedo1_id_V_0_state.read())))) {
            input_AX_ALGdedo1_id_V_0_state = ap_const_lv2_1;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, input_AX_ALGdedo1_id_V_0_vld_in.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_2, input_AX_ALGdedo1_id_V_0_state.read())) || 
                    (esl_seteq<1,1,1>(ap_const_logic_1, input_AX_ALGdedo1_id_V_0_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_1, input_AX_ALGdedo1_id_V_0_state.read())) || 
                    (esl_seteq<1,2,2>(ap_const_lv2_3, input_AX_ALGdedo1_id_V_0_state.read()) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_1, input_AX_ALGdedo1_id_V_0_vld_in.read()) && esl_seteq<1,1,1>(ap_const_logic_0, input_AX_ALGdedo1_id_V_0_ack_out.read())) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_0, input_AX_ALGdedo1_id_V_0_vld_in.read()) && esl_seteq<1,1,1>(ap_const_logic_1, input_AX_ALGdedo1_id_V_0_ack_out.read()))))) {
            input_AX_ALGdedo1_id_V_0_state = ap_const_lv2_3;
        } else {
            input_AX_ALGdedo1_id_V_0_state = ap_const_lv2_2;
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        input_AX_ALGdedo1_keep_V_0_sel_rd = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, input_AX_ALGdedo1_keep_V_0_ack_out.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_1, input_AX_ALGdedo1_keep_V_0_vld_out.read()))) {
            input_AX_ALGdedo1_keep_V_0_sel_rd =  (sc_logic) (~input_AX_ALGdedo1_keep_V_0_sel_rd.read());
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        input_AX_ALGdedo1_keep_V_0_sel_wr = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, input_AX_ALGdedo1_keep_V_0_vld_in.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_1, input_AX_ALGdedo1_keep_V_0_ack_in.read()))) {
            input_AX_ALGdedo1_keep_V_0_sel_wr =  (sc_logic) (~input_AX_ALGdedo1_keep_V_0_sel_wr.read());
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        input_AX_ALGdedo1_keep_V_0_state = ap_const_lv2_0;
    } else {
        if (((esl_seteq<1,1,1>(ap_const_logic_0, input_AX_ALGdedo1_keep_V_0_vld_in.read()) && 
              esl_seteq<1,1,1>(ap_const_logic_1, input_AX_ALGdedo1_keep_V_0_ack_out.read()) && 
              esl_seteq<1,2,2>(ap_const_lv2_3, input_AX_ALGdedo1_keep_V_0_state.read())) || 
             (esl_seteq<1,1,1>(ap_const_logic_0, input_AX_ALGdedo1_keep_V_0_vld_in.read()) && 
              esl_seteq<1,2,2>(ap_const_lv2_2, input_AX_ALGdedo1_keep_V_0_state.read())))) {
            input_AX_ALGdedo1_keep_V_0_state = ap_const_lv2_2;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, input_AX_ALGdedo1_keep_V_0_vld_in.read()) && 
                     esl_seteq<1,1,1>(ap_const_logic_0, input_AX_ALGdedo1_keep_V_0_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_3, input_AX_ALGdedo1_keep_V_0_state.read())) || 
                    (esl_seteq<1,1,1>(ap_const_logic_0, input_AX_ALGdedo1_keep_V_0_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_1, input_AX_ALGdedo1_keep_V_0_state.read())))) {
            input_AX_ALGdedo1_keep_V_0_state = ap_const_lv2_1;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, input_AX_ALGdedo1_keep_V_0_vld_in.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_2, input_AX_ALGdedo1_keep_V_0_state.read())) || 
                    (esl_seteq<1,1,1>(ap_const_logic_1, input_AX_ALGdedo1_keep_V_0_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_1, input_AX_ALGdedo1_keep_V_0_state.read())) || 
                    (esl_seteq<1,2,2>(ap_const_lv2_3, input_AX_ALGdedo1_keep_V_0_state.read()) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_1, input_AX_ALGdedo1_keep_V_0_vld_in.read()) && esl_seteq<1,1,1>(ap_const_logic_0, input_AX_ALGdedo1_keep_V_0_ack_out.read())) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_0, input_AX_ALGdedo1_keep_V_0_vld_in.read()) && esl_seteq<1,1,1>(ap_const_logic_1, input_AX_ALGdedo1_keep_V_0_ack_out.read()))))) {
            input_AX_ALGdedo1_keep_V_0_state = ap_const_lv2_3;
        } else {
            input_AX_ALGdedo1_keep_V_0_state = ap_const_lv2_2;
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        input_AX_ALGdedo1_last_V_0_sel_rd = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, input_AX_ALGdedo1_last_V_0_ack_out.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_1, input_AX_ALGdedo1_last_V_0_vld_out.read()))) {
            input_AX_ALGdedo1_last_V_0_sel_rd =  (sc_logic) (~input_AX_ALGdedo1_last_V_0_sel_rd.read());
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        input_AX_ALGdedo1_last_V_0_sel_wr = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, input_AX_ALGdedo1_last_V_0_vld_in.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_1, input_AX_ALGdedo1_last_V_0_ack_in.read()))) {
            input_AX_ALGdedo1_last_V_0_sel_wr =  (sc_logic) (~input_AX_ALGdedo1_last_V_0_sel_wr.read());
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        input_AX_ALGdedo1_last_V_0_state = ap_const_lv2_0;
    } else {
        if (((esl_seteq<1,1,1>(ap_const_logic_0, input_AX_ALGdedo1_last_V_0_vld_in.read()) && 
              esl_seteq<1,1,1>(ap_const_logic_1, input_AX_ALGdedo1_last_V_0_ack_out.read()) && 
              esl_seteq<1,2,2>(ap_const_lv2_3, input_AX_ALGdedo1_last_V_0_state.read())) || 
             (esl_seteq<1,1,1>(ap_const_logic_0, input_AX_ALGdedo1_last_V_0_vld_in.read()) && 
              esl_seteq<1,2,2>(ap_const_lv2_2, input_AX_ALGdedo1_last_V_0_state.read())))) {
            input_AX_ALGdedo1_last_V_0_state = ap_const_lv2_2;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, input_AX_ALGdedo1_last_V_0_vld_in.read()) && 
                     esl_seteq<1,1,1>(ap_const_logic_0, input_AX_ALGdedo1_last_V_0_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_3, input_AX_ALGdedo1_last_V_0_state.read())) || 
                    (esl_seteq<1,1,1>(ap_const_logic_0, input_AX_ALGdedo1_last_V_0_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_1, input_AX_ALGdedo1_last_V_0_state.read())))) {
            input_AX_ALGdedo1_last_V_0_state = ap_const_lv2_1;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, input_AX_ALGdedo1_last_V_0_vld_in.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_2, input_AX_ALGdedo1_last_V_0_state.read())) || 
                    (esl_seteq<1,1,1>(ap_const_logic_1, input_AX_ALGdedo1_last_V_0_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_1, input_AX_ALGdedo1_last_V_0_state.read())) || 
                    (esl_seteq<1,2,2>(ap_const_lv2_3, input_AX_ALGdedo1_last_V_0_state.read()) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_1, input_AX_ALGdedo1_last_V_0_vld_in.read()) && esl_seteq<1,1,1>(ap_const_logic_0, input_AX_ALGdedo1_last_V_0_ack_out.read())) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_0, input_AX_ALGdedo1_last_V_0_vld_in.read()) && esl_seteq<1,1,1>(ap_const_logic_1, input_AX_ALGdedo1_last_V_0_ack_out.read()))))) {
            input_AX_ALGdedo1_last_V_0_state = ap_const_lv2_3;
        } else {
            input_AX_ALGdedo1_last_V_0_state = ap_const_lv2_2;
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        input_AX_ALGdedo1_strb_V_0_sel_rd = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, input_AX_ALGdedo1_strb_V_0_ack_out.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_1, input_AX_ALGdedo1_strb_V_0_vld_out.read()))) {
            input_AX_ALGdedo1_strb_V_0_sel_rd =  (sc_logic) (~input_AX_ALGdedo1_strb_V_0_sel_rd.read());
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        input_AX_ALGdedo1_strb_V_0_sel_wr = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, input_AX_ALGdedo1_strb_V_0_vld_in.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_1, input_AX_ALGdedo1_strb_V_0_ack_in.read()))) {
            input_AX_ALGdedo1_strb_V_0_sel_wr =  (sc_logic) (~input_AX_ALGdedo1_strb_V_0_sel_wr.read());
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        input_AX_ALGdedo1_strb_V_0_state = ap_const_lv2_0;
    } else {
        if (((esl_seteq<1,1,1>(ap_const_logic_0, input_AX_ALGdedo1_strb_V_0_vld_in.read()) && 
              esl_seteq<1,1,1>(ap_const_logic_1, input_AX_ALGdedo1_strb_V_0_ack_out.read()) && 
              esl_seteq<1,2,2>(ap_const_lv2_3, input_AX_ALGdedo1_strb_V_0_state.read())) || 
             (esl_seteq<1,1,1>(ap_const_logic_0, input_AX_ALGdedo1_strb_V_0_vld_in.read()) && 
              esl_seteq<1,2,2>(ap_const_lv2_2, input_AX_ALGdedo1_strb_V_0_state.read())))) {
            input_AX_ALGdedo1_strb_V_0_state = ap_const_lv2_2;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, input_AX_ALGdedo1_strb_V_0_vld_in.read()) && 
                     esl_seteq<1,1,1>(ap_const_logic_0, input_AX_ALGdedo1_strb_V_0_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_3, input_AX_ALGdedo1_strb_V_0_state.read())) || 
                    (esl_seteq<1,1,1>(ap_const_logic_0, input_AX_ALGdedo1_strb_V_0_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_1, input_AX_ALGdedo1_strb_V_0_state.read())))) {
            input_AX_ALGdedo1_strb_V_0_state = ap_const_lv2_1;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, input_AX_ALGdedo1_strb_V_0_vld_in.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_2, input_AX_ALGdedo1_strb_V_0_state.read())) || 
                    (esl_seteq<1,1,1>(ap_const_logic_1, input_AX_ALGdedo1_strb_V_0_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_1, input_AX_ALGdedo1_strb_V_0_state.read())) || 
                    (esl_seteq<1,2,2>(ap_const_lv2_3, input_AX_ALGdedo1_strb_V_0_state.read()) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_1, input_AX_ALGdedo1_strb_V_0_vld_in.read()) && esl_seteq<1,1,1>(ap_const_logic_0, input_AX_ALGdedo1_strb_V_0_ack_out.read())) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_0, input_AX_ALGdedo1_strb_V_0_vld_in.read()) && esl_seteq<1,1,1>(ap_const_logic_1, input_AX_ALGdedo1_strb_V_0_ack_out.read()))))) {
            input_AX_ALGdedo1_strb_V_0_state = ap_const_lv2_3;
        } else {
            input_AX_ALGdedo1_strb_V_0_state = ap_const_lv2_2;
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        input_AX_ALGdedo1_user_V_0_sel_rd = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, input_AX_ALGdedo1_user_V_0_ack_out.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_1, input_AX_ALGdedo1_user_V_0_vld_out.read()))) {
            input_AX_ALGdedo1_user_V_0_sel_rd =  (sc_logic) (~input_AX_ALGdedo1_user_V_0_sel_rd.read());
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        input_AX_ALGdedo1_user_V_0_sel_wr = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, input_AX_ALGdedo1_user_V_0_vld_in.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_1, input_AX_ALGdedo1_user_V_0_ack_in.read()))) {
            input_AX_ALGdedo1_user_V_0_sel_wr =  (sc_logic) (~input_AX_ALGdedo1_user_V_0_sel_wr.read());
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        input_AX_ALGdedo1_user_V_0_state = ap_const_lv2_0;
    } else {
        if (((esl_seteq<1,1,1>(ap_const_logic_0, input_AX_ALGdedo1_user_V_0_vld_in.read()) && 
              esl_seteq<1,1,1>(ap_const_logic_1, input_AX_ALGdedo1_user_V_0_ack_out.read()) && 
              esl_seteq<1,2,2>(ap_const_lv2_3, input_AX_ALGdedo1_user_V_0_state.read())) || 
             (esl_seteq<1,1,1>(ap_const_logic_0, input_AX_ALGdedo1_user_V_0_vld_in.read()) && 
              esl_seteq<1,2,2>(ap_const_lv2_2, input_AX_ALGdedo1_user_V_0_state.read())))) {
            input_AX_ALGdedo1_user_V_0_state = ap_const_lv2_2;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, input_AX_ALGdedo1_user_V_0_vld_in.read()) && 
                     esl_seteq<1,1,1>(ap_const_logic_0, input_AX_ALGdedo1_user_V_0_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_3, input_AX_ALGdedo1_user_V_0_state.read())) || 
                    (esl_seteq<1,1,1>(ap_const_logic_0, input_AX_ALGdedo1_user_V_0_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_1, input_AX_ALGdedo1_user_V_0_state.read())))) {
            input_AX_ALGdedo1_user_V_0_state = ap_const_lv2_1;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, input_AX_ALGdedo1_user_V_0_vld_in.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_2, input_AX_ALGdedo1_user_V_0_state.read())) || 
                    (esl_seteq<1,1,1>(ap_const_logic_1, input_AX_ALGdedo1_user_V_0_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_1, input_AX_ALGdedo1_user_V_0_state.read())) || 
                    (esl_seteq<1,2,2>(ap_const_lv2_3, input_AX_ALGdedo1_user_V_0_state.read()) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_1, input_AX_ALGdedo1_user_V_0_vld_in.read()) && esl_seteq<1,1,1>(ap_const_logic_0, input_AX_ALGdedo1_user_V_0_ack_out.read())) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_0, input_AX_ALGdedo1_user_V_0_vld_in.read()) && esl_seteq<1,1,1>(ap_const_logic_1, input_AX_ALGdedo1_user_V_0_ack_out.read()))))) {
            input_AX_ALGdedo1_user_V_0_state = ap_const_lv2_3;
        } else {
            input_AX_ALGdedo1_user_V_0_state = ap_const_lv2_2;
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        input_AX_ALGpalma0_data_V_0_sel_rd = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, input_AX_ALGpalma0_data_V_0_ack_out.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_1, input_AX_ALGpalma0_data_V_0_vld_out.read()))) {
            input_AX_ALGpalma0_data_V_0_sel_rd =  (sc_logic) (~input_AX_ALGpalma0_data_V_0_sel_rd.read());
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        input_AX_ALGpalma0_data_V_0_sel_wr = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, input_AX_ALGpalma0_data_V_0_vld_in.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_1, input_AX_ALGpalma0_data_V_0_ack_in.read()))) {
            input_AX_ALGpalma0_data_V_0_sel_wr =  (sc_logic) (~input_AX_ALGpalma0_data_V_0_sel_wr.read());
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        input_AX_ALGpalma0_data_V_0_state = ap_const_lv2_0;
    } else {
        if (((esl_seteq<1,1,1>(ap_const_logic_0, input_AX_ALGpalma0_data_V_0_vld_in.read()) && 
              esl_seteq<1,1,1>(ap_const_logic_1, input_AX_ALGpalma0_data_V_0_ack_out.read()) && 
              esl_seteq<1,2,2>(ap_const_lv2_3, input_AX_ALGpalma0_data_V_0_state.read())) || 
             (esl_seteq<1,1,1>(ap_const_logic_0, input_AX_ALGpalma0_data_V_0_vld_in.read()) && 
              esl_seteq<1,2,2>(ap_const_lv2_2, input_AX_ALGpalma0_data_V_0_state.read())))) {
            input_AX_ALGpalma0_data_V_0_state = ap_const_lv2_2;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, input_AX_ALGpalma0_data_V_0_vld_in.read()) && 
                     esl_seteq<1,1,1>(ap_const_logic_0, input_AX_ALGpalma0_data_V_0_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_3, input_AX_ALGpalma0_data_V_0_state.read())) || 
                    (esl_seteq<1,1,1>(ap_const_logic_0, input_AX_ALGpalma0_data_V_0_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_1, input_AX_ALGpalma0_data_V_0_state.read())))) {
            input_AX_ALGpalma0_data_V_0_state = ap_const_lv2_1;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, input_AX_ALGpalma0_data_V_0_vld_in.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_2, input_AX_ALGpalma0_data_V_0_state.read())) || 
                    (esl_seteq<1,1,1>(ap_const_logic_1, input_AX_ALGpalma0_data_V_0_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_1, input_AX_ALGpalma0_data_V_0_state.read())) || 
                    (esl_seteq<1,2,2>(ap_const_lv2_3, input_AX_ALGpalma0_data_V_0_state.read()) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_1, input_AX_ALGpalma0_data_V_0_vld_in.read()) && esl_seteq<1,1,1>(ap_const_logic_0, input_AX_ALGpalma0_data_V_0_ack_out.read())) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_0, input_AX_ALGpalma0_data_V_0_vld_in.read()) && esl_seteq<1,1,1>(ap_const_logic_1, input_AX_ALGpalma0_data_V_0_ack_out.read()))))) {
            input_AX_ALGpalma0_data_V_0_state = ap_const_lv2_3;
        } else {
            input_AX_ALGpalma0_data_V_0_state = ap_const_lv2_2;
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        input_AX_ALGpalma0_dest_V_0_sel_rd = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, input_AX_ALGpalma0_dest_V_0_ack_out.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_1, input_AX_ALGpalma0_dest_V_0_vld_out.read()))) {
            input_AX_ALGpalma0_dest_V_0_sel_rd =  (sc_logic) (~input_AX_ALGpalma0_dest_V_0_sel_rd.read());
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        input_AX_ALGpalma0_dest_V_0_sel_wr = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, input_AX_ALGpalma0_dest_V_0_vld_in.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_1, input_AX_ALGpalma0_dest_V_0_ack_in.read()))) {
            input_AX_ALGpalma0_dest_V_0_sel_wr =  (sc_logic) (~input_AX_ALGpalma0_dest_V_0_sel_wr.read());
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        input_AX_ALGpalma0_dest_V_0_state = ap_const_lv2_0;
    } else {
        if (((esl_seteq<1,1,1>(ap_const_logic_0, input_AX_ALGpalma0_dest_V_0_vld_in.read()) && 
              esl_seteq<1,1,1>(ap_const_logic_1, input_AX_ALGpalma0_dest_V_0_ack_out.read()) && 
              esl_seteq<1,2,2>(ap_const_lv2_3, input_AX_ALGpalma0_dest_V_0_state.read())) || 
             (esl_seteq<1,1,1>(ap_const_logic_0, input_AX_ALGpalma0_dest_V_0_vld_in.read()) && 
              esl_seteq<1,2,2>(ap_const_lv2_2, input_AX_ALGpalma0_dest_V_0_state.read())))) {
            input_AX_ALGpalma0_dest_V_0_state = ap_const_lv2_2;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, input_AX_ALGpalma0_dest_V_0_vld_in.read()) && 
                     esl_seteq<1,1,1>(ap_const_logic_0, input_AX_ALGpalma0_dest_V_0_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_3, input_AX_ALGpalma0_dest_V_0_state.read())) || 
                    (esl_seteq<1,1,1>(ap_const_logic_0, input_AX_ALGpalma0_dest_V_0_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_1, input_AX_ALGpalma0_dest_V_0_state.read())))) {
            input_AX_ALGpalma0_dest_V_0_state = ap_const_lv2_1;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, input_AX_ALGpalma0_dest_V_0_vld_in.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_2, input_AX_ALGpalma0_dest_V_0_state.read())) || 
                    (esl_seteq<1,1,1>(ap_const_logic_1, input_AX_ALGpalma0_dest_V_0_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_1, input_AX_ALGpalma0_dest_V_0_state.read())) || 
                    (esl_seteq<1,2,2>(ap_const_lv2_3, input_AX_ALGpalma0_dest_V_0_state.read()) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_1, input_AX_ALGpalma0_dest_V_0_vld_in.read()) && esl_seteq<1,1,1>(ap_const_logic_0, input_AX_ALGpalma0_dest_V_0_ack_out.read())) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_0, input_AX_ALGpalma0_dest_V_0_vld_in.read()) && esl_seteq<1,1,1>(ap_const_logic_1, input_AX_ALGpalma0_dest_V_0_ack_out.read()))))) {
            input_AX_ALGpalma0_dest_V_0_state = ap_const_lv2_3;
        } else {
            input_AX_ALGpalma0_dest_V_0_state = ap_const_lv2_2;
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        input_AX_ALGpalma0_id_V_0_sel_rd = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, input_AX_ALGpalma0_id_V_0_ack_out.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_1, input_AX_ALGpalma0_id_V_0_vld_out.read()))) {
            input_AX_ALGpalma0_id_V_0_sel_rd =  (sc_logic) (~input_AX_ALGpalma0_id_V_0_sel_rd.read());
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        input_AX_ALGpalma0_id_V_0_sel_wr = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, input_AX_ALGpalma0_id_V_0_vld_in.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_1, input_AX_ALGpalma0_id_V_0_ack_in.read()))) {
            input_AX_ALGpalma0_id_V_0_sel_wr =  (sc_logic) (~input_AX_ALGpalma0_id_V_0_sel_wr.read());
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        input_AX_ALGpalma0_id_V_0_state = ap_const_lv2_0;
    } else {
        if (((esl_seteq<1,1,1>(ap_const_logic_0, input_AX_ALGpalma0_id_V_0_vld_in.read()) && 
              esl_seteq<1,1,1>(ap_const_logic_1, input_AX_ALGpalma0_id_V_0_ack_out.read()) && 
              esl_seteq<1,2,2>(ap_const_lv2_3, input_AX_ALGpalma0_id_V_0_state.read())) || 
             (esl_seteq<1,1,1>(ap_const_logic_0, input_AX_ALGpalma0_id_V_0_vld_in.read()) && 
              esl_seteq<1,2,2>(ap_const_lv2_2, input_AX_ALGpalma0_id_V_0_state.read())))) {
            input_AX_ALGpalma0_id_V_0_state = ap_const_lv2_2;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, input_AX_ALGpalma0_id_V_0_vld_in.read()) && 
                     esl_seteq<1,1,1>(ap_const_logic_0, input_AX_ALGpalma0_id_V_0_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_3, input_AX_ALGpalma0_id_V_0_state.read())) || 
                    (esl_seteq<1,1,1>(ap_const_logic_0, input_AX_ALGpalma0_id_V_0_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_1, input_AX_ALGpalma0_id_V_0_state.read())))) {
            input_AX_ALGpalma0_id_V_0_state = ap_const_lv2_1;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, input_AX_ALGpalma0_id_V_0_vld_in.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_2, input_AX_ALGpalma0_id_V_0_state.read())) || 
                    (esl_seteq<1,1,1>(ap_const_logic_1, input_AX_ALGpalma0_id_V_0_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_1, input_AX_ALGpalma0_id_V_0_state.read())) || 
                    (esl_seteq<1,2,2>(ap_const_lv2_3, input_AX_ALGpalma0_id_V_0_state.read()) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_1, input_AX_ALGpalma0_id_V_0_vld_in.read()) && esl_seteq<1,1,1>(ap_const_logic_0, input_AX_ALGpalma0_id_V_0_ack_out.read())) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_0, input_AX_ALGpalma0_id_V_0_vld_in.read()) && esl_seteq<1,1,1>(ap_const_logic_1, input_AX_ALGpalma0_id_V_0_ack_out.read()))))) {
            input_AX_ALGpalma0_id_V_0_state = ap_const_lv2_3;
        } else {
            input_AX_ALGpalma0_id_V_0_state = ap_const_lv2_2;
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        input_AX_ALGpalma0_keep_V_0_sel_rd = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, input_AX_ALGpalma0_keep_V_0_ack_out.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_1, input_AX_ALGpalma0_keep_V_0_vld_out.read()))) {
            input_AX_ALGpalma0_keep_V_0_sel_rd =  (sc_logic) (~input_AX_ALGpalma0_keep_V_0_sel_rd.read());
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        input_AX_ALGpalma0_keep_V_0_sel_wr = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, input_AX_ALGpalma0_keep_V_0_vld_in.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_1, input_AX_ALGpalma0_keep_V_0_ack_in.read()))) {
            input_AX_ALGpalma0_keep_V_0_sel_wr =  (sc_logic) (~input_AX_ALGpalma0_keep_V_0_sel_wr.read());
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        input_AX_ALGpalma0_keep_V_0_state = ap_const_lv2_0;
    } else {
        if (((esl_seteq<1,1,1>(ap_const_logic_0, input_AX_ALGpalma0_keep_V_0_vld_in.read()) && 
              esl_seteq<1,1,1>(ap_const_logic_1, input_AX_ALGpalma0_keep_V_0_ack_out.read()) && 
              esl_seteq<1,2,2>(ap_const_lv2_3, input_AX_ALGpalma0_keep_V_0_state.read())) || 
             (esl_seteq<1,1,1>(ap_const_logic_0, input_AX_ALGpalma0_keep_V_0_vld_in.read()) && 
              esl_seteq<1,2,2>(ap_const_lv2_2, input_AX_ALGpalma0_keep_V_0_state.read())))) {
            input_AX_ALGpalma0_keep_V_0_state = ap_const_lv2_2;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, input_AX_ALGpalma0_keep_V_0_vld_in.read()) && 
                     esl_seteq<1,1,1>(ap_const_logic_0, input_AX_ALGpalma0_keep_V_0_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_3, input_AX_ALGpalma0_keep_V_0_state.read())) || 
                    (esl_seteq<1,1,1>(ap_const_logic_0, input_AX_ALGpalma0_keep_V_0_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_1, input_AX_ALGpalma0_keep_V_0_state.read())))) {
            input_AX_ALGpalma0_keep_V_0_state = ap_const_lv2_1;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, input_AX_ALGpalma0_keep_V_0_vld_in.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_2, input_AX_ALGpalma0_keep_V_0_state.read())) || 
                    (esl_seteq<1,1,1>(ap_const_logic_1, input_AX_ALGpalma0_keep_V_0_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_1, input_AX_ALGpalma0_keep_V_0_state.read())) || 
                    (esl_seteq<1,2,2>(ap_const_lv2_3, input_AX_ALGpalma0_keep_V_0_state.read()) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_1, input_AX_ALGpalma0_keep_V_0_vld_in.read()) && esl_seteq<1,1,1>(ap_const_logic_0, input_AX_ALGpalma0_keep_V_0_ack_out.read())) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_0, input_AX_ALGpalma0_keep_V_0_vld_in.read()) && esl_seteq<1,1,1>(ap_const_logic_1, input_AX_ALGpalma0_keep_V_0_ack_out.read()))))) {
            input_AX_ALGpalma0_keep_V_0_state = ap_const_lv2_3;
        } else {
            input_AX_ALGpalma0_keep_V_0_state = ap_const_lv2_2;
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        input_AX_ALGpalma0_last_V_0_sel_rd = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, input_AX_ALGpalma0_last_V_0_ack_out.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_1, input_AX_ALGpalma0_last_V_0_vld_out.read()))) {
            input_AX_ALGpalma0_last_V_0_sel_rd =  (sc_logic) (~input_AX_ALGpalma0_last_V_0_sel_rd.read());
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        input_AX_ALGpalma0_last_V_0_sel_wr = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, input_AX_ALGpalma0_last_V_0_vld_in.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_1, input_AX_ALGpalma0_last_V_0_ack_in.read()))) {
            input_AX_ALGpalma0_last_V_0_sel_wr =  (sc_logic) (~input_AX_ALGpalma0_last_V_0_sel_wr.read());
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        input_AX_ALGpalma0_last_V_0_state = ap_const_lv2_0;
    } else {
        if (((esl_seteq<1,1,1>(ap_const_logic_0, input_AX_ALGpalma0_last_V_0_vld_in.read()) && 
              esl_seteq<1,1,1>(ap_const_logic_1, input_AX_ALGpalma0_last_V_0_ack_out.read()) && 
              esl_seteq<1,2,2>(ap_const_lv2_3, input_AX_ALGpalma0_last_V_0_state.read())) || 
             (esl_seteq<1,1,1>(ap_const_logic_0, input_AX_ALGpalma0_last_V_0_vld_in.read()) && 
              esl_seteq<1,2,2>(ap_const_lv2_2, input_AX_ALGpalma0_last_V_0_state.read())))) {
            input_AX_ALGpalma0_last_V_0_state = ap_const_lv2_2;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, input_AX_ALGpalma0_last_V_0_vld_in.read()) && 
                     esl_seteq<1,1,1>(ap_const_logic_0, input_AX_ALGpalma0_last_V_0_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_3, input_AX_ALGpalma0_last_V_0_state.read())) || 
                    (esl_seteq<1,1,1>(ap_const_logic_0, input_AX_ALGpalma0_last_V_0_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_1, input_AX_ALGpalma0_last_V_0_state.read())))) {
            input_AX_ALGpalma0_last_V_0_state = ap_const_lv2_1;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, input_AX_ALGpalma0_last_V_0_vld_in.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_2, input_AX_ALGpalma0_last_V_0_state.read())) || 
                    (esl_seteq<1,1,1>(ap_const_logic_1, input_AX_ALGpalma0_last_V_0_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_1, input_AX_ALGpalma0_last_V_0_state.read())) || 
                    (esl_seteq<1,2,2>(ap_const_lv2_3, input_AX_ALGpalma0_last_V_0_state.read()) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_1, input_AX_ALGpalma0_last_V_0_vld_in.read()) && esl_seteq<1,1,1>(ap_const_logic_0, input_AX_ALGpalma0_last_V_0_ack_out.read())) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_0, input_AX_ALGpalma0_last_V_0_vld_in.read()) && esl_seteq<1,1,1>(ap_const_logic_1, input_AX_ALGpalma0_last_V_0_ack_out.read()))))) {
            input_AX_ALGpalma0_last_V_0_state = ap_const_lv2_3;
        } else {
            input_AX_ALGpalma0_last_V_0_state = ap_const_lv2_2;
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        input_AX_ALGpalma0_strb_V_0_sel_rd = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, input_AX_ALGpalma0_strb_V_0_ack_out.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_1, input_AX_ALGpalma0_strb_V_0_vld_out.read()))) {
            input_AX_ALGpalma0_strb_V_0_sel_rd =  (sc_logic) (~input_AX_ALGpalma0_strb_V_0_sel_rd.read());
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        input_AX_ALGpalma0_strb_V_0_sel_wr = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, input_AX_ALGpalma0_strb_V_0_vld_in.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_1, input_AX_ALGpalma0_strb_V_0_ack_in.read()))) {
            input_AX_ALGpalma0_strb_V_0_sel_wr =  (sc_logic) (~input_AX_ALGpalma0_strb_V_0_sel_wr.read());
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        input_AX_ALGpalma0_strb_V_0_state = ap_const_lv2_0;
    } else {
        if (((esl_seteq<1,1,1>(ap_const_logic_0, input_AX_ALGpalma0_strb_V_0_vld_in.read()) && 
              esl_seteq<1,1,1>(ap_const_logic_1, input_AX_ALGpalma0_strb_V_0_ack_out.read()) && 
              esl_seteq<1,2,2>(ap_const_lv2_3, input_AX_ALGpalma0_strb_V_0_state.read())) || 
             (esl_seteq<1,1,1>(ap_const_logic_0, input_AX_ALGpalma0_strb_V_0_vld_in.read()) && 
              esl_seteq<1,2,2>(ap_const_lv2_2, input_AX_ALGpalma0_strb_V_0_state.read())))) {
            input_AX_ALGpalma0_strb_V_0_state = ap_const_lv2_2;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, input_AX_ALGpalma0_strb_V_0_vld_in.read()) && 
                     esl_seteq<1,1,1>(ap_const_logic_0, input_AX_ALGpalma0_strb_V_0_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_3, input_AX_ALGpalma0_strb_V_0_state.read())) || 
                    (esl_seteq<1,1,1>(ap_const_logic_0, input_AX_ALGpalma0_strb_V_0_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_1, input_AX_ALGpalma0_strb_V_0_state.read())))) {
            input_AX_ALGpalma0_strb_V_0_state = ap_const_lv2_1;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, input_AX_ALGpalma0_strb_V_0_vld_in.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_2, input_AX_ALGpalma0_strb_V_0_state.read())) || 
                    (esl_seteq<1,1,1>(ap_const_logic_1, input_AX_ALGpalma0_strb_V_0_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_1, input_AX_ALGpalma0_strb_V_0_state.read())) || 
                    (esl_seteq<1,2,2>(ap_const_lv2_3, input_AX_ALGpalma0_strb_V_0_state.read()) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_1, input_AX_ALGpalma0_strb_V_0_vld_in.read()) && esl_seteq<1,1,1>(ap_const_logic_0, input_AX_ALGpalma0_strb_V_0_ack_out.read())) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_0, input_AX_ALGpalma0_strb_V_0_vld_in.read()) && esl_seteq<1,1,1>(ap_const_logic_1, input_AX_ALGpalma0_strb_V_0_ack_out.read()))))) {
            input_AX_ALGpalma0_strb_V_0_state = ap_const_lv2_3;
        } else {
            input_AX_ALGpalma0_strb_V_0_state = ap_const_lv2_2;
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        input_AX_ALGpalma0_user_V_0_sel_rd = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, input_AX_ALGpalma0_user_V_0_ack_out.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_1, input_AX_ALGpalma0_user_V_0_vld_out.read()))) {
            input_AX_ALGpalma0_user_V_0_sel_rd =  (sc_logic) (~input_AX_ALGpalma0_user_V_0_sel_rd.read());
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        input_AX_ALGpalma0_user_V_0_sel_wr = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, input_AX_ALGpalma0_user_V_0_vld_in.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_1, input_AX_ALGpalma0_user_V_0_ack_in.read()))) {
            input_AX_ALGpalma0_user_V_0_sel_wr =  (sc_logic) (~input_AX_ALGpalma0_user_V_0_sel_wr.read());
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        input_AX_ALGpalma0_user_V_0_state = ap_const_lv2_0;
    } else {
        if (((esl_seteq<1,1,1>(ap_const_logic_0, input_AX_ALGpalma0_user_V_0_vld_in.read()) && 
              esl_seteq<1,1,1>(ap_const_logic_1, input_AX_ALGpalma0_user_V_0_ack_out.read()) && 
              esl_seteq<1,2,2>(ap_const_lv2_3, input_AX_ALGpalma0_user_V_0_state.read())) || 
             (esl_seteq<1,1,1>(ap_const_logic_0, input_AX_ALGpalma0_user_V_0_vld_in.read()) && 
              esl_seteq<1,2,2>(ap_const_lv2_2, input_AX_ALGpalma0_user_V_0_state.read())))) {
            input_AX_ALGpalma0_user_V_0_state = ap_const_lv2_2;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, input_AX_ALGpalma0_user_V_0_vld_in.read()) && 
                     esl_seteq<1,1,1>(ap_const_logic_0, input_AX_ALGpalma0_user_V_0_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_3, input_AX_ALGpalma0_user_V_0_state.read())) || 
                    (esl_seteq<1,1,1>(ap_const_logic_0, input_AX_ALGpalma0_user_V_0_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_1, input_AX_ALGpalma0_user_V_0_state.read())))) {
            input_AX_ALGpalma0_user_V_0_state = ap_const_lv2_1;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, input_AX_ALGpalma0_user_V_0_vld_in.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_2, input_AX_ALGpalma0_user_V_0_state.read())) || 
                    (esl_seteq<1,1,1>(ap_const_logic_1, input_AX_ALGpalma0_user_V_0_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_1, input_AX_ALGpalma0_user_V_0_state.read())) || 
                    (esl_seteq<1,2,2>(ap_const_lv2_3, input_AX_ALGpalma0_user_V_0_state.read()) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_1, input_AX_ALGpalma0_user_V_0_vld_in.read()) && esl_seteq<1,1,1>(ap_const_logic_0, input_AX_ALGpalma0_user_V_0_ack_out.read())) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_0, input_AX_ALGpalma0_user_V_0_vld_in.read()) && esl_seteq<1,1,1>(ap_const_logic_1, input_AX_ALGpalma0_user_V_0_ack_out.read()))))) {
            input_AX_ALGpalma0_user_V_0_state = ap_const_lv2_3;
        } else {
            input_AX_ALGpalma0_user_V_0_state = ap_const_lv2_2;
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        input_AX_ALGpalma1_data_V_0_sel_rd = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, input_AX_ALGpalma1_data_V_0_ack_out.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_1, input_AX_ALGpalma1_data_V_0_vld_out.read()))) {
            input_AX_ALGpalma1_data_V_0_sel_rd =  (sc_logic) (~input_AX_ALGpalma1_data_V_0_sel_rd.read());
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        input_AX_ALGpalma1_data_V_0_sel_wr = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, input_AX_ALGpalma1_data_V_0_vld_in.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_1, input_AX_ALGpalma1_data_V_0_ack_in.read()))) {
            input_AX_ALGpalma1_data_V_0_sel_wr =  (sc_logic) (~input_AX_ALGpalma1_data_V_0_sel_wr.read());
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        input_AX_ALGpalma1_data_V_0_state = ap_const_lv2_0;
    } else {
        if (((esl_seteq<1,1,1>(ap_const_logic_0, input_AX_ALGpalma1_data_V_0_vld_in.read()) && 
              esl_seteq<1,1,1>(ap_const_logic_1, input_AX_ALGpalma1_data_V_0_ack_out.read()) && 
              esl_seteq<1,2,2>(ap_const_lv2_3, input_AX_ALGpalma1_data_V_0_state.read())) || 
             (esl_seteq<1,1,1>(ap_const_logic_0, input_AX_ALGpalma1_data_V_0_vld_in.read()) && 
              esl_seteq<1,2,2>(ap_const_lv2_2, input_AX_ALGpalma1_data_V_0_state.read())))) {
            input_AX_ALGpalma1_data_V_0_state = ap_const_lv2_2;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, input_AX_ALGpalma1_data_V_0_vld_in.read()) && 
                     esl_seteq<1,1,1>(ap_const_logic_0, input_AX_ALGpalma1_data_V_0_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_3, input_AX_ALGpalma1_data_V_0_state.read())) || 
                    (esl_seteq<1,1,1>(ap_const_logic_0, input_AX_ALGpalma1_data_V_0_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_1, input_AX_ALGpalma1_data_V_0_state.read())))) {
            input_AX_ALGpalma1_data_V_0_state = ap_const_lv2_1;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, input_AX_ALGpalma1_data_V_0_vld_in.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_2, input_AX_ALGpalma1_data_V_0_state.read())) || 
                    (esl_seteq<1,1,1>(ap_const_logic_1, input_AX_ALGpalma1_data_V_0_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_1, input_AX_ALGpalma1_data_V_0_state.read())) || 
                    (esl_seteq<1,2,2>(ap_const_lv2_3, input_AX_ALGpalma1_data_V_0_state.read()) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_1, input_AX_ALGpalma1_data_V_0_vld_in.read()) && esl_seteq<1,1,1>(ap_const_logic_0, input_AX_ALGpalma1_data_V_0_ack_out.read())) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_0, input_AX_ALGpalma1_data_V_0_vld_in.read()) && esl_seteq<1,1,1>(ap_const_logic_1, input_AX_ALGpalma1_data_V_0_ack_out.read()))))) {
            input_AX_ALGpalma1_data_V_0_state = ap_const_lv2_3;
        } else {
            input_AX_ALGpalma1_data_V_0_state = ap_const_lv2_2;
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        input_AX_ALGpalma1_dest_V_0_sel_rd = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, input_AX_ALGpalma1_dest_V_0_ack_out.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_1, input_AX_ALGpalma1_dest_V_0_vld_out.read()))) {
            input_AX_ALGpalma1_dest_V_0_sel_rd =  (sc_logic) (~input_AX_ALGpalma1_dest_V_0_sel_rd.read());
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        input_AX_ALGpalma1_dest_V_0_sel_wr = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, input_AX_ALGpalma1_dest_V_0_vld_in.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_1, input_AX_ALGpalma1_dest_V_0_ack_in.read()))) {
            input_AX_ALGpalma1_dest_V_0_sel_wr =  (sc_logic) (~input_AX_ALGpalma1_dest_V_0_sel_wr.read());
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        input_AX_ALGpalma1_dest_V_0_state = ap_const_lv2_0;
    } else {
        if (((esl_seteq<1,1,1>(ap_const_logic_0, input_AX_ALGpalma1_dest_V_0_vld_in.read()) && 
              esl_seteq<1,1,1>(ap_const_logic_1, input_AX_ALGpalma1_dest_V_0_ack_out.read()) && 
              esl_seteq<1,2,2>(ap_const_lv2_3, input_AX_ALGpalma1_dest_V_0_state.read())) || 
             (esl_seteq<1,1,1>(ap_const_logic_0, input_AX_ALGpalma1_dest_V_0_vld_in.read()) && 
              esl_seteq<1,2,2>(ap_const_lv2_2, input_AX_ALGpalma1_dest_V_0_state.read())))) {
            input_AX_ALGpalma1_dest_V_0_state = ap_const_lv2_2;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, input_AX_ALGpalma1_dest_V_0_vld_in.read()) && 
                     esl_seteq<1,1,1>(ap_const_logic_0, input_AX_ALGpalma1_dest_V_0_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_3, input_AX_ALGpalma1_dest_V_0_state.read())) || 
                    (esl_seteq<1,1,1>(ap_const_logic_0, input_AX_ALGpalma1_dest_V_0_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_1, input_AX_ALGpalma1_dest_V_0_state.read())))) {
            input_AX_ALGpalma1_dest_V_0_state = ap_const_lv2_1;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, input_AX_ALGpalma1_dest_V_0_vld_in.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_2, input_AX_ALGpalma1_dest_V_0_state.read())) || 
                    (esl_seteq<1,1,1>(ap_const_logic_1, input_AX_ALGpalma1_dest_V_0_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_1, input_AX_ALGpalma1_dest_V_0_state.read())) || 
                    (esl_seteq<1,2,2>(ap_const_lv2_3, input_AX_ALGpalma1_dest_V_0_state.read()) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_1, input_AX_ALGpalma1_dest_V_0_vld_in.read()) && esl_seteq<1,1,1>(ap_const_logic_0, input_AX_ALGpalma1_dest_V_0_ack_out.read())) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_0, input_AX_ALGpalma1_dest_V_0_vld_in.read()) && esl_seteq<1,1,1>(ap_const_logic_1, input_AX_ALGpalma1_dest_V_0_ack_out.read()))))) {
            input_AX_ALGpalma1_dest_V_0_state = ap_const_lv2_3;
        } else {
            input_AX_ALGpalma1_dest_V_0_state = ap_const_lv2_2;
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        input_AX_ALGpalma1_id_V_0_sel_rd = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, input_AX_ALGpalma1_id_V_0_ack_out.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_1, input_AX_ALGpalma1_id_V_0_vld_out.read()))) {
            input_AX_ALGpalma1_id_V_0_sel_rd =  (sc_logic) (~input_AX_ALGpalma1_id_V_0_sel_rd.read());
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        input_AX_ALGpalma1_id_V_0_sel_wr = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, input_AX_ALGpalma1_id_V_0_vld_in.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_1, input_AX_ALGpalma1_id_V_0_ack_in.read()))) {
            input_AX_ALGpalma1_id_V_0_sel_wr =  (sc_logic) (~input_AX_ALGpalma1_id_V_0_sel_wr.read());
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        input_AX_ALGpalma1_id_V_0_state = ap_const_lv2_0;
    } else {
        if (((esl_seteq<1,1,1>(ap_const_logic_0, input_AX_ALGpalma1_id_V_0_vld_in.read()) && 
              esl_seteq<1,1,1>(ap_const_logic_1, input_AX_ALGpalma1_id_V_0_ack_out.read()) && 
              esl_seteq<1,2,2>(ap_const_lv2_3, input_AX_ALGpalma1_id_V_0_state.read())) || 
             (esl_seteq<1,1,1>(ap_const_logic_0, input_AX_ALGpalma1_id_V_0_vld_in.read()) && 
              esl_seteq<1,2,2>(ap_const_lv2_2, input_AX_ALGpalma1_id_V_0_state.read())))) {
            input_AX_ALGpalma1_id_V_0_state = ap_const_lv2_2;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, input_AX_ALGpalma1_id_V_0_vld_in.read()) && 
                     esl_seteq<1,1,1>(ap_const_logic_0, input_AX_ALGpalma1_id_V_0_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_3, input_AX_ALGpalma1_id_V_0_state.read())) || 
                    (esl_seteq<1,1,1>(ap_const_logic_0, input_AX_ALGpalma1_id_V_0_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_1, input_AX_ALGpalma1_id_V_0_state.read())))) {
            input_AX_ALGpalma1_id_V_0_state = ap_const_lv2_1;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, input_AX_ALGpalma1_id_V_0_vld_in.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_2, input_AX_ALGpalma1_id_V_0_state.read())) || 
                    (esl_seteq<1,1,1>(ap_const_logic_1, input_AX_ALGpalma1_id_V_0_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_1, input_AX_ALGpalma1_id_V_0_state.read())) || 
                    (esl_seteq<1,2,2>(ap_const_lv2_3, input_AX_ALGpalma1_id_V_0_state.read()) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_1, input_AX_ALGpalma1_id_V_0_vld_in.read()) && esl_seteq<1,1,1>(ap_const_logic_0, input_AX_ALGpalma1_id_V_0_ack_out.read())) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_0, input_AX_ALGpalma1_id_V_0_vld_in.read()) && esl_seteq<1,1,1>(ap_const_logic_1, input_AX_ALGpalma1_id_V_0_ack_out.read()))))) {
            input_AX_ALGpalma1_id_V_0_state = ap_const_lv2_3;
        } else {
            input_AX_ALGpalma1_id_V_0_state = ap_const_lv2_2;
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        input_AX_ALGpalma1_keep_V_0_sel_rd = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, input_AX_ALGpalma1_keep_V_0_ack_out.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_1, input_AX_ALGpalma1_keep_V_0_vld_out.read()))) {
            input_AX_ALGpalma1_keep_V_0_sel_rd =  (sc_logic) (~input_AX_ALGpalma1_keep_V_0_sel_rd.read());
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        input_AX_ALGpalma1_keep_V_0_sel_wr = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, input_AX_ALGpalma1_keep_V_0_vld_in.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_1, input_AX_ALGpalma1_keep_V_0_ack_in.read()))) {
            input_AX_ALGpalma1_keep_V_0_sel_wr =  (sc_logic) (~input_AX_ALGpalma1_keep_V_0_sel_wr.read());
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        input_AX_ALGpalma1_keep_V_0_state = ap_const_lv2_0;
    } else {
        if (((esl_seteq<1,1,1>(ap_const_logic_0, input_AX_ALGpalma1_keep_V_0_vld_in.read()) && 
              esl_seteq<1,1,1>(ap_const_logic_1, input_AX_ALGpalma1_keep_V_0_ack_out.read()) && 
              esl_seteq<1,2,2>(ap_const_lv2_3, input_AX_ALGpalma1_keep_V_0_state.read())) || 
             (esl_seteq<1,1,1>(ap_const_logic_0, input_AX_ALGpalma1_keep_V_0_vld_in.read()) && 
              esl_seteq<1,2,2>(ap_const_lv2_2, input_AX_ALGpalma1_keep_V_0_state.read())))) {
            input_AX_ALGpalma1_keep_V_0_state = ap_const_lv2_2;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, input_AX_ALGpalma1_keep_V_0_vld_in.read()) && 
                     esl_seteq<1,1,1>(ap_const_logic_0, input_AX_ALGpalma1_keep_V_0_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_3, input_AX_ALGpalma1_keep_V_0_state.read())) || 
                    (esl_seteq<1,1,1>(ap_const_logic_0, input_AX_ALGpalma1_keep_V_0_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_1, input_AX_ALGpalma1_keep_V_0_state.read())))) {
            input_AX_ALGpalma1_keep_V_0_state = ap_const_lv2_1;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, input_AX_ALGpalma1_keep_V_0_vld_in.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_2, input_AX_ALGpalma1_keep_V_0_state.read())) || 
                    (esl_seteq<1,1,1>(ap_const_logic_1, input_AX_ALGpalma1_keep_V_0_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_1, input_AX_ALGpalma1_keep_V_0_state.read())) || 
                    (esl_seteq<1,2,2>(ap_const_lv2_3, input_AX_ALGpalma1_keep_V_0_state.read()) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_1, input_AX_ALGpalma1_keep_V_0_vld_in.read()) && esl_seteq<1,1,1>(ap_const_logic_0, input_AX_ALGpalma1_keep_V_0_ack_out.read())) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_0, input_AX_ALGpalma1_keep_V_0_vld_in.read()) && esl_seteq<1,1,1>(ap_const_logic_1, input_AX_ALGpalma1_keep_V_0_ack_out.read()))))) {
            input_AX_ALGpalma1_keep_V_0_state = ap_const_lv2_3;
        } else {
            input_AX_ALGpalma1_keep_V_0_state = ap_const_lv2_2;
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        input_AX_ALGpalma1_last_V_0_sel_rd = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, input_AX_ALGpalma1_last_V_0_ack_out.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_1, input_AX_ALGpalma1_last_V_0_vld_out.read()))) {
            input_AX_ALGpalma1_last_V_0_sel_rd =  (sc_logic) (~input_AX_ALGpalma1_last_V_0_sel_rd.read());
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        input_AX_ALGpalma1_last_V_0_sel_wr = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, input_AX_ALGpalma1_last_V_0_vld_in.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_1, input_AX_ALGpalma1_last_V_0_ack_in.read()))) {
            input_AX_ALGpalma1_last_V_0_sel_wr =  (sc_logic) (~input_AX_ALGpalma1_last_V_0_sel_wr.read());
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        input_AX_ALGpalma1_last_V_0_state = ap_const_lv2_0;
    } else {
        if (((esl_seteq<1,1,1>(ap_const_logic_0, input_AX_ALGpalma1_last_V_0_vld_in.read()) && 
              esl_seteq<1,1,1>(ap_const_logic_1, input_AX_ALGpalma1_last_V_0_ack_out.read()) && 
              esl_seteq<1,2,2>(ap_const_lv2_3, input_AX_ALGpalma1_last_V_0_state.read())) || 
             (esl_seteq<1,1,1>(ap_const_logic_0, input_AX_ALGpalma1_last_V_0_vld_in.read()) && 
              esl_seteq<1,2,2>(ap_const_lv2_2, input_AX_ALGpalma1_last_V_0_state.read())))) {
            input_AX_ALGpalma1_last_V_0_state = ap_const_lv2_2;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, input_AX_ALGpalma1_last_V_0_vld_in.read()) && 
                     esl_seteq<1,1,1>(ap_const_logic_0, input_AX_ALGpalma1_last_V_0_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_3, input_AX_ALGpalma1_last_V_0_state.read())) || 
                    (esl_seteq<1,1,1>(ap_const_logic_0, input_AX_ALGpalma1_last_V_0_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_1, input_AX_ALGpalma1_last_V_0_state.read())))) {
            input_AX_ALGpalma1_last_V_0_state = ap_const_lv2_1;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, input_AX_ALGpalma1_last_V_0_vld_in.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_2, input_AX_ALGpalma1_last_V_0_state.read())) || 
                    (esl_seteq<1,1,1>(ap_const_logic_1, input_AX_ALGpalma1_last_V_0_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_1, input_AX_ALGpalma1_last_V_0_state.read())) || 
                    (esl_seteq<1,2,2>(ap_const_lv2_3, input_AX_ALGpalma1_last_V_0_state.read()) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_1, input_AX_ALGpalma1_last_V_0_vld_in.read()) && esl_seteq<1,1,1>(ap_const_logic_0, input_AX_ALGpalma1_last_V_0_ack_out.read())) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_0, input_AX_ALGpalma1_last_V_0_vld_in.read()) && esl_seteq<1,1,1>(ap_const_logic_1, input_AX_ALGpalma1_last_V_0_ack_out.read()))))) {
            input_AX_ALGpalma1_last_V_0_state = ap_const_lv2_3;
        } else {
            input_AX_ALGpalma1_last_V_0_state = ap_const_lv2_2;
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        input_AX_ALGpalma1_strb_V_0_sel_rd = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, input_AX_ALGpalma1_strb_V_0_ack_out.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_1, input_AX_ALGpalma1_strb_V_0_vld_out.read()))) {
            input_AX_ALGpalma1_strb_V_0_sel_rd =  (sc_logic) (~input_AX_ALGpalma1_strb_V_0_sel_rd.read());
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        input_AX_ALGpalma1_strb_V_0_sel_wr = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, input_AX_ALGpalma1_strb_V_0_vld_in.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_1, input_AX_ALGpalma1_strb_V_0_ack_in.read()))) {
            input_AX_ALGpalma1_strb_V_0_sel_wr =  (sc_logic) (~input_AX_ALGpalma1_strb_V_0_sel_wr.read());
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        input_AX_ALGpalma1_strb_V_0_state = ap_const_lv2_0;
    } else {
        if (((esl_seteq<1,1,1>(ap_const_logic_0, input_AX_ALGpalma1_strb_V_0_vld_in.read()) && 
              esl_seteq<1,1,1>(ap_const_logic_1, input_AX_ALGpalma1_strb_V_0_ack_out.read()) && 
              esl_seteq<1,2,2>(ap_const_lv2_3, input_AX_ALGpalma1_strb_V_0_state.read())) || 
             (esl_seteq<1,1,1>(ap_const_logic_0, input_AX_ALGpalma1_strb_V_0_vld_in.read()) && 
              esl_seteq<1,2,2>(ap_const_lv2_2, input_AX_ALGpalma1_strb_V_0_state.read())))) {
            input_AX_ALGpalma1_strb_V_0_state = ap_const_lv2_2;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, input_AX_ALGpalma1_strb_V_0_vld_in.read()) && 
                     esl_seteq<1,1,1>(ap_const_logic_0, input_AX_ALGpalma1_strb_V_0_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_3, input_AX_ALGpalma1_strb_V_0_state.read())) || 
                    (esl_seteq<1,1,1>(ap_const_logic_0, input_AX_ALGpalma1_strb_V_0_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_1, input_AX_ALGpalma1_strb_V_0_state.read())))) {
            input_AX_ALGpalma1_strb_V_0_state = ap_const_lv2_1;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, input_AX_ALGpalma1_strb_V_0_vld_in.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_2, input_AX_ALGpalma1_strb_V_0_state.read())) || 
                    (esl_seteq<1,1,1>(ap_const_logic_1, input_AX_ALGpalma1_strb_V_0_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_1, input_AX_ALGpalma1_strb_V_0_state.read())) || 
                    (esl_seteq<1,2,2>(ap_const_lv2_3, input_AX_ALGpalma1_strb_V_0_state.read()) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_1, input_AX_ALGpalma1_strb_V_0_vld_in.read()) && esl_seteq<1,1,1>(ap_const_logic_0, input_AX_ALGpalma1_strb_V_0_ack_out.read())) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_0, input_AX_ALGpalma1_strb_V_0_vld_in.read()) && esl_seteq<1,1,1>(ap_const_logic_1, input_AX_ALGpalma1_strb_V_0_ack_out.read()))))) {
            input_AX_ALGpalma1_strb_V_0_state = ap_const_lv2_3;
        } else {
            input_AX_ALGpalma1_strb_V_0_state = ap_const_lv2_2;
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        input_AX_ALGpalma1_user_V_0_sel_rd = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, input_AX_ALGpalma1_user_V_0_ack_out.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_1, input_AX_ALGpalma1_user_V_0_vld_out.read()))) {
            input_AX_ALGpalma1_user_V_0_sel_rd =  (sc_logic) (~input_AX_ALGpalma1_user_V_0_sel_rd.read());
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        input_AX_ALGpalma1_user_V_0_sel_wr = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, input_AX_ALGpalma1_user_V_0_vld_in.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_1, input_AX_ALGpalma1_user_V_0_ack_in.read()))) {
            input_AX_ALGpalma1_user_V_0_sel_wr =  (sc_logic) (~input_AX_ALGpalma1_user_V_0_sel_wr.read());
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        input_AX_ALGpalma1_user_V_0_state = ap_const_lv2_0;
    } else {
        if (((esl_seteq<1,1,1>(ap_const_logic_0, input_AX_ALGpalma1_user_V_0_vld_in.read()) && 
              esl_seteq<1,1,1>(ap_const_logic_1, input_AX_ALGpalma1_user_V_0_ack_out.read()) && 
              esl_seteq<1,2,2>(ap_const_lv2_3, input_AX_ALGpalma1_user_V_0_state.read())) || 
             (esl_seteq<1,1,1>(ap_const_logic_0, input_AX_ALGpalma1_user_V_0_vld_in.read()) && 
              esl_seteq<1,2,2>(ap_const_lv2_2, input_AX_ALGpalma1_user_V_0_state.read())))) {
            input_AX_ALGpalma1_user_V_0_state = ap_const_lv2_2;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, input_AX_ALGpalma1_user_V_0_vld_in.read()) && 
                     esl_seteq<1,1,1>(ap_const_logic_0, input_AX_ALGpalma1_user_V_0_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_3, input_AX_ALGpalma1_user_V_0_state.read())) || 
                    (esl_seteq<1,1,1>(ap_const_logic_0, input_AX_ALGpalma1_user_V_0_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_1, input_AX_ALGpalma1_user_V_0_state.read())))) {
            input_AX_ALGpalma1_user_V_0_state = ap_const_lv2_1;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, input_AX_ALGpalma1_user_V_0_vld_in.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_2, input_AX_ALGpalma1_user_V_0_state.read())) || 
                    (esl_seteq<1,1,1>(ap_const_logic_1, input_AX_ALGpalma1_user_V_0_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_1, input_AX_ALGpalma1_user_V_0_state.read())) || 
                    (esl_seteq<1,2,2>(ap_const_lv2_3, input_AX_ALGpalma1_user_V_0_state.read()) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_1, input_AX_ALGpalma1_user_V_0_vld_in.read()) && esl_seteq<1,1,1>(ap_const_logic_0, input_AX_ALGpalma1_user_V_0_ack_out.read())) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_0, input_AX_ALGpalma1_user_V_0_vld_in.read()) && esl_seteq<1,1,1>(ap_const_logic_1, input_AX_ALGpalma1_user_V_0_ack_out.read()))))) {
            input_AX_ALGpalma1_user_V_0_state = ap_const_lv2_3;
        } else {
            input_AX_ALGpalma1_user_V_0_state = ap_const_lv2_2;
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        output_AX_ALG_data_V_1_sel_rd = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, output_AX_ALG_data_V_1_ack_out.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_1, output_AX_ALG_data_V_1_vld_out.read()))) {
            output_AX_ALG_data_V_1_sel_rd =  (sc_logic) (~output_AX_ALG_data_V_1_sel_rd.read());
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        output_AX_ALG_data_V_1_sel_wr = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, output_AX_ALG_data_V_1_vld_in.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_1, output_AX_ALG_data_V_1_ack_in.read()))) {
            output_AX_ALG_data_V_1_sel_wr =  (sc_logic) (~output_AX_ALG_data_V_1_sel_wr.read());
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        output_AX_ALG_data_V_1_state = ap_const_lv2_0;
    } else {
        if (((esl_seteq<1,1,1>(ap_const_logic_0, output_AX_ALG_data_V_1_vld_in.read()) && 
              esl_seteq<1,1,1>(ap_const_logic_1, output_AX_ALG_data_V_1_ack_out.read()) && 
              esl_seteq<1,2,2>(ap_const_lv2_3, output_AX_ALG_data_V_1_state.read())) || 
             (esl_seteq<1,1,1>(ap_const_logic_0, output_AX_ALG_data_V_1_vld_in.read()) && 
              esl_seteq<1,2,2>(ap_const_lv2_2, output_AX_ALG_data_V_1_state.read())))) {
            output_AX_ALG_data_V_1_state = ap_const_lv2_2;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, output_AX_ALG_data_V_1_vld_in.read()) && 
                     esl_seteq<1,1,1>(ap_const_logic_0, output_AX_ALG_data_V_1_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_3, output_AX_ALG_data_V_1_state.read())) || 
                    (esl_seteq<1,1,1>(ap_const_logic_0, output_AX_ALG_data_V_1_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_1, output_AX_ALG_data_V_1_state.read())))) {
            output_AX_ALG_data_V_1_state = ap_const_lv2_1;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, output_AX_ALG_data_V_1_vld_in.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_2, output_AX_ALG_data_V_1_state.read())) || 
                    (esl_seteq<1,1,1>(ap_const_logic_1, output_AX_ALG_data_V_1_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_1, output_AX_ALG_data_V_1_state.read())) || 
                    (esl_seteq<1,2,2>(ap_const_lv2_3, output_AX_ALG_data_V_1_state.read()) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_1, output_AX_ALG_data_V_1_vld_in.read()) && esl_seteq<1,1,1>(ap_const_logic_0, output_AX_ALG_data_V_1_ack_out.read())) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_0, output_AX_ALG_data_V_1_vld_in.read()) && esl_seteq<1,1,1>(ap_const_logic_1, output_AX_ALG_data_V_1_ack_out.read()))))) {
            output_AX_ALG_data_V_1_state = ap_const_lv2_3;
        } else {
            output_AX_ALG_data_V_1_state = ap_const_lv2_2;
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        output_AX_ALG_dest_V_1_sel_rd = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, output_AX_ALG_dest_V_1_ack_out.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_1, output_AX_ALG_dest_V_1_vld_out.read()))) {
            output_AX_ALG_dest_V_1_sel_rd =  (sc_logic) (~output_AX_ALG_dest_V_1_sel_rd.read());
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        output_AX_ALG_dest_V_1_sel_wr = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, output_AX_ALG_dest_V_1_vld_in.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_1, output_AX_ALG_dest_V_1_ack_in.read()))) {
            output_AX_ALG_dest_V_1_sel_wr =  (sc_logic) (~output_AX_ALG_dest_V_1_sel_wr.read());
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        output_AX_ALG_dest_V_1_state = ap_const_lv2_0;
    } else {
        if (((esl_seteq<1,1,1>(ap_const_logic_0, output_AX_ALG_dest_V_1_vld_in.read()) && 
              esl_seteq<1,1,1>(ap_const_logic_1, output_AX_ALG_dest_V_1_ack_out.read()) && 
              esl_seteq<1,2,2>(ap_const_lv2_3, output_AX_ALG_dest_V_1_state.read())) || 
             (esl_seteq<1,1,1>(ap_const_logic_0, output_AX_ALG_dest_V_1_vld_in.read()) && 
              esl_seteq<1,2,2>(ap_const_lv2_2, output_AX_ALG_dest_V_1_state.read())))) {
            output_AX_ALG_dest_V_1_state = ap_const_lv2_2;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, output_AX_ALG_dest_V_1_vld_in.read()) && 
                     esl_seteq<1,1,1>(ap_const_logic_0, output_AX_ALG_dest_V_1_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_3, output_AX_ALG_dest_V_1_state.read())) || 
                    (esl_seteq<1,1,1>(ap_const_logic_0, output_AX_ALG_dest_V_1_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_1, output_AX_ALG_dest_V_1_state.read())))) {
            output_AX_ALG_dest_V_1_state = ap_const_lv2_1;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, output_AX_ALG_dest_V_1_vld_in.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_2, output_AX_ALG_dest_V_1_state.read())) || 
                    (esl_seteq<1,1,1>(ap_const_logic_1, output_AX_ALG_dest_V_1_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_1, output_AX_ALG_dest_V_1_state.read())) || 
                    (esl_seteq<1,2,2>(ap_const_lv2_3, output_AX_ALG_dest_V_1_state.read()) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_1, output_AX_ALG_dest_V_1_vld_in.read()) && esl_seteq<1,1,1>(ap_const_logic_0, output_AX_ALG_dest_V_1_ack_out.read())) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_0, output_AX_ALG_dest_V_1_vld_in.read()) && esl_seteq<1,1,1>(ap_const_logic_1, output_AX_ALG_dest_V_1_ack_out.read()))))) {
            output_AX_ALG_dest_V_1_state = ap_const_lv2_3;
        } else {
            output_AX_ALG_dest_V_1_state = ap_const_lv2_2;
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        output_AX_ALG_id_V_1_sel_rd = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, output_AX_ALG_id_V_1_ack_out.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_1, output_AX_ALG_id_V_1_vld_out.read()))) {
            output_AX_ALG_id_V_1_sel_rd =  (sc_logic) (~output_AX_ALG_id_V_1_sel_rd.read());
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        output_AX_ALG_id_V_1_sel_wr = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, output_AX_ALG_id_V_1_vld_in.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_1, output_AX_ALG_id_V_1_ack_in.read()))) {
            output_AX_ALG_id_V_1_sel_wr =  (sc_logic) (~output_AX_ALG_id_V_1_sel_wr.read());
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        output_AX_ALG_id_V_1_state = ap_const_lv2_0;
    } else {
        if (((esl_seteq<1,1,1>(ap_const_logic_0, output_AX_ALG_id_V_1_vld_in.read()) && 
              esl_seteq<1,1,1>(ap_const_logic_1, output_AX_ALG_id_V_1_ack_out.read()) && 
              esl_seteq<1,2,2>(ap_const_lv2_3, output_AX_ALG_id_V_1_state.read())) || 
             (esl_seteq<1,1,1>(ap_const_logic_0, output_AX_ALG_id_V_1_vld_in.read()) && 
              esl_seteq<1,2,2>(ap_const_lv2_2, output_AX_ALG_id_V_1_state.read())))) {
            output_AX_ALG_id_V_1_state = ap_const_lv2_2;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, output_AX_ALG_id_V_1_vld_in.read()) && 
                     esl_seteq<1,1,1>(ap_const_logic_0, output_AX_ALG_id_V_1_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_3, output_AX_ALG_id_V_1_state.read())) || 
                    (esl_seteq<1,1,1>(ap_const_logic_0, output_AX_ALG_id_V_1_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_1, output_AX_ALG_id_V_1_state.read())))) {
            output_AX_ALG_id_V_1_state = ap_const_lv2_1;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, output_AX_ALG_id_V_1_vld_in.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_2, output_AX_ALG_id_V_1_state.read())) || 
                    (esl_seteq<1,1,1>(ap_const_logic_1, output_AX_ALG_id_V_1_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_1, output_AX_ALG_id_V_1_state.read())) || 
                    (esl_seteq<1,2,2>(ap_const_lv2_3, output_AX_ALG_id_V_1_state.read()) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_1, output_AX_ALG_id_V_1_vld_in.read()) && esl_seteq<1,1,1>(ap_const_logic_0, output_AX_ALG_id_V_1_ack_out.read())) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_0, output_AX_ALG_id_V_1_vld_in.read()) && esl_seteq<1,1,1>(ap_const_logic_1, output_AX_ALG_id_V_1_ack_out.read()))))) {
            output_AX_ALG_id_V_1_state = ap_const_lv2_3;
        } else {
            output_AX_ALG_id_V_1_state = ap_const_lv2_2;
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        output_AX_ALG_keep_V_1_sel_rd = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, output_AX_ALG_keep_V_1_ack_out.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_1, output_AX_ALG_keep_V_1_vld_out.read()))) {
            output_AX_ALG_keep_V_1_sel_rd =  (sc_logic) (~output_AX_ALG_keep_V_1_sel_rd.read());
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        output_AX_ALG_keep_V_1_sel_wr = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, output_AX_ALG_keep_V_1_vld_in.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_1, output_AX_ALG_keep_V_1_ack_in.read()))) {
            output_AX_ALG_keep_V_1_sel_wr =  (sc_logic) (~output_AX_ALG_keep_V_1_sel_wr.read());
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        output_AX_ALG_keep_V_1_state = ap_const_lv2_0;
    } else {
        if (((esl_seteq<1,1,1>(ap_const_logic_0, output_AX_ALG_keep_V_1_vld_in.read()) && 
              esl_seteq<1,1,1>(ap_const_logic_1, output_AX_ALG_keep_V_1_ack_out.read()) && 
              esl_seteq<1,2,2>(ap_const_lv2_3, output_AX_ALG_keep_V_1_state.read())) || 
             (esl_seteq<1,1,1>(ap_const_logic_0, output_AX_ALG_keep_V_1_vld_in.read()) && 
              esl_seteq<1,2,2>(ap_const_lv2_2, output_AX_ALG_keep_V_1_state.read())))) {
            output_AX_ALG_keep_V_1_state = ap_const_lv2_2;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, output_AX_ALG_keep_V_1_vld_in.read()) && 
                     esl_seteq<1,1,1>(ap_const_logic_0, output_AX_ALG_keep_V_1_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_3, output_AX_ALG_keep_V_1_state.read())) || 
                    (esl_seteq<1,1,1>(ap_const_logic_0, output_AX_ALG_keep_V_1_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_1, output_AX_ALG_keep_V_1_state.read())))) {
            output_AX_ALG_keep_V_1_state = ap_const_lv2_1;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, output_AX_ALG_keep_V_1_vld_in.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_2, output_AX_ALG_keep_V_1_state.read())) || 
                    (esl_seteq<1,1,1>(ap_const_logic_1, output_AX_ALG_keep_V_1_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_1, output_AX_ALG_keep_V_1_state.read())) || 
                    (esl_seteq<1,2,2>(ap_const_lv2_3, output_AX_ALG_keep_V_1_state.read()) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_1, output_AX_ALG_keep_V_1_vld_in.read()) && esl_seteq<1,1,1>(ap_const_logic_0, output_AX_ALG_keep_V_1_ack_out.read())) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_0, output_AX_ALG_keep_V_1_vld_in.read()) && esl_seteq<1,1,1>(ap_const_logic_1, output_AX_ALG_keep_V_1_ack_out.read()))))) {
            output_AX_ALG_keep_V_1_state = ap_const_lv2_3;
        } else {
            output_AX_ALG_keep_V_1_state = ap_const_lv2_2;
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        output_AX_ALG_last_V_1_sel_rd = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, output_AX_ALG_last_V_1_ack_out.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_1, output_AX_ALG_last_V_1_vld_out.read()))) {
            output_AX_ALG_last_V_1_sel_rd =  (sc_logic) (~output_AX_ALG_last_V_1_sel_rd.read());
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        output_AX_ALG_last_V_1_sel_wr = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, output_AX_ALG_last_V_1_vld_in.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_1, output_AX_ALG_last_V_1_ack_in.read()))) {
            output_AX_ALG_last_V_1_sel_wr =  (sc_logic) (~output_AX_ALG_last_V_1_sel_wr.read());
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        output_AX_ALG_last_V_1_state = ap_const_lv2_0;
    } else {
        if (((esl_seteq<1,1,1>(ap_const_logic_0, output_AX_ALG_last_V_1_vld_in.read()) && 
              esl_seteq<1,1,1>(ap_const_logic_1, output_AX_ALG_last_V_1_ack_out.read()) && 
              esl_seteq<1,2,2>(ap_const_lv2_3, output_AX_ALG_last_V_1_state.read())) || 
             (esl_seteq<1,1,1>(ap_const_logic_0, output_AX_ALG_last_V_1_vld_in.read()) && 
              esl_seteq<1,2,2>(ap_const_lv2_2, output_AX_ALG_last_V_1_state.read())))) {
            output_AX_ALG_last_V_1_state = ap_const_lv2_2;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, output_AX_ALG_last_V_1_vld_in.read()) && 
                     esl_seteq<1,1,1>(ap_const_logic_0, output_AX_ALG_last_V_1_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_3, output_AX_ALG_last_V_1_state.read())) || 
                    (esl_seteq<1,1,1>(ap_const_logic_0, output_AX_ALG_last_V_1_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_1, output_AX_ALG_last_V_1_state.read())))) {
            output_AX_ALG_last_V_1_state = ap_const_lv2_1;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, output_AX_ALG_last_V_1_vld_in.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_2, output_AX_ALG_last_V_1_state.read())) || 
                    (esl_seteq<1,1,1>(ap_const_logic_1, output_AX_ALG_last_V_1_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_1, output_AX_ALG_last_V_1_state.read())) || 
                    (esl_seteq<1,2,2>(ap_const_lv2_3, output_AX_ALG_last_V_1_state.read()) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_1, output_AX_ALG_last_V_1_vld_in.read()) && esl_seteq<1,1,1>(ap_const_logic_0, output_AX_ALG_last_V_1_ack_out.read())) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_0, output_AX_ALG_last_V_1_vld_in.read()) && esl_seteq<1,1,1>(ap_const_logic_1, output_AX_ALG_last_V_1_ack_out.read()))))) {
            output_AX_ALG_last_V_1_state = ap_const_lv2_3;
        } else {
            output_AX_ALG_last_V_1_state = ap_const_lv2_2;
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        output_AX_ALG_strb_V_1_sel_rd = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, output_AX_ALG_strb_V_1_ack_out.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_1, output_AX_ALG_strb_V_1_vld_out.read()))) {
            output_AX_ALG_strb_V_1_sel_rd =  (sc_logic) (~output_AX_ALG_strb_V_1_sel_rd.read());
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        output_AX_ALG_strb_V_1_sel_wr = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, output_AX_ALG_strb_V_1_vld_in.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_1, output_AX_ALG_strb_V_1_ack_in.read()))) {
            output_AX_ALG_strb_V_1_sel_wr =  (sc_logic) (~output_AX_ALG_strb_V_1_sel_wr.read());
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        output_AX_ALG_strb_V_1_state = ap_const_lv2_0;
    } else {
        if (((esl_seteq<1,1,1>(ap_const_logic_0, output_AX_ALG_strb_V_1_vld_in.read()) && 
              esl_seteq<1,1,1>(ap_const_logic_1, output_AX_ALG_strb_V_1_ack_out.read()) && 
              esl_seteq<1,2,2>(ap_const_lv2_3, output_AX_ALG_strb_V_1_state.read())) || 
             (esl_seteq<1,1,1>(ap_const_logic_0, output_AX_ALG_strb_V_1_vld_in.read()) && 
              esl_seteq<1,2,2>(ap_const_lv2_2, output_AX_ALG_strb_V_1_state.read())))) {
            output_AX_ALG_strb_V_1_state = ap_const_lv2_2;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, output_AX_ALG_strb_V_1_vld_in.read()) && 
                     esl_seteq<1,1,1>(ap_const_logic_0, output_AX_ALG_strb_V_1_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_3, output_AX_ALG_strb_V_1_state.read())) || 
                    (esl_seteq<1,1,1>(ap_const_logic_0, output_AX_ALG_strb_V_1_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_1, output_AX_ALG_strb_V_1_state.read())))) {
            output_AX_ALG_strb_V_1_state = ap_const_lv2_1;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, output_AX_ALG_strb_V_1_vld_in.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_2, output_AX_ALG_strb_V_1_state.read())) || 
                    (esl_seteq<1,1,1>(ap_const_logic_1, output_AX_ALG_strb_V_1_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_1, output_AX_ALG_strb_V_1_state.read())) || 
                    (esl_seteq<1,2,2>(ap_const_lv2_3, output_AX_ALG_strb_V_1_state.read()) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_1, output_AX_ALG_strb_V_1_vld_in.read()) && esl_seteq<1,1,1>(ap_const_logic_0, output_AX_ALG_strb_V_1_ack_out.read())) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_0, output_AX_ALG_strb_V_1_vld_in.read()) && esl_seteq<1,1,1>(ap_const_logic_1, output_AX_ALG_strb_V_1_ack_out.read()))))) {
            output_AX_ALG_strb_V_1_state = ap_const_lv2_3;
        } else {
            output_AX_ALG_strb_V_1_state = ap_const_lv2_2;
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        output_AX_ALG_user_V_1_sel_rd = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, output_AX_ALG_user_V_1_ack_out.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_1, output_AX_ALG_user_V_1_vld_out.read()))) {
            output_AX_ALG_user_V_1_sel_rd =  (sc_logic) (~output_AX_ALG_user_V_1_sel_rd.read());
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        output_AX_ALG_user_V_1_sel_wr = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, output_AX_ALG_user_V_1_vld_in.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_1, output_AX_ALG_user_V_1_ack_in.read()))) {
            output_AX_ALG_user_V_1_sel_wr =  (sc_logic) (~output_AX_ALG_user_V_1_sel_wr.read());
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        output_AX_ALG_user_V_1_state = ap_const_lv2_0;
    } else {
        if (((esl_seteq<1,1,1>(ap_const_logic_0, output_AX_ALG_user_V_1_vld_in.read()) && 
              esl_seteq<1,1,1>(ap_const_logic_1, output_AX_ALG_user_V_1_ack_out.read()) && 
              esl_seteq<1,2,2>(ap_const_lv2_3, output_AX_ALG_user_V_1_state.read())) || 
             (esl_seteq<1,1,1>(ap_const_logic_0, output_AX_ALG_user_V_1_vld_in.read()) && 
              esl_seteq<1,2,2>(ap_const_lv2_2, output_AX_ALG_user_V_1_state.read())))) {
            output_AX_ALG_user_V_1_state = ap_const_lv2_2;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, output_AX_ALG_user_V_1_vld_in.read()) && 
                     esl_seteq<1,1,1>(ap_const_logic_0, output_AX_ALG_user_V_1_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_3, output_AX_ALG_user_V_1_state.read())) || 
                    (esl_seteq<1,1,1>(ap_const_logic_0, output_AX_ALG_user_V_1_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_1, output_AX_ALG_user_V_1_state.read())))) {
            output_AX_ALG_user_V_1_state = ap_const_lv2_1;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, output_AX_ALG_user_V_1_vld_in.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_2, output_AX_ALG_user_V_1_state.read())) || 
                    (esl_seteq<1,1,1>(ap_const_logic_1, output_AX_ALG_user_V_1_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_1, output_AX_ALG_user_V_1_state.read())) || 
                    (esl_seteq<1,2,2>(ap_const_lv2_3, output_AX_ALG_user_V_1_state.read()) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_1, output_AX_ALG_user_V_1_vld_in.read()) && esl_seteq<1,1,1>(ap_const_logic_0, output_AX_ALG_user_V_1_ack_out.read())) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_0, output_AX_ALG_user_V_1_vld_in.read()) && esl_seteq<1,1,1>(ap_const_logic_1, output_AX_ALG_user_V_1_ack_out.read()))))) {
            output_AX_ALG_user_V_1_state = ap_const_lv2_3;
        } else {
            output_AX_ALG_user_V_1_state = ap_const_lv2_2;
        }
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && !(esl_seteq<1,1,1>(ap_const_logic_0, dedo0_0_V_read_data_fu_118_input_AX_ALGpalma1_TDATA_blk_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, palma0_0_V_read_data_fu_137_input_AX_ALGpalma1_TDATA_blk_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, dedo1_0_V_read_data_fu_156_input_AX_ALGpalma1_TDATA_blk_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, palma1_0_V_read_data_fu_175_input_AX_ALGpalma1_TDATA_blk_n.read())))) {
        dedo0_0_V_reg_194 = dedo0_0_V_read_data_fu_118_ap_return.read();
        dedo1_0_V_reg_204 = dedo1_0_V_read_data_fu_156_ap_return.read();
        palma0_0_V_reg_199 = palma0_0_V_read_data_fu_137_ap_return.read();
        palma1_0_V_reg_209 = palma1_0_V_read_data_fu_175_ap_return.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, input_AX_ALGdedo0_data_V_0_load_A.read())) {
        input_AX_ALGdedo0_data_V_0_payload_A = input_AX_ALGdedo0_TDATA.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, input_AX_ALGdedo0_data_V_0_load_B.read())) {
        input_AX_ALGdedo0_data_V_0_payload_B = input_AX_ALGdedo0_TDATA.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, input_AX_ALGdedo0_dest_V_0_load_A.read())) {
        input_AX_ALGdedo0_dest_V_0_payload_A = input_AX_ALGdedo0_TDEST.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, input_AX_ALGdedo0_dest_V_0_load_B.read())) {
        input_AX_ALGdedo0_dest_V_0_payload_B = input_AX_ALGdedo0_TDEST.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, input_AX_ALGdedo0_id_V_0_load_A.read())) {
        input_AX_ALGdedo0_id_V_0_payload_A = input_AX_ALGdedo0_TID.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, input_AX_ALGdedo0_id_V_0_load_B.read())) {
        input_AX_ALGdedo0_id_V_0_payload_B = input_AX_ALGdedo0_TID.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, input_AX_ALGdedo0_keep_V_0_load_A.read())) {
        input_AX_ALGdedo0_keep_V_0_payload_A = input_AX_ALGdedo0_TKEEP.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, input_AX_ALGdedo0_keep_V_0_load_B.read())) {
        input_AX_ALGdedo0_keep_V_0_payload_B = input_AX_ALGdedo0_TKEEP.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, input_AX_ALGdedo0_last_V_0_load_A.read())) {
        input_AX_ALGdedo0_last_V_0_payload_A = input_AX_ALGdedo0_TLAST.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, input_AX_ALGdedo0_last_V_0_load_B.read())) {
        input_AX_ALGdedo0_last_V_0_payload_B = input_AX_ALGdedo0_TLAST.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, input_AX_ALGdedo0_strb_V_0_load_A.read())) {
        input_AX_ALGdedo0_strb_V_0_payload_A = input_AX_ALGdedo0_TSTRB.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, input_AX_ALGdedo0_strb_V_0_load_B.read())) {
        input_AX_ALGdedo0_strb_V_0_payload_B = input_AX_ALGdedo0_TSTRB.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, input_AX_ALGdedo0_user_V_0_load_A.read())) {
        input_AX_ALGdedo0_user_V_0_payload_A = input_AX_ALGdedo0_TUSER.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, input_AX_ALGdedo0_user_V_0_load_B.read())) {
        input_AX_ALGdedo0_user_V_0_payload_B = input_AX_ALGdedo0_TUSER.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, input_AX_ALGdedo1_data_V_0_load_A.read())) {
        input_AX_ALGdedo1_data_V_0_payload_A = input_AX_ALGdedo1_TDATA.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, input_AX_ALGdedo1_data_V_0_load_B.read())) {
        input_AX_ALGdedo1_data_V_0_payload_B = input_AX_ALGdedo1_TDATA.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, input_AX_ALGdedo1_dest_V_0_load_A.read())) {
        input_AX_ALGdedo1_dest_V_0_payload_A = input_AX_ALGdedo1_TDEST.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, input_AX_ALGdedo1_dest_V_0_load_B.read())) {
        input_AX_ALGdedo1_dest_V_0_payload_B = input_AX_ALGdedo1_TDEST.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, input_AX_ALGdedo1_id_V_0_load_A.read())) {
        input_AX_ALGdedo1_id_V_0_payload_A = input_AX_ALGdedo1_TID.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, input_AX_ALGdedo1_id_V_0_load_B.read())) {
        input_AX_ALGdedo1_id_V_0_payload_B = input_AX_ALGdedo1_TID.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, input_AX_ALGdedo1_keep_V_0_load_A.read())) {
        input_AX_ALGdedo1_keep_V_0_payload_A = input_AX_ALGdedo1_TKEEP.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, input_AX_ALGdedo1_keep_V_0_load_B.read())) {
        input_AX_ALGdedo1_keep_V_0_payload_B = input_AX_ALGdedo1_TKEEP.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, input_AX_ALGdedo1_last_V_0_load_A.read())) {
        input_AX_ALGdedo1_last_V_0_payload_A = input_AX_ALGdedo1_TLAST.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, input_AX_ALGdedo1_last_V_0_load_B.read())) {
        input_AX_ALGdedo1_last_V_0_payload_B = input_AX_ALGdedo1_TLAST.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, input_AX_ALGdedo1_strb_V_0_load_A.read())) {
        input_AX_ALGdedo1_strb_V_0_payload_A = input_AX_ALGdedo1_TSTRB.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, input_AX_ALGdedo1_strb_V_0_load_B.read())) {
        input_AX_ALGdedo1_strb_V_0_payload_B = input_AX_ALGdedo1_TSTRB.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, input_AX_ALGdedo1_user_V_0_load_A.read())) {
        input_AX_ALGdedo1_user_V_0_payload_A = input_AX_ALGdedo1_TUSER.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, input_AX_ALGdedo1_user_V_0_load_B.read())) {
        input_AX_ALGdedo1_user_V_0_payload_B = input_AX_ALGdedo1_TUSER.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, input_AX_ALGpalma0_data_V_0_load_A.read())) {
        input_AX_ALGpalma0_data_V_0_payload_A = input_AX_ALGpalma0_TDATA.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, input_AX_ALGpalma0_data_V_0_load_B.read())) {
        input_AX_ALGpalma0_data_V_0_payload_B = input_AX_ALGpalma0_TDATA.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, input_AX_ALGpalma0_dest_V_0_load_A.read())) {
        input_AX_ALGpalma0_dest_V_0_payload_A = input_AX_ALGpalma0_TDEST.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, input_AX_ALGpalma0_dest_V_0_load_B.read())) {
        input_AX_ALGpalma0_dest_V_0_payload_B = input_AX_ALGpalma0_TDEST.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, input_AX_ALGpalma0_id_V_0_load_A.read())) {
        input_AX_ALGpalma0_id_V_0_payload_A = input_AX_ALGpalma0_TID.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, input_AX_ALGpalma0_id_V_0_load_B.read())) {
        input_AX_ALGpalma0_id_V_0_payload_B = input_AX_ALGpalma0_TID.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, input_AX_ALGpalma0_keep_V_0_load_A.read())) {
        input_AX_ALGpalma0_keep_V_0_payload_A = input_AX_ALGpalma0_TKEEP.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, input_AX_ALGpalma0_keep_V_0_load_B.read())) {
        input_AX_ALGpalma0_keep_V_0_payload_B = input_AX_ALGpalma0_TKEEP.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, input_AX_ALGpalma0_last_V_0_load_A.read())) {
        input_AX_ALGpalma0_last_V_0_payload_A = input_AX_ALGpalma0_TLAST.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, input_AX_ALGpalma0_last_V_0_load_B.read())) {
        input_AX_ALGpalma0_last_V_0_payload_B = input_AX_ALGpalma0_TLAST.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, input_AX_ALGpalma0_strb_V_0_load_A.read())) {
        input_AX_ALGpalma0_strb_V_0_payload_A = input_AX_ALGpalma0_TSTRB.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, input_AX_ALGpalma0_strb_V_0_load_B.read())) {
        input_AX_ALGpalma0_strb_V_0_payload_B = input_AX_ALGpalma0_TSTRB.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, input_AX_ALGpalma0_user_V_0_load_A.read())) {
        input_AX_ALGpalma0_user_V_0_payload_A = input_AX_ALGpalma0_TUSER.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, input_AX_ALGpalma0_user_V_0_load_B.read())) {
        input_AX_ALGpalma0_user_V_0_payload_B = input_AX_ALGpalma0_TUSER.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, input_AX_ALGpalma1_data_V_0_load_A.read())) {
        input_AX_ALGpalma1_data_V_0_payload_A = input_AX_ALGpalma1_TDATA.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, input_AX_ALGpalma1_data_V_0_load_B.read())) {
        input_AX_ALGpalma1_data_V_0_payload_B = input_AX_ALGpalma1_TDATA.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, input_AX_ALGpalma1_dest_V_0_load_A.read())) {
        input_AX_ALGpalma1_dest_V_0_payload_A = input_AX_ALGpalma1_TDEST.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, input_AX_ALGpalma1_dest_V_0_load_B.read())) {
        input_AX_ALGpalma1_dest_V_0_payload_B = input_AX_ALGpalma1_TDEST.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, input_AX_ALGpalma1_id_V_0_load_A.read())) {
        input_AX_ALGpalma1_id_V_0_payload_A = input_AX_ALGpalma1_TID.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, input_AX_ALGpalma1_id_V_0_load_B.read())) {
        input_AX_ALGpalma1_id_V_0_payload_B = input_AX_ALGpalma1_TID.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, input_AX_ALGpalma1_keep_V_0_load_A.read())) {
        input_AX_ALGpalma1_keep_V_0_payload_A = input_AX_ALGpalma1_TKEEP.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, input_AX_ALGpalma1_keep_V_0_load_B.read())) {
        input_AX_ALGpalma1_keep_V_0_payload_B = input_AX_ALGpalma1_TKEEP.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, input_AX_ALGpalma1_last_V_0_load_A.read())) {
        input_AX_ALGpalma1_last_V_0_payload_A = input_AX_ALGpalma1_TLAST.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, input_AX_ALGpalma1_last_V_0_load_B.read())) {
        input_AX_ALGpalma1_last_V_0_payload_B = input_AX_ALGpalma1_TLAST.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, input_AX_ALGpalma1_strb_V_0_load_A.read())) {
        input_AX_ALGpalma1_strb_V_0_payload_A = input_AX_ALGpalma1_TSTRB.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, input_AX_ALGpalma1_strb_V_0_load_B.read())) {
        input_AX_ALGpalma1_strb_V_0_payload_B = input_AX_ALGpalma1_TSTRB.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, input_AX_ALGpalma1_user_V_0_load_A.read())) {
        input_AX_ALGpalma1_user_V_0_payload_A = input_AX_ALGpalma1_TUSER.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, input_AX_ALGpalma1_user_V_0_load_B.read())) {
        input_AX_ALGpalma1_user_V_0_payload_B = input_AX_ALGpalma1_TUSER.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, output_AX_ALG_data_V_1_load_A.read())) {
        output_AX_ALG_data_V_1_payload_A = grp_write_data_fu_96_output_AX_ALG_TDATA.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, output_AX_ALG_data_V_1_load_B.read())) {
        output_AX_ALG_data_V_1_payload_B = grp_write_data_fu_96_output_AX_ALG_TDATA.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, output_AX_ALG_dest_V_1_load_A.read())) {
        output_AX_ALG_dest_V_1_payload_A = grp_write_data_fu_96_output_AX_ALG_TDEST.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, output_AX_ALG_dest_V_1_load_B.read())) {
        output_AX_ALG_dest_V_1_payload_B = grp_write_data_fu_96_output_AX_ALG_TDEST.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, output_AX_ALG_id_V_1_load_A.read())) {
        output_AX_ALG_id_V_1_payload_A = grp_write_data_fu_96_output_AX_ALG_TID.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, output_AX_ALG_id_V_1_load_B.read())) {
        output_AX_ALG_id_V_1_payload_B = grp_write_data_fu_96_output_AX_ALG_TID.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, output_AX_ALG_keep_V_1_load_A.read())) {
        output_AX_ALG_keep_V_1_payload_A = grp_write_data_fu_96_output_AX_ALG_TKEEP.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, output_AX_ALG_keep_V_1_load_B.read())) {
        output_AX_ALG_keep_V_1_payload_B = grp_write_data_fu_96_output_AX_ALG_TKEEP.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, output_AX_ALG_last_V_1_load_A.read())) {
        output_AX_ALG_last_V_1_payload_A = grp_write_data_fu_96_output_AX_ALG_TLAST.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, output_AX_ALG_last_V_1_load_B.read())) {
        output_AX_ALG_last_V_1_payload_B = grp_write_data_fu_96_output_AX_ALG_TLAST.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, output_AX_ALG_strb_V_1_load_A.read())) {
        output_AX_ALG_strb_V_1_payload_A = grp_write_data_fu_96_output_AX_ALG_TSTRB.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, output_AX_ALG_strb_V_1_load_B.read())) {
        output_AX_ALG_strb_V_1_payload_B = grp_write_data_fu_96_output_AX_ALG_TSTRB.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, output_AX_ALG_user_V_1_load_A.read())) {
        output_AX_ALG_user_V_1_payload_A = grp_write_data_fu_96_output_AX_ALG_TUSER.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, output_AX_ALG_user_V_1_load_B.read())) {
        output_AX_ALG_user_V_1_payload_B = grp_write_data_fu_96_output_AX_ALG_TUSER.read();
    }
}

void opcionA::thread_ap_CS_fsm_state2() {
    ap_CS_fsm_state2 = ap_CS_fsm.read()[1];
}

void opcionA::thread_ap_CS_fsm_state3() {
    ap_CS_fsm_state3 = ap_CS_fsm.read()[2];
}

void opcionA::thread_ap_CS_fsm_state4() {
    ap_CS_fsm_state4 = ap_CS_fsm.read()[3];
}

void opcionA::thread_ap_block_state2() {
    ap_block_state2 = (esl_seteq<1,1,1>(ap_const_logic_0, dedo0_0_V_read_data_fu_118_input_AX_ALGpalma1_TDATA_blk_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, palma0_0_V_read_data_fu_137_input_AX_ALGpalma1_TDATA_blk_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, dedo1_0_V_read_data_fu_156_input_AX_ALGpalma1_TDATA_blk_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, palma1_0_V_read_data_fu_175_input_AX_ALGpalma1_TDATA_blk_n.read()));
}

void opcionA::thread_ap_block_state2_ignore_call42() {
    ap_block_state2_ignore_call42 = (esl_seteq<1,1,1>(ap_const_logic_0, palma0_0_V_read_data_fu_137_input_AX_ALGpalma1_TDATA_blk_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, dedo1_0_V_read_data_fu_156_input_AX_ALGpalma1_TDATA_blk_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, palma1_0_V_read_data_fu_175_input_AX_ALGpalma1_TDATA_blk_n.read()));
}

void opcionA::thread_ap_block_state2_ignore_call43() {
    ap_block_state2_ignore_call43 = (esl_seteq<1,1,1>(ap_const_logic_0, dedo0_0_V_read_data_fu_118_input_AX_ALGpalma1_TDATA_blk_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, dedo1_0_V_read_data_fu_156_input_AX_ALGpalma1_TDATA_blk_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, palma1_0_V_read_data_fu_175_input_AX_ALGpalma1_TDATA_blk_n.read()));
}

void opcionA::thread_ap_block_state2_ignore_call44() {
    ap_block_state2_ignore_call44 = (esl_seteq<1,1,1>(ap_const_logic_0, dedo0_0_V_read_data_fu_118_input_AX_ALGpalma1_TDATA_blk_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, palma0_0_V_read_data_fu_137_input_AX_ALGpalma1_TDATA_blk_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, palma1_0_V_read_data_fu_175_input_AX_ALGpalma1_TDATA_blk_n.read()));
}

void opcionA::thread_ap_block_state2_ignore_call45() {
    ap_block_state2_ignore_call45 = (esl_seteq<1,1,1>(ap_const_logic_0, dedo0_0_V_read_data_fu_118_input_AX_ALGpalma1_TDATA_blk_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, palma0_0_V_read_data_fu_137_input_AX_ALGpalma1_TDATA_blk_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, dedo1_0_V_read_data_fu_156_input_AX_ALGpalma1_TDATA_blk_n.read()));
}

void opcionA::thread_ap_block_state2_ignore_call46() {
    ap_block_state2_ignore_call46 = (esl_seteq<1,1,1>(ap_const_logic_0, dedo0_0_V_read_data_fu_118_input_AX_ALGpalma1_TDATA_blk_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, palma0_0_V_read_data_fu_137_input_AX_ALGpalma1_TDATA_blk_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, dedo1_0_V_read_data_fu_156_input_AX_ALGpalma1_TDATA_blk_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, palma1_0_V_read_data_fu_175_input_AX_ALGpalma1_TDATA_blk_n.read()));
}

void opcionA::thread_ap_block_state4() {
    ap_block_state4 = (esl_seteq<1,1,1>(ap_const_logic_0, output_AX_ALG_data_V_1_ack_in.read()) || esl_seteq<1,1,1>(ap_const_logic_0, output_AX_ALG_keep_V_1_ack_in.read()) || esl_seteq<1,1,1>(ap_const_logic_0, output_AX_ALG_strb_V_1_ack_in.read()) || esl_seteq<1,1,1>(ap_const_logic_0, output_AX_ALG_user_V_1_ack_in.read()) || esl_seteq<1,1,1>(ap_const_logic_0, output_AX_ALG_last_V_1_ack_in.read()) || esl_seteq<1,1,1>(ap_const_logic_0, output_AX_ALG_id_V_1_ack_in.read()) || esl_seteq<1,1,1>(ap_const_logic_0, output_AX_ALG_dest_V_1_ack_in.read()));
}

void opcionA::thread_ap_rst_n_inv() {
    ap_rst_n_inv =  (sc_logic) (~ap_rst_n.read());
}

void opcionA::thread_dedo0_0_V_read_data_fu_118_ap_start() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
         !(esl_seteq<1,1,1>(ap_const_logic_0, palma0_0_V_read_data_fu_137_input_AX_ALGpalma1_TDATA_blk_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, dedo1_0_V_read_data_fu_156_input_AX_ALGpalma1_TDATA_blk_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, palma1_0_V_read_data_fu_175_input_AX_ALGpalma1_TDATA_blk_n.read())))) {
        dedo0_0_V_read_data_fu_118_ap_start = ap_const_logic_1;
    } else {
        dedo0_0_V_read_data_fu_118_ap_start = ap_const_logic_0;
    }
}

void opcionA::thread_dedo0_0_V_read_data_fu_118_input_AX_ALGpalma1_TVALID() {
    dedo0_0_V_read_data_fu_118_input_AX_ALGpalma1_TVALID = input_AX_ALGdedo0_dest_V_0_state.read()[0];
}

void opcionA::thread_dedo1_0_V_read_data_fu_156_ap_start() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
         !(esl_seteq<1,1,1>(ap_const_logic_0, dedo0_0_V_read_data_fu_118_input_AX_ALGpalma1_TDATA_blk_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, palma0_0_V_read_data_fu_137_input_AX_ALGpalma1_TDATA_blk_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, palma1_0_V_read_data_fu_175_input_AX_ALGpalma1_TDATA_blk_n.read())))) {
        dedo1_0_V_read_data_fu_156_ap_start = ap_const_logic_1;
    } else {
        dedo1_0_V_read_data_fu_156_ap_start = ap_const_logic_0;
    }
}

void opcionA::thread_dedo1_0_V_read_data_fu_156_input_AX_ALGpalma1_TVALID() {
    dedo1_0_V_read_data_fu_156_input_AX_ALGpalma1_TVALID = input_AX_ALGdedo1_dest_V_0_state.read()[0];
}

void opcionA::thread_grp_write_data_fu_96_ap_start() {
    grp_write_data_fu_96_ap_start = ap_reg_grp_write_data_fu_96_ap_start.read();
}

void opcionA::thread_grp_write_data_fu_96_output_AX_ALG_TREADY() {
    grp_write_data_fu_96_output_AX_ALG_TREADY = output_AX_ALG_dest_V_1_state.read()[1];
}

void opcionA::thread_input_AX_ALGdedo0_TDATA_blk_n() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        input_AX_ALGdedo0_TDATA_blk_n = dedo0_0_V_read_data_fu_118_input_AX_ALGpalma1_TDATA_blk_n.read();
    } else {
        input_AX_ALGdedo0_TDATA_blk_n = ap_const_logic_1;
    }
}

void opcionA::thread_input_AX_ALGdedo0_TREADY() {
    input_AX_ALGdedo0_TREADY = input_AX_ALGdedo0_dest_V_0_state.read()[1];
}

void opcionA::thread_input_AX_ALGdedo0_data_V_0_ack_in() {
    input_AX_ALGdedo0_data_V_0_ack_in = input_AX_ALGdedo0_data_V_0_state.read()[1];
}

void opcionA::thread_input_AX_ALGdedo0_data_V_0_ack_out() {
    input_AX_ALGdedo0_data_V_0_ack_out = dedo0_0_V_read_data_fu_118_input_AX_ALGpalma1_TREADY.read();
}

void opcionA::thread_input_AX_ALGdedo0_data_V_0_data_out() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, input_AX_ALGdedo0_data_V_0_sel.read())) {
        input_AX_ALGdedo0_data_V_0_data_out = input_AX_ALGdedo0_data_V_0_payload_B.read();
    } else {
        input_AX_ALGdedo0_data_V_0_data_out = input_AX_ALGdedo0_data_V_0_payload_A.read();
    }
}

void opcionA::thread_input_AX_ALGdedo0_data_V_0_load_A() {
    input_AX_ALGdedo0_data_V_0_load_A = (input_AX_ALGdedo0_data_V_0_state_cmp_full.read() & ~input_AX_ALGdedo0_data_V_0_sel_wr.read());
}

void opcionA::thread_input_AX_ALGdedo0_data_V_0_load_B() {
    input_AX_ALGdedo0_data_V_0_load_B = (input_AX_ALGdedo0_data_V_0_sel_wr.read() & input_AX_ALGdedo0_data_V_0_state_cmp_full.read());
}

void opcionA::thread_input_AX_ALGdedo0_data_V_0_sel() {
    input_AX_ALGdedo0_data_V_0_sel = input_AX_ALGdedo0_data_V_0_sel_rd.read();
}

void opcionA::thread_input_AX_ALGdedo0_data_V_0_state_cmp_full() {
    input_AX_ALGdedo0_data_V_0_state_cmp_full =  (sc_logic) ((!input_AX_ALGdedo0_data_V_0_state.read().is_01() || !ap_const_lv2_1.is_01())? sc_lv<1>(): sc_lv<1>(input_AX_ALGdedo0_data_V_0_state.read() != ap_const_lv2_1))[0];
}

void opcionA::thread_input_AX_ALGdedo0_data_V_0_vld_in() {
    input_AX_ALGdedo0_data_V_0_vld_in = input_AX_ALGdedo0_TVALID.read();
}

void opcionA::thread_input_AX_ALGdedo0_data_V_0_vld_out() {
    input_AX_ALGdedo0_data_V_0_vld_out = input_AX_ALGdedo0_data_V_0_state.read()[0];
}

void opcionA::thread_input_AX_ALGdedo0_dest_V_0_ack_in() {
    input_AX_ALGdedo0_dest_V_0_ack_in = input_AX_ALGdedo0_dest_V_0_state.read()[1];
}

void opcionA::thread_input_AX_ALGdedo0_dest_V_0_ack_out() {
    input_AX_ALGdedo0_dest_V_0_ack_out = dedo0_0_V_read_data_fu_118_input_AX_ALGpalma1_TREADY.read();
}

void opcionA::thread_input_AX_ALGdedo0_dest_V_0_data_out() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, input_AX_ALGdedo0_dest_V_0_sel.read())) {
        input_AX_ALGdedo0_dest_V_0_data_out = input_AX_ALGdedo0_dest_V_0_payload_B.read();
    } else {
        input_AX_ALGdedo0_dest_V_0_data_out = input_AX_ALGdedo0_dest_V_0_payload_A.read();
    }
}

void opcionA::thread_input_AX_ALGdedo0_dest_V_0_load_A() {
    input_AX_ALGdedo0_dest_V_0_load_A = (input_AX_ALGdedo0_dest_V_0_state_cmp_full.read() & ~input_AX_ALGdedo0_dest_V_0_sel_wr.read());
}

void opcionA::thread_input_AX_ALGdedo0_dest_V_0_load_B() {
    input_AX_ALGdedo0_dest_V_0_load_B = (input_AX_ALGdedo0_dest_V_0_sel_wr.read() & input_AX_ALGdedo0_dest_V_0_state_cmp_full.read());
}

void opcionA::thread_input_AX_ALGdedo0_dest_V_0_sel() {
    input_AX_ALGdedo0_dest_V_0_sel = input_AX_ALGdedo0_dest_V_0_sel_rd.read();
}

void opcionA::thread_input_AX_ALGdedo0_dest_V_0_state_cmp_full() {
    input_AX_ALGdedo0_dest_V_0_state_cmp_full =  (sc_logic) ((!input_AX_ALGdedo0_dest_V_0_state.read().is_01() || !ap_const_lv2_1.is_01())? sc_lv<1>(): sc_lv<1>(input_AX_ALGdedo0_dest_V_0_state.read() != ap_const_lv2_1))[0];
}

void opcionA::thread_input_AX_ALGdedo0_dest_V_0_vld_in() {
    input_AX_ALGdedo0_dest_V_0_vld_in = input_AX_ALGdedo0_TVALID.read();
}

void opcionA::thread_input_AX_ALGdedo0_dest_V_0_vld_out() {
    input_AX_ALGdedo0_dest_V_0_vld_out = input_AX_ALGdedo0_dest_V_0_state.read()[0];
}

void opcionA::thread_input_AX_ALGdedo0_id_V_0_ack_in() {
    input_AX_ALGdedo0_id_V_0_ack_in = input_AX_ALGdedo0_id_V_0_state.read()[1];
}

void opcionA::thread_input_AX_ALGdedo0_id_V_0_ack_out() {
    input_AX_ALGdedo0_id_V_0_ack_out = dedo0_0_V_read_data_fu_118_input_AX_ALGpalma1_TREADY.read();
}

void opcionA::thread_input_AX_ALGdedo0_id_V_0_data_out() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, input_AX_ALGdedo0_id_V_0_sel.read())) {
        input_AX_ALGdedo0_id_V_0_data_out = input_AX_ALGdedo0_id_V_0_payload_B.read();
    } else {
        input_AX_ALGdedo0_id_V_0_data_out = input_AX_ALGdedo0_id_V_0_payload_A.read();
    }
}

void opcionA::thread_input_AX_ALGdedo0_id_V_0_load_A() {
    input_AX_ALGdedo0_id_V_0_load_A = (input_AX_ALGdedo0_id_V_0_state_cmp_full.read() & ~input_AX_ALGdedo0_id_V_0_sel_wr.read());
}

void opcionA::thread_input_AX_ALGdedo0_id_V_0_load_B() {
    input_AX_ALGdedo0_id_V_0_load_B = (input_AX_ALGdedo0_id_V_0_sel_wr.read() & input_AX_ALGdedo0_id_V_0_state_cmp_full.read());
}

void opcionA::thread_input_AX_ALGdedo0_id_V_0_sel() {
    input_AX_ALGdedo0_id_V_0_sel = input_AX_ALGdedo0_id_V_0_sel_rd.read();
}

void opcionA::thread_input_AX_ALGdedo0_id_V_0_state_cmp_full() {
    input_AX_ALGdedo0_id_V_0_state_cmp_full =  (sc_logic) ((!input_AX_ALGdedo0_id_V_0_state.read().is_01() || !ap_const_lv2_1.is_01())? sc_lv<1>(): sc_lv<1>(input_AX_ALGdedo0_id_V_0_state.read() != ap_const_lv2_1))[0];
}

void opcionA::thread_input_AX_ALGdedo0_id_V_0_vld_in() {
    input_AX_ALGdedo0_id_V_0_vld_in = input_AX_ALGdedo0_TVALID.read();
}

void opcionA::thread_input_AX_ALGdedo0_id_V_0_vld_out() {
    input_AX_ALGdedo0_id_V_0_vld_out = input_AX_ALGdedo0_id_V_0_state.read()[0];
}

void opcionA::thread_input_AX_ALGdedo0_keep_V_0_ack_in() {
    input_AX_ALGdedo0_keep_V_0_ack_in = input_AX_ALGdedo0_keep_V_0_state.read()[1];
}

void opcionA::thread_input_AX_ALGdedo0_keep_V_0_ack_out() {
    input_AX_ALGdedo0_keep_V_0_ack_out = dedo0_0_V_read_data_fu_118_input_AX_ALGpalma1_TREADY.read();
}

void opcionA::thread_input_AX_ALGdedo0_keep_V_0_data_out() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, input_AX_ALGdedo0_keep_V_0_sel.read())) {
        input_AX_ALGdedo0_keep_V_0_data_out = input_AX_ALGdedo0_keep_V_0_payload_B.read();
    } else {
        input_AX_ALGdedo0_keep_V_0_data_out = input_AX_ALGdedo0_keep_V_0_payload_A.read();
    }
}

void opcionA::thread_input_AX_ALGdedo0_keep_V_0_load_A() {
    input_AX_ALGdedo0_keep_V_0_load_A = (input_AX_ALGdedo0_keep_V_0_state_cmp_full.read() & ~input_AX_ALGdedo0_keep_V_0_sel_wr.read());
}

void opcionA::thread_input_AX_ALGdedo0_keep_V_0_load_B() {
    input_AX_ALGdedo0_keep_V_0_load_B = (input_AX_ALGdedo0_keep_V_0_sel_wr.read() & input_AX_ALGdedo0_keep_V_0_state_cmp_full.read());
}

void opcionA::thread_input_AX_ALGdedo0_keep_V_0_sel() {
    input_AX_ALGdedo0_keep_V_0_sel = input_AX_ALGdedo0_keep_V_0_sel_rd.read();
}

void opcionA::thread_input_AX_ALGdedo0_keep_V_0_state_cmp_full() {
    input_AX_ALGdedo0_keep_V_0_state_cmp_full =  (sc_logic) ((!input_AX_ALGdedo0_keep_V_0_state.read().is_01() || !ap_const_lv2_1.is_01())? sc_lv<1>(): sc_lv<1>(input_AX_ALGdedo0_keep_V_0_state.read() != ap_const_lv2_1))[0];
}

void opcionA::thread_input_AX_ALGdedo0_keep_V_0_vld_in() {
    input_AX_ALGdedo0_keep_V_0_vld_in = input_AX_ALGdedo0_TVALID.read();
}

void opcionA::thread_input_AX_ALGdedo0_keep_V_0_vld_out() {
    input_AX_ALGdedo0_keep_V_0_vld_out = input_AX_ALGdedo0_keep_V_0_state.read()[0];
}

void opcionA::thread_input_AX_ALGdedo0_last_V_0_ack_in() {
    input_AX_ALGdedo0_last_V_0_ack_in = input_AX_ALGdedo0_last_V_0_state.read()[1];
}

void opcionA::thread_input_AX_ALGdedo0_last_V_0_ack_out() {
    input_AX_ALGdedo0_last_V_0_ack_out = dedo0_0_V_read_data_fu_118_input_AX_ALGpalma1_TREADY.read();
}

void opcionA::thread_input_AX_ALGdedo0_last_V_0_data_out() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, input_AX_ALGdedo0_last_V_0_sel.read())) {
        input_AX_ALGdedo0_last_V_0_data_out = input_AX_ALGdedo0_last_V_0_payload_B.read();
    } else {
        input_AX_ALGdedo0_last_V_0_data_out = input_AX_ALGdedo0_last_V_0_payload_A.read();
    }
}

void opcionA::thread_input_AX_ALGdedo0_last_V_0_load_A() {
    input_AX_ALGdedo0_last_V_0_load_A = (input_AX_ALGdedo0_last_V_0_state_cmp_full.read() & ~input_AX_ALGdedo0_last_V_0_sel_wr.read());
}

void opcionA::thread_input_AX_ALGdedo0_last_V_0_load_B() {
    input_AX_ALGdedo0_last_V_0_load_B = (input_AX_ALGdedo0_last_V_0_sel_wr.read() & input_AX_ALGdedo0_last_V_0_state_cmp_full.read());
}

void opcionA::thread_input_AX_ALGdedo0_last_V_0_sel() {
    input_AX_ALGdedo0_last_V_0_sel = input_AX_ALGdedo0_last_V_0_sel_rd.read();
}

void opcionA::thread_input_AX_ALGdedo0_last_V_0_state_cmp_full() {
    input_AX_ALGdedo0_last_V_0_state_cmp_full =  (sc_logic) ((!input_AX_ALGdedo0_last_V_0_state.read().is_01() || !ap_const_lv2_1.is_01())? sc_lv<1>(): sc_lv<1>(input_AX_ALGdedo0_last_V_0_state.read() != ap_const_lv2_1))[0];
}

void opcionA::thread_input_AX_ALGdedo0_last_V_0_vld_in() {
    input_AX_ALGdedo0_last_V_0_vld_in = input_AX_ALGdedo0_TVALID.read();
}

void opcionA::thread_input_AX_ALGdedo0_last_V_0_vld_out() {
    input_AX_ALGdedo0_last_V_0_vld_out = input_AX_ALGdedo0_last_V_0_state.read()[0];
}

void opcionA::thread_input_AX_ALGdedo0_strb_V_0_ack_in() {
    input_AX_ALGdedo0_strb_V_0_ack_in = input_AX_ALGdedo0_strb_V_0_state.read()[1];
}

void opcionA::thread_input_AX_ALGdedo0_strb_V_0_ack_out() {
    input_AX_ALGdedo0_strb_V_0_ack_out = dedo0_0_V_read_data_fu_118_input_AX_ALGpalma1_TREADY.read();
}

void opcionA::thread_input_AX_ALGdedo0_strb_V_0_data_out() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, input_AX_ALGdedo0_strb_V_0_sel.read())) {
        input_AX_ALGdedo0_strb_V_0_data_out = input_AX_ALGdedo0_strb_V_0_payload_B.read();
    } else {
        input_AX_ALGdedo0_strb_V_0_data_out = input_AX_ALGdedo0_strb_V_0_payload_A.read();
    }
}

void opcionA::thread_input_AX_ALGdedo0_strb_V_0_load_A() {
    input_AX_ALGdedo0_strb_V_0_load_A = (input_AX_ALGdedo0_strb_V_0_state_cmp_full.read() & ~input_AX_ALGdedo0_strb_V_0_sel_wr.read());
}

void opcionA::thread_input_AX_ALGdedo0_strb_V_0_load_B() {
    input_AX_ALGdedo0_strb_V_0_load_B = (input_AX_ALGdedo0_strb_V_0_sel_wr.read() & input_AX_ALGdedo0_strb_V_0_state_cmp_full.read());
}

void opcionA::thread_input_AX_ALGdedo0_strb_V_0_sel() {
    input_AX_ALGdedo0_strb_V_0_sel = input_AX_ALGdedo0_strb_V_0_sel_rd.read();
}

void opcionA::thread_input_AX_ALGdedo0_strb_V_0_state_cmp_full() {
    input_AX_ALGdedo0_strb_V_0_state_cmp_full =  (sc_logic) ((!input_AX_ALGdedo0_strb_V_0_state.read().is_01() || !ap_const_lv2_1.is_01())? sc_lv<1>(): sc_lv<1>(input_AX_ALGdedo0_strb_V_0_state.read() != ap_const_lv2_1))[0];
}

void opcionA::thread_input_AX_ALGdedo0_strb_V_0_vld_in() {
    input_AX_ALGdedo0_strb_V_0_vld_in = input_AX_ALGdedo0_TVALID.read();
}

void opcionA::thread_input_AX_ALGdedo0_strb_V_0_vld_out() {
    input_AX_ALGdedo0_strb_V_0_vld_out = input_AX_ALGdedo0_strb_V_0_state.read()[0];
}

void opcionA::thread_input_AX_ALGdedo0_user_V_0_ack_in() {
    input_AX_ALGdedo0_user_V_0_ack_in = input_AX_ALGdedo0_user_V_0_state.read()[1];
}

void opcionA::thread_input_AX_ALGdedo0_user_V_0_ack_out() {
    input_AX_ALGdedo0_user_V_0_ack_out = dedo0_0_V_read_data_fu_118_input_AX_ALGpalma1_TREADY.read();
}

void opcionA::thread_input_AX_ALGdedo0_user_V_0_data_out() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, input_AX_ALGdedo0_user_V_0_sel.read())) {
        input_AX_ALGdedo0_user_V_0_data_out = input_AX_ALGdedo0_user_V_0_payload_B.read();
    } else {
        input_AX_ALGdedo0_user_V_0_data_out = input_AX_ALGdedo0_user_V_0_payload_A.read();
    }
}

void opcionA::thread_input_AX_ALGdedo0_user_V_0_load_A() {
    input_AX_ALGdedo0_user_V_0_load_A = (input_AX_ALGdedo0_user_V_0_state_cmp_full.read() & ~input_AX_ALGdedo0_user_V_0_sel_wr.read());
}

void opcionA::thread_input_AX_ALGdedo0_user_V_0_load_B() {
    input_AX_ALGdedo0_user_V_0_load_B = (input_AX_ALGdedo0_user_V_0_sel_wr.read() & input_AX_ALGdedo0_user_V_0_state_cmp_full.read());
}

void opcionA::thread_input_AX_ALGdedo0_user_V_0_sel() {
    input_AX_ALGdedo0_user_V_0_sel = input_AX_ALGdedo0_user_V_0_sel_rd.read();
}

void opcionA::thread_input_AX_ALGdedo0_user_V_0_state_cmp_full() {
    input_AX_ALGdedo0_user_V_0_state_cmp_full =  (sc_logic) ((!input_AX_ALGdedo0_user_V_0_state.read().is_01() || !ap_const_lv2_1.is_01())? sc_lv<1>(): sc_lv<1>(input_AX_ALGdedo0_user_V_0_state.read() != ap_const_lv2_1))[0];
}

void opcionA::thread_input_AX_ALGdedo0_user_V_0_vld_in() {
    input_AX_ALGdedo0_user_V_0_vld_in = input_AX_ALGdedo0_TVALID.read();
}

void opcionA::thread_input_AX_ALGdedo0_user_V_0_vld_out() {
    input_AX_ALGdedo0_user_V_0_vld_out = input_AX_ALGdedo0_user_V_0_state.read()[0];
}

void opcionA::thread_input_AX_ALGdedo1_TDATA_blk_n() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        input_AX_ALGdedo1_TDATA_blk_n = dedo1_0_V_read_data_fu_156_input_AX_ALGpalma1_TDATA_blk_n.read();
    } else {
        input_AX_ALGdedo1_TDATA_blk_n = ap_const_logic_1;
    }
}

void opcionA::thread_input_AX_ALGdedo1_TREADY() {
    input_AX_ALGdedo1_TREADY = input_AX_ALGdedo1_dest_V_0_state.read()[1];
}

void opcionA::thread_input_AX_ALGdedo1_data_V_0_ack_in() {
    input_AX_ALGdedo1_data_V_0_ack_in = input_AX_ALGdedo1_data_V_0_state.read()[1];
}

void opcionA::thread_input_AX_ALGdedo1_data_V_0_ack_out() {
    input_AX_ALGdedo1_data_V_0_ack_out = dedo1_0_V_read_data_fu_156_input_AX_ALGpalma1_TREADY.read();
}

void opcionA::thread_input_AX_ALGdedo1_data_V_0_data_out() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, input_AX_ALGdedo1_data_V_0_sel.read())) {
        input_AX_ALGdedo1_data_V_0_data_out = input_AX_ALGdedo1_data_V_0_payload_B.read();
    } else {
        input_AX_ALGdedo1_data_V_0_data_out = input_AX_ALGdedo1_data_V_0_payload_A.read();
    }
}

void opcionA::thread_input_AX_ALGdedo1_data_V_0_load_A() {
    input_AX_ALGdedo1_data_V_0_load_A = (input_AX_ALGdedo1_data_V_0_state_cmp_full.read() & ~input_AX_ALGdedo1_data_V_0_sel_wr.read());
}

void opcionA::thread_input_AX_ALGdedo1_data_V_0_load_B() {
    input_AX_ALGdedo1_data_V_0_load_B = (input_AX_ALGdedo1_data_V_0_sel_wr.read() & input_AX_ALGdedo1_data_V_0_state_cmp_full.read());
}

void opcionA::thread_input_AX_ALGdedo1_data_V_0_sel() {
    input_AX_ALGdedo1_data_V_0_sel = input_AX_ALGdedo1_data_V_0_sel_rd.read();
}

void opcionA::thread_input_AX_ALGdedo1_data_V_0_state_cmp_full() {
    input_AX_ALGdedo1_data_V_0_state_cmp_full =  (sc_logic) ((!input_AX_ALGdedo1_data_V_0_state.read().is_01() || !ap_const_lv2_1.is_01())? sc_lv<1>(): sc_lv<1>(input_AX_ALGdedo1_data_V_0_state.read() != ap_const_lv2_1))[0];
}

void opcionA::thread_input_AX_ALGdedo1_data_V_0_vld_in() {
    input_AX_ALGdedo1_data_V_0_vld_in = input_AX_ALGdedo1_TVALID.read();
}

void opcionA::thread_input_AX_ALGdedo1_data_V_0_vld_out() {
    input_AX_ALGdedo1_data_V_0_vld_out = input_AX_ALGdedo1_data_V_0_state.read()[0];
}

void opcionA::thread_input_AX_ALGdedo1_dest_V_0_ack_in() {
    input_AX_ALGdedo1_dest_V_0_ack_in = input_AX_ALGdedo1_dest_V_0_state.read()[1];
}

void opcionA::thread_input_AX_ALGdedo1_dest_V_0_ack_out() {
    input_AX_ALGdedo1_dest_V_0_ack_out = dedo1_0_V_read_data_fu_156_input_AX_ALGpalma1_TREADY.read();
}

void opcionA::thread_input_AX_ALGdedo1_dest_V_0_data_out() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, input_AX_ALGdedo1_dest_V_0_sel.read())) {
        input_AX_ALGdedo1_dest_V_0_data_out = input_AX_ALGdedo1_dest_V_0_payload_B.read();
    } else {
        input_AX_ALGdedo1_dest_V_0_data_out = input_AX_ALGdedo1_dest_V_0_payload_A.read();
    }
}

void opcionA::thread_input_AX_ALGdedo1_dest_V_0_load_A() {
    input_AX_ALGdedo1_dest_V_0_load_A = (input_AX_ALGdedo1_dest_V_0_state_cmp_full.read() & ~input_AX_ALGdedo1_dest_V_0_sel_wr.read());
}

void opcionA::thread_input_AX_ALGdedo1_dest_V_0_load_B() {
    input_AX_ALGdedo1_dest_V_0_load_B = (input_AX_ALGdedo1_dest_V_0_sel_wr.read() & input_AX_ALGdedo1_dest_V_0_state_cmp_full.read());
}

void opcionA::thread_input_AX_ALGdedo1_dest_V_0_sel() {
    input_AX_ALGdedo1_dest_V_0_sel = input_AX_ALGdedo1_dest_V_0_sel_rd.read();
}

void opcionA::thread_input_AX_ALGdedo1_dest_V_0_state_cmp_full() {
    input_AX_ALGdedo1_dest_V_0_state_cmp_full =  (sc_logic) ((!input_AX_ALGdedo1_dest_V_0_state.read().is_01() || !ap_const_lv2_1.is_01())? sc_lv<1>(): sc_lv<1>(input_AX_ALGdedo1_dest_V_0_state.read() != ap_const_lv2_1))[0];
}

void opcionA::thread_input_AX_ALGdedo1_dest_V_0_vld_in() {
    input_AX_ALGdedo1_dest_V_0_vld_in = input_AX_ALGdedo1_TVALID.read();
}

void opcionA::thread_input_AX_ALGdedo1_dest_V_0_vld_out() {
    input_AX_ALGdedo1_dest_V_0_vld_out = input_AX_ALGdedo1_dest_V_0_state.read()[0];
}

void opcionA::thread_input_AX_ALGdedo1_id_V_0_ack_in() {
    input_AX_ALGdedo1_id_V_0_ack_in = input_AX_ALGdedo1_id_V_0_state.read()[1];
}

void opcionA::thread_input_AX_ALGdedo1_id_V_0_ack_out() {
    input_AX_ALGdedo1_id_V_0_ack_out = dedo1_0_V_read_data_fu_156_input_AX_ALGpalma1_TREADY.read();
}

void opcionA::thread_input_AX_ALGdedo1_id_V_0_data_out() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, input_AX_ALGdedo1_id_V_0_sel.read())) {
        input_AX_ALGdedo1_id_V_0_data_out = input_AX_ALGdedo1_id_V_0_payload_B.read();
    } else {
        input_AX_ALGdedo1_id_V_0_data_out = input_AX_ALGdedo1_id_V_0_payload_A.read();
    }
}

void opcionA::thread_input_AX_ALGdedo1_id_V_0_load_A() {
    input_AX_ALGdedo1_id_V_0_load_A = (input_AX_ALGdedo1_id_V_0_state_cmp_full.read() & ~input_AX_ALGdedo1_id_V_0_sel_wr.read());
}

void opcionA::thread_input_AX_ALGdedo1_id_V_0_load_B() {
    input_AX_ALGdedo1_id_V_0_load_B = (input_AX_ALGdedo1_id_V_0_sel_wr.read() & input_AX_ALGdedo1_id_V_0_state_cmp_full.read());
}

void opcionA::thread_input_AX_ALGdedo1_id_V_0_sel() {
    input_AX_ALGdedo1_id_V_0_sel = input_AX_ALGdedo1_id_V_0_sel_rd.read();
}

void opcionA::thread_input_AX_ALGdedo1_id_V_0_state_cmp_full() {
    input_AX_ALGdedo1_id_V_0_state_cmp_full =  (sc_logic) ((!input_AX_ALGdedo1_id_V_0_state.read().is_01() || !ap_const_lv2_1.is_01())? sc_lv<1>(): sc_lv<1>(input_AX_ALGdedo1_id_V_0_state.read() != ap_const_lv2_1))[0];
}

void opcionA::thread_input_AX_ALGdedo1_id_V_0_vld_in() {
    input_AX_ALGdedo1_id_V_0_vld_in = input_AX_ALGdedo1_TVALID.read();
}

void opcionA::thread_input_AX_ALGdedo1_id_V_0_vld_out() {
    input_AX_ALGdedo1_id_V_0_vld_out = input_AX_ALGdedo1_id_V_0_state.read()[0];
}

void opcionA::thread_input_AX_ALGdedo1_keep_V_0_ack_in() {
    input_AX_ALGdedo1_keep_V_0_ack_in = input_AX_ALGdedo1_keep_V_0_state.read()[1];
}

void opcionA::thread_input_AX_ALGdedo1_keep_V_0_ack_out() {
    input_AX_ALGdedo1_keep_V_0_ack_out = dedo1_0_V_read_data_fu_156_input_AX_ALGpalma1_TREADY.read();
}

void opcionA::thread_input_AX_ALGdedo1_keep_V_0_data_out() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, input_AX_ALGdedo1_keep_V_0_sel.read())) {
        input_AX_ALGdedo1_keep_V_0_data_out = input_AX_ALGdedo1_keep_V_0_payload_B.read();
    } else {
        input_AX_ALGdedo1_keep_V_0_data_out = input_AX_ALGdedo1_keep_V_0_payload_A.read();
    }
}

void opcionA::thread_input_AX_ALGdedo1_keep_V_0_load_A() {
    input_AX_ALGdedo1_keep_V_0_load_A = (input_AX_ALGdedo1_keep_V_0_state_cmp_full.read() & ~input_AX_ALGdedo1_keep_V_0_sel_wr.read());
}

void opcionA::thread_input_AX_ALGdedo1_keep_V_0_load_B() {
    input_AX_ALGdedo1_keep_V_0_load_B = (input_AX_ALGdedo1_keep_V_0_sel_wr.read() & input_AX_ALGdedo1_keep_V_0_state_cmp_full.read());
}

void opcionA::thread_input_AX_ALGdedo1_keep_V_0_sel() {
    input_AX_ALGdedo1_keep_V_0_sel = input_AX_ALGdedo1_keep_V_0_sel_rd.read();
}

void opcionA::thread_input_AX_ALGdedo1_keep_V_0_state_cmp_full() {
    input_AX_ALGdedo1_keep_V_0_state_cmp_full =  (sc_logic) ((!input_AX_ALGdedo1_keep_V_0_state.read().is_01() || !ap_const_lv2_1.is_01())? sc_lv<1>(): sc_lv<1>(input_AX_ALGdedo1_keep_V_0_state.read() != ap_const_lv2_1))[0];
}

void opcionA::thread_input_AX_ALGdedo1_keep_V_0_vld_in() {
    input_AX_ALGdedo1_keep_V_0_vld_in = input_AX_ALGdedo1_TVALID.read();
}

void opcionA::thread_input_AX_ALGdedo1_keep_V_0_vld_out() {
    input_AX_ALGdedo1_keep_V_0_vld_out = input_AX_ALGdedo1_keep_V_0_state.read()[0];
}

void opcionA::thread_input_AX_ALGdedo1_last_V_0_ack_in() {
    input_AX_ALGdedo1_last_V_0_ack_in = input_AX_ALGdedo1_last_V_0_state.read()[1];
}

void opcionA::thread_input_AX_ALGdedo1_last_V_0_ack_out() {
    input_AX_ALGdedo1_last_V_0_ack_out = dedo1_0_V_read_data_fu_156_input_AX_ALGpalma1_TREADY.read();
}

void opcionA::thread_input_AX_ALGdedo1_last_V_0_data_out() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, input_AX_ALGdedo1_last_V_0_sel.read())) {
        input_AX_ALGdedo1_last_V_0_data_out = input_AX_ALGdedo1_last_V_0_payload_B.read();
    } else {
        input_AX_ALGdedo1_last_V_0_data_out = input_AX_ALGdedo1_last_V_0_payload_A.read();
    }
}

void opcionA::thread_input_AX_ALGdedo1_last_V_0_load_A() {
    input_AX_ALGdedo1_last_V_0_load_A = (input_AX_ALGdedo1_last_V_0_state_cmp_full.read() & ~input_AX_ALGdedo1_last_V_0_sel_wr.read());
}

void opcionA::thread_input_AX_ALGdedo1_last_V_0_load_B() {
    input_AX_ALGdedo1_last_V_0_load_B = (input_AX_ALGdedo1_last_V_0_sel_wr.read() & input_AX_ALGdedo1_last_V_0_state_cmp_full.read());
}

void opcionA::thread_input_AX_ALGdedo1_last_V_0_sel() {
    input_AX_ALGdedo1_last_V_0_sel = input_AX_ALGdedo1_last_V_0_sel_rd.read();
}

void opcionA::thread_input_AX_ALGdedo1_last_V_0_state_cmp_full() {
    input_AX_ALGdedo1_last_V_0_state_cmp_full =  (sc_logic) ((!input_AX_ALGdedo1_last_V_0_state.read().is_01() || !ap_const_lv2_1.is_01())? sc_lv<1>(): sc_lv<1>(input_AX_ALGdedo1_last_V_0_state.read() != ap_const_lv2_1))[0];
}

void opcionA::thread_input_AX_ALGdedo1_last_V_0_vld_in() {
    input_AX_ALGdedo1_last_V_0_vld_in = input_AX_ALGdedo1_TVALID.read();
}

void opcionA::thread_input_AX_ALGdedo1_last_V_0_vld_out() {
    input_AX_ALGdedo1_last_V_0_vld_out = input_AX_ALGdedo1_last_V_0_state.read()[0];
}

void opcionA::thread_input_AX_ALGdedo1_strb_V_0_ack_in() {
    input_AX_ALGdedo1_strb_V_0_ack_in = input_AX_ALGdedo1_strb_V_0_state.read()[1];
}

void opcionA::thread_input_AX_ALGdedo1_strb_V_0_ack_out() {
    input_AX_ALGdedo1_strb_V_0_ack_out = dedo1_0_V_read_data_fu_156_input_AX_ALGpalma1_TREADY.read();
}

void opcionA::thread_input_AX_ALGdedo1_strb_V_0_data_out() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, input_AX_ALGdedo1_strb_V_0_sel.read())) {
        input_AX_ALGdedo1_strb_V_0_data_out = input_AX_ALGdedo1_strb_V_0_payload_B.read();
    } else {
        input_AX_ALGdedo1_strb_V_0_data_out = input_AX_ALGdedo1_strb_V_0_payload_A.read();
    }
}

void opcionA::thread_input_AX_ALGdedo1_strb_V_0_load_A() {
    input_AX_ALGdedo1_strb_V_0_load_A = (input_AX_ALGdedo1_strb_V_0_state_cmp_full.read() & ~input_AX_ALGdedo1_strb_V_0_sel_wr.read());
}

void opcionA::thread_input_AX_ALGdedo1_strb_V_0_load_B() {
    input_AX_ALGdedo1_strb_V_0_load_B = (input_AX_ALGdedo1_strb_V_0_sel_wr.read() & input_AX_ALGdedo1_strb_V_0_state_cmp_full.read());
}

void opcionA::thread_input_AX_ALGdedo1_strb_V_0_sel() {
    input_AX_ALGdedo1_strb_V_0_sel = input_AX_ALGdedo1_strb_V_0_sel_rd.read();
}

void opcionA::thread_input_AX_ALGdedo1_strb_V_0_state_cmp_full() {
    input_AX_ALGdedo1_strb_V_0_state_cmp_full =  (sc_logic) ((!input_AX_ALGdedo1_strb_V_0_state.read().is_01() || !ap_const_lv2_1.is_01())? sc_lv<1>(): sc_lv<1>(input_AX_ALGdedo1_strb_V_0_state.read() != ap_const_lv2_1))[0];
}

void opcionA::thread_input_AX_ALGdedo1_strb_V_0_vld_in() {
    input_AX_ALGdedo1_strb_V_0_vld_in = input_AX_ALGdedo1_TVALID.read();
}

void opcionA::thread_input_AX_ALGdedo1_strb_V_0_vld_out() {
    input_AX_ALGdedo1_strb_V_0_vld_out = input_AX_ALGdedo1_strb_V_0_state.read()[0];
}

void opcionA::thread_input_AX_ALGdedo1_user_V_0_ack_in() {
    input_AX_ALGdedo1_user_V_0_ack_in = input_AX_ALGdedo1_user_V_0_state.read()[1];
}

void opcionA::thread_input_AX_ALGdedo1_user_V_0_ack_out() {
    input_AX_ALGdedo1_user_V_0_ack_out = dedo1_0_V_read_data_fu_156_input_AX_ALGpalma1_TREADY.read();
}

void opcionA::thread_input_AX_ALGdedo1_user_V_0_data_out() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, input_AX_ALGdedo1_user_V_0_sel.read())) {
        input_AX_ALGdedo1_user_V_0_data_out = input_AX_ALGdedo1_user_V_0_payload_B.read();
    } else {
        input_AX_ALGdedo1_user_V_0_data_out = input_AX_ALGdedo1_user_V_0_payload_A.read();
    }
}

void opcionA::thread_input_AX_ALGdedo1_user_V_0_load_A() {
    input_AX_ALGdedo1_user_V_0_load_A = (input_AX_ALGdedo1_user_V_0_state_cmp_full.read() & ~input_AX_ALGdedo1_user_V_0_sel_wr.read());
}

void opcionA::thread_input_AX_ALGdedo1_user_V_0_load_B() {
    input_AX_ALGdedo1_user_V_0_load_B = (input_AX_ALGdedo1_user_V_0_sel_wr.read() & input_AX_ALGdedo1_user_V_0_state_cmp_full.read());
}

void opcionA::thread_input_AX_ALGdedo1_user_V_0_sel() {
    input_AX_ALGdedo1_user_V_0_sel = input_AX_ALGdedo1_user_V_0_sel_rd.read();
}

void opcionA::thread_input_AX_ALGdedo1_user_V_0_state_cmp_full() {
    input_AX_ALGdedo1_user_V_0_state_cmp_full =  (sc_logic) ((!input_AX_ALGdedo1_user_V_0_state.read().is_01() || !ap_const_lv2_1.is_01())? sc_lv<1>(): sc_lv<1>(input_AX_ALGdedo1_user_V_0_state.read() != ap_const_lv2_1))[0];
}

void opcionA::thread_input_AX_ALGdedo1_user_V_0_vld_in() {
    input_AX_ALGdedo1_user_V_0_vld_in = input_AX_ALGdedo1_TVALID.read();
}

void opcionA::thread_input_AX_ALGdedo1_user_V_0_vld_out() {
    input_AX_ALGdedo1_user_V_0_vld_out = input_AX_ALGdedo1_user_V_0_state.read()[0];
}

void opcionA::thread_input_AX_ALGpalma0_TDATA_blk_n() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        input_AX_ALGpalma0_TDATA_blk_n = palma0_0_V_read_data_fu_137_input_AX_ALGpalma1_TDATA_blk_n.read();
    } else {
        input_AX_ALGpalma0_TDATA_blk_n = ap_const_logic_1;
    }
}

void opcionA::thread_input_AX_ALGpalma0_TREADY() {
    input_AX_ALGpalma0_TREADY = input_AX_ALGpalma0_dest_V_0_state.read()[1];
}

void opcionA::thread_input_AX_ALGpalma0_data_V_0_ack_in() {
    input_AX_ALGpalma0_data_V_0_ack_in = input_AX_ALGpalma0_data_V_0_state.read()[1];
}

void opcionA::thread_input_AX_ALGpalma0_data_V_0_ack_out() {
    input_AX_ALGpalma0_data_V_0_ack_out = palma0_0_V_read_data_fu_137_input_AX_ALGpalma1_TREADY.read();
}

void opcionA::thread_input_AX_ALGpalma0_data_V_0_data_out() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, input_AX_ALGpalma0_data_V_0_sel.read())) {
        input_AX_ALGpalma0_data_V_0_data_out = input_AX_ALGpalma0_data_V_0_payload_B.read();
    } else {
        input_AX_ALGpalma0_data_V_0_data_out = input_AX_ALGpalma0_data_V_0_payload_A.read();
    }
}

void opcionA::thread_input_AX_ALGpalma0_data_V_0_load_A() {
    input_AX_ALGpalma0_data_V_0_load_A = (input_AX_ALGpalma0_data_V_0_state_cmp_full.read() & ~input_AX_ALGpalma0_data_V_0_sel_wr.read());
}

void opcionA::thread_input_AX_ALGpalma0_data_V_0_load_B() {
    input_AX_ALGpalma0_data_V_0_load_B = (input_AX_ALGpalma0_data_V_0_sel_wr.read() & input_AX_ALGpalma0_data_V_0_state_cmp_full.read());
}

void opcionA::thread_input_AX_ALGpalma0_data_V_0_sel() {
    input_AX_ALGpalma0_data_V_0_sel = input_AX_ALGpalma0_data_V_0_sel_rd.read();
}

void opcionA::thread_input_AX_ALGpalma0_data_V_0_state_cmp_full() {
    input_AX_ALGpalma0_data_V_0_state_cmp_full =  (sc_logic) ((!input_AX_ALGpalma0_data_V_0_state.read().is_01() || !ap_const_lv2_1.is_01())? sc_lv<1>(): sc_lv<1>(input_AX_ALGpalma0_data_V_0_state.read() != ap_const_lv2_1))[0];
}

void opcionA::thread_input_AX_ALGpalma0_data_V_0_vld_in() {
    input_AX_ALGpalma0_data_V_0_vld_in = input_AX_ALGpalma0_TVALID.read();
}

void opcionA::thread_input_AX_ALGpalma0_data_V_0_vld_out() {
    input_AX_ALGpalma0_data_V_0_vld_out = input_AX_ALGpalma0_data_V_0_state.read()[0];
}

void opcionA::thread_input_AX_ALGpalma0_dest_V_0_ack_in() {
    input_AX_ALGpalma0_dest_V_0_ack_in = input_AX_ALGpalma0_dest_V_0_state.read()[1];
}

void opcionA::thread_input_AX_ALGpalma0_dest_V_0_ack_out() {
    input_AX_ALGpalma0_dest_V_0_ack_out = palma0_0_V_read_data_fu_137_input_AX_ALGpalma1_TREADY.read();
}

void opcionA::thread_input_AX_ALGpalma0_dest_V_0_data_out() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, input_AX_ALGpalma0_dest_V_0_sel.read())) {
        input_AX_ALGpalma0_dest_V_0_data_out = input_AX_ALGpalma0_dest_V_0_payload_B.read();
    } else {
        input_AX_ALGpalma0_dest_V_0_data_out = input_AX_ALGpalma0_dest_V_0_payload_A.read();
    }
}

void opcionA::thread_input_AX_ALGpalma0_dest_V_0_load_A() {
    input_AX_ALGpalma0_dest_V_0_load_A = (input_AX_ALGpalma0_dest_V_0_state_cmp_full.read() & ~input_AX_ALGpalma0_dest_V_0_sel_wr.read());
}

void opcionA::thread_input_AX_ALGpalma0_dest_V_0_load_B() {
    input_AX_ALGpalma0_dest_V_0_load_B = (input_AX_ALGpalma0_dest_V_0_sel_wr.read() & input_AX_ALGpalma0_dest_V_0_state_cmp_full.read());
}

void opcionA::thread_input_AX_ALGpalma0_dest_V_0_sel() {
    input_AX_ALGpalma0_dest_V_0_sel = input_AX_ALGpalma0_dest_V_0_sel_rd.read();
}

void opcionA::thread_input_AX_ALGpalma0_dest_V_0_state_cmp_full() {
    input_AX_ALGpalma0_dest_V_0_state_cmp_full =  (sc_logic) ((!input_AX_ALGpalma0_dest_V_0_state.read().is_01() || !ap_const_lv2_1.is_01())? sc_lv<1>(): sc_lv<1>(input_AX_ALGpalma0_dest_V_0_state.read() != ap_const_lv2_1))[0];
}

void opcionA::thread_input_AX_ALGpalma0_dest_V_0_vld_in() {
    input_AX_ALGpalma0_dest_V_0_vld_in = input_AX_ALGpalma0_TVALID.read();
}

void opcionA::thread_input_AX_ALGpalma0_dest_V_0_vld_out() {
    input_AX_ALGpalma0_dest_V_0_vld_out = input_AX_ALGpalma0_dest_V_0_state.read()[0];
}

void opcionA::thread_input_AX_ALGpalma0_id_V_0_ack_in() {
    input_AX_ALGpalma0_id_V_0_ack_in = input_AX_ALGpalma0_id_V_0_state.read()[1];
}

void opcionA::thread_input_AX_ALGpalma0_id_V_0_ack_out() {
    input_AX_ALGpalma0_id_V_0_ack_out = palma0_0_V_read_data_fu_137_input_AX_ALGpalma1_TREADY.read();
}

void opcionA::thread_input_AX_ALGpalma0_id_V_0_data_out() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, input_AX_ALGpalma0_id_V_0_sel.read())) {
        input_AX_ALGpalma0_id_V_0_data_out = input_AX_ALGpalma0_id_V_0_payload_B.read();
    } else {
        input_AX_ALGpalma0_id_V_0_data_out = input_AX_ALGpalma0_id_V_0_payload_A.read();
    }
}

void opcionA::thread_input_AX_ALGpalma0_id_V_0_load_A() {
    input_AX_ALGpalma0_id_V_0_load_A = (input_AX_ALGpalma0_id_V_0_state_cmp_full.read() & ~input_AX_ALGpalma0_id_V_0_sel_wr.read());
}

void opcionA::thread_input_AX_ALGpalma0_id_V_0_load_B() {
    input_AX_ALGpalma0_id_V_0_load_B = (input_AX_ALGpalma0_id_V_0_sel_wr.read() & input_AX_ALGpalma0_id_V_0_state_cmp_full.read());
}

void opcionA::thread_input_AX_ALGpalma0_id_V_0_sel() {
    input_AX_ALGpalma0_id_V_0_sel = input_AX_ALGpalma0_id_V_0_sel_rd.read();
}

void opcionA::thread_input_AX_ALGpalma0_id_V_0_state_cmp_full() {
    input_AX_ALGpalma0_id_V_0_state_cmp_full =  (sc_logic) ((!input_AX_ALGpalma0_id_V_0_state.read().is_01() || !ap_const_lv2_1.is_01())? sc_lv<1>(): sc_lv<1>(input_AX_ALGpalma0_id_V_0_state.read() != ap_const_lv2_1))[0];
}

void opcionA::thread_input_AX_ALGpalma0_id_V_0_vld_in() {
    input_AX_ALGpalma0_id_V_0_vld_in = input_AX_ALGpalma0_TVALID.read();
}

void opcionA::thread_input_AX_ALGpalma0_id_V_0_vld_out() {
    input_AX_ALGpalma0_id_V_0_vld_out = input_AX_ALGpalma0_id_V_0_state.read()[0];
}

void opcionA::thread_input_AX_ALGpalma0_keep_V_0_ack_in() {
    input_AX_ALGpalma0_keep_V_0_ack_in = input_AX_ALGpalma0_keep_V_0_state.read()[1];
}

void opcionA::thread_input_AX_ALGpalma0_keep_V_0_ack_out() {
    input_AX_ALGpalma0_keep_V_0_ack_out = palma0_0_V_read_data_fu_137_input_AX_ALGpalma1_TREADY.read();
}

void opcionA::thread_input_AX_ALGpalma0_keep_V_0_data_out() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, input_AX_ALGpalma0_keep_V_0_sel.read())) {
        input_AX_ALGpalma0_keep_V_0_data_out = input_AX_ALGpalma0_keep_V_0_payload_B.read();
    } else {
        input_AX_ALGpalma0_keep_V_0_data_out = input_AX_ALGpalma0_keep_V_0_payload_A.read();
    }
}

void opcionA::thread_input_AX_ALGpalma0_keep_V_0_load_A() {
    input_AX_ALGpalma0_keep_V_0_load_A = (input_AX_ALGpalma0_keep_V_0_state_cmp_full.read() & ~input_AX_ALGpalma0_keep_V_0_sel_wr.read());
}

void opcionA::thread_input_AX_ALGpalma0_keep_V_0_load_B() {
    input_AX_ALGpalma0_keep_V_0_load_B = (input_AX_ALGpalma0_keep_V_0_sel_wr.read() & input_AX_ALGpalma0_keep_V_0_state_cmp_full.read());
}

void opcionA::thread_input_AX_ALGpalma0_keep_V_0_sel() {
    input_AX_ALGpalma0_keep_V_0_sel = input_AX_ALGpalma0_keep_V_0_sel_rd.read();
}

void opcionA::thread_input_AX_ALGpalma0_keep_V_0_state_cmp_full() {
    input_AX_ALGpalma0_keep_V_0_state_cmp_full =  (sc_logic) ((!input_AX_ALGpalma0_keep_V_0_state.read().is_01() || !ap_const_lv2_1.is_01())? sc_lv<1>(): sc_lv<1>(input_AX_ALGpalma0_keep_V_0_state.read() != ap_const_lv2_1))[0];
}

void opcionA::thread_input_AX_ALGpalma0_keep_V_0_vld_in() {
    input_AX_ALGpalma0_keep_V_0_vld_in = input_AX_ALGpalma0_TVALID.read();
}

void opcionA::thread_input_AX_ALGpalma0_keep_V_0_vld_out() {
    input_AX_ALGpalma0_keep_V_0_vld_out = input_AX_ALGpalma0_keep_V_0_state.read()[0];
}

void opcionA::thread_input_AX_ALGpalma0_last_V_0_ack_in() {
    input_AX_ALGpalma0_last_V_0_ack_in = input_AX_ALGpalma0_last_V_0_state.read()[1];
}

void opcionA::thread_input_AX_ALGpalma0_last_V_0_ack_out() {
    input_AX_ALGpalma0_last_V_0_ack_out = palma0_0_V_read_data_fu_137_input_AX_ALGpalma1_TREADY.read();
}

void opcionA::thread_input_AX_ALGpalma0_last_V_0_data_out() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, input_AX_ALGpalma0_last_V_0_sel.read())) {
        input_AX_ALGpalma0_last_V_0_data_out = input_AX_ALGpalma0_last_V_0_payload_B.read();
    } else {
        input_AX_ALGpalma0_last_V_0_data_out = input_AX_ALGpalma0_last_V_0_payload_A.read();
    }
}

void opcionA::thread_input_AX_ALGpalma0_last_V_0_load_A() {
    input_AX_ALGpalma0_last_V_0_load_A = (input_AX_ALGpalma0_last_V_0_state_cmp_full.read() & ~input_AX_ALGpalma0_last_V_0_sel_wr.read());
}

void opcionA::thread_input_AX_ALGpalma0_last_V_0_load_B() {
    input_AX_ALGpalma0_last_V_0_load_B = (input_AX_ALGpalma0_last_V_0_sel_wr.read() & input_AX_ALGpalma0_last_V_0_state_cmp_full.read());
}

void opcionA::thread_input_AX_ALGpalma0_last_V_0_sel() {
    input_AX_ALGpalma0_last_V_0_sel = input_AX_ALGpalma0_last_V_0_sel_rd.read();
}

void opcionA::thread_input_AX_ALGpalma0_last_V_0_state_cmp_full() {
    input_AX_ALGpalma0_last_V_0_state_cmp_full =  (sc_logic) ((!input_AX_ALGpalma0_last_V_0_state.read().is_01() || !ap_const_lv2_1.is_01())? sc_lv<1>(): sc_lv<1>(input_AX_ALGpalma0_last_V_0_state.read() != ap_const_lv2_1))[0];
}

void opcionA::thread_input_AX_ALGpalma0_last_V_0_vld_in() {
    input_AX_ALGpalma0_last_V_0_vld_in = input_AX_ALGpalma0_TVALID.read();
}

void opcionA::thread_input_AX_ALGpalma0_last_V_0_vld_out() {
    input_AX_ALGpalma0_last_V_0_vld_out = input_AX_ALGpalma0_last_V_0_state.read()[0];
}

void opcionA::thread_input_AX_ALGpalma0_strb_V_0_ack_in() {
    input_AX_ALGpalma0_strb_V_0_ack_in = input_AX_ALGpalma0_strb_V_0_state.read()[1];
}

void opcionA::thread_input_AX_ALGpalma0_strb_V_0_ack_out() {
    input_AX_ALGpalma0_strb_V_0_ack_out = palma0_0_V_read_data_fu_137_input_AX_ALGpalma1_TREADY.read();
}

void opcionA::thread_input_AX_ALGpalma0_strb_V_0_data_out() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, input_AX_ALGpalma0_strb_V_0_sel.read())) {
        input_AX_ALGpalma0_strb_V_0_data_out = input_AX_ALGpalma0_strb_V_0_payload_B.read();
    } else {
        input_AX_ALGpalma0_strb_V_0_data_out = input_AX_ALGpalma0_strb_V_0_payload_A.read();
    }
}

void opcionA::thread_input_AX_ALGpalma0_strb_V_0_load_A() {
    input_AX_ALGpalma0_strb_V_0_load_A = (input_AX_ALGpalma0_strb_V_0_state_cmp_full.read() & ~input_AX_ALGpalma0_strb_V_0_sel_wr.read());
}

void opcionA::thread_input_AX_ALGpalma0_strb_V_0_load_B() {
    input_AX_ALGpalma0_strb_V_0_load_B = (input_AX_ALGpalma0_strb_V_0_sel_wr.read() & input_AX_ALGpalma0_strb_V_0_state_cmp_full.read());
}

void opcionA::thread_input_AX_ALGpalma0_strb_V_0_sel() {
    input_AX_ALGpalma0_strb_V_0_sel = input_AX_ALGpalma0_strb_V_0_sel_rd.read();
}

void opcionA::thread_input_AX_ALGpalma0_strb_V_0_state_cmp_full() {
    input_AX_ALGpalma0_strb_V_0_state_cmp_full =  (sc_logic) ((!input_AX_ALGpalma0_strb_V_0_state.read().is_01() || !ap_const_lv2_1.is_01())? sc_lv<1>(): sc_lv<1>(input_AX_ALGpalma0_strb_V_0_state.read() != ap_const_lv2_1))[0];
}

void opcionA::thread_input_AX_ALGpalma0_strb_V_0_vld_in() {
    input_AX_ALGpalma0_strb_V_0_vld_in = input_AX_ALGpalma0_TVALID.read();
}

void opcionA::thread_input_AX_ALGpalma0_strb_V_0_vld_out() {
    input_AX_ALGpalma0_strb_V_0_vld_out = input_AX_ALGpalma0_strb_V_0_state.read()[0];
}

void opcionA::thread_input_AX_ALGpalma0_user_V_0_ack_in() {
    input_AX_ALGpalma0_user_V_0_ack_in = input_AX_ALGpalma0_user_V_0_state.read()[1];
}

void opcionA::thread_input_AX_ALGpalma0_user_V_0_ack_out() {
    input_AX_ALGpalma0_user_V_0_ack_out = palma0_0_V_read_data_fu_137_input_AX_ALGpalma1_TREADY.read();
}

void opcionA::thread_input_AX_ALGpalma0_user_V_0_data_out() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, input_AX_ALGpalma0_user_V_0_sel.read())) {
        input_AX_ALGpalma0_user_V_0_data_out = input_AX_ALGpalma0_user_V_0_payload_B.read();
    } else {
        input_AX_ALGpalma0_user_V_0_data_out = input_AX_ALGpalma0_user_V_0_payload_A.read();
    }
}

void opcionA::thread_input_AX_ALGpalma0_user_V_0_load_A() {
    input_AX_ALGpalma0_user_V_0_load_A = (input_AX_ALGpalma0_user_V_0_state_cmp_full.read() & ~input_AX_ALGpalma0_user_V_0_sel_wr.read());
}

void opcionA::thread_input_AX_ALGpalma0_user_V_0_load_B() {
    input_AX_ALGpalma0_user_V_0_load_B = (input_AX_ALGpalma0_user_V_0_sel_wr.read() & input_AX_ALGpalma0_user_V_0_state_cmp_full.read());
}

void opcionA::thread_input_AX_ALGpalma0_user_V_0_sel() {
    input_AX_ALGpalma0_user_V_0_sel = input_AX_ALGpalma0_user_V_0_sel_rd.read();
}

void opcionA::thread_input_AX_ALGpalma0_user_V_0_state_cmp_full() {
    input_AX_ALGpalma0_user_V_0_state_cmp_full =  (sc_logic) ((!input_AX_ALGpalma0_user_V_0_state.read().is_01() || !ap_const_lv2_1.is_01())? sc_lv<1>(): sc_lv<1>(input_AX_ALGpalma0_user_V_0_state.read() != ap_const_lv2_1))[0];
}

void opcionA::thread_input_AX_ALGpalma0_user_V_0_vld_in() {
    input_AX_ALGpalma0_user_V_0_vld_in = input_AX_ALGpalma0_TVALID.read();
}

void opcionA::thread_input_AX_ALGpalma0_user_V_0_vld_out() {
    input_AX_ALGpalma0_user_V_0_vld_out = input_AX_ALGpalma0_user_V_0_state.read()[0];
}

void opcionA::thread_input_AX_ALGpalma1_TDATA_blk_n() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        input_AX_ALGpalma1_TDATA_blk_n = palma1_0_V_read_data_fu_175_input_AX_ALGpalma1_TDATA_blk_n.read();
    } else {
        input_AX_ALGpalma1_TDATA_blk_n = ap_const_logic_1;
    }
}

void opcionA::thread_input_AX_ALGpalma1_TREADY() {
    input_AX_ALGpalma1_TREADY = input_AX_ALGpalma1_dest_V_0_state.read()[1];
}

void opcionA::thread_input_AX_ALGpalma1_data_V_0_ack_in() {
    input_AX_ALGpalma1_data_V_0_ack_in = input_AX_ALGpalma1_data_V_0_state.read()[1];
}

void opcionA::thread_input_AX_ALGpalma1_data_V_0_ack_out() {
    input_AX_ALGpalma1_data_V_0_ack_out = palma1_0_V_read_data_fu_175_input_AX_ALGpalma1_TREADY.read();
}

void opcionA::thread_input_AX_ALGpalma1_data_V_0_data_out() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, input_AX_ALGpalma1_data_V_0_sel.read())) {
        input_AX_ALGpalma1_data_V_0_data_out = input_AX_ALGpalma1_data_V_0_payload_B.read();
    } else {
        input_AX_ALGpalma1_data_V_0_data_out = input_AX_ALGpalma1_data_V_0_payload_A.read();
    }
}

void opcionA::thread_input_AX_ALGpalma1_data_V_0_load_A() {
    input_AX_ALGpalma1_data_V_0_load_A = (input_AX_ALGpalma1_data_V_0_state_cmp_full.read() & ~input_AX_ALGpalma1_data_V_0_sel_wr.read());
}

void opcionA::thread_input_AX_ALGpalma1_data_V_0_load_B() {
    input_AX_ALGpalma1_data_V_0_load_B = (input_AX_ALGpalma1_data_V_0_sel_wr.read() & input_AX_ALGpalma1_data_V_0_state_cmp_full.read());
}

void opcionA::thread_input_AX_ALGpalma1_data_V_0_sel() {
    input_AX_ALGpalma1_data_V_0_sel = input_AX_ALGpalma1_data_V_0_sel_rd.read();
}

void opcionA::thread_input_AX_ALGpalma1_data_V_0_state_cmp_full() {
    input_AX_ALGpalma1_data_V_0_state_cmp_full =  (sc_logic) ((!input_AX_ALGpalma1_data_V_0_state.read().is_01() || !ap_const_lv2_1.is_01())? sc_lv<1>(): sc_lv<1>(input_AX_ALGpalma1_data_V_0_state.read() != ap_const_lv2_1))[0];
}

void opcionA::thread_input_AX_ALGpalma1_data_V_0_vld_in() {
    input_AX_ALGpalma1_data_V_0_vld_in = input_AX_ALGpalma1_TVALID.read();
}

void opcionA::thread_input_AX_ALGpalma1_data_V_0_vld_out() {
    input_AX_ALGpalma1_data_V_0_vld_out = input_AX_ALGpalma1_data_V_0_state.read()[0];
}

void opcionA::thread_input_AX_ALGpalma1_dest_V_0_ack_in() {
    input_AX_ALGpalma1_dest_V_0_ack_in = input_AX_ALGpalma1_dest_V_0_state.read()[1];
}

void opcionA::thread_input_AX_ALGpalma1_dest_V_0_ack_out() {
    input_AX_ALGpalma1_dest_V_0_ack_out = palma1_0_V_read_data_fu_175_input_AX_ALGpalma1_TREADY.read();
}

void opcionA::thread_input_AX_ALGpalma1_dest_V_0_data_out() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, input_AX_ALGpalma1_dest_V_0_sel.read())) {
        input_AX_ALGpalma1_dest_V_0_data_out = input_AX_ALGpalma1_dest_V_0_payload_B.read();
    } else {
        input_AX_ALGpalma1_dest_V_0_data_out = input_AX_ALGpalma1_dest_V_0_payload_A.read();
    }
}

void opcionA::thread_input_AX_ALGpalma1_dest_V_0_load_A() {
    input_AX_ALGpalma1_dest_V_0_load_A = (input_AX_ALGpalma1_dest_V_0_state_cmp_full.read() & ~input_AX_ALGpalma1_dest_V_0_sel_wr.read());
}

void opcionA::thread_input_AX_ALGpalma1_dest_V_0_load_B() {
    input_AX_ALGpalma1_dest_V_0_load_B = (input_AX_ALGpalma1_dest_V_0_sel_wr.read() & input_AX_ALGpalma1_dest_V_0_state_cmp_full.read());
}

void opcionA::thread_input_AX_ALGpalma1_dest_V_0_sel() {
    input_AX_ALGpalma1_dest_V_0_sel = input_AX_ALGpalma1_dest_V_0_sel_rd.read();
}

void opcionA::thread_input_AX_ALGpalma1_dest_V_0_state_cmp_full() {
    input_AX_ALGpalma1_dest_V_0_state_cmp_full =  (sc_logic) ((!input_AX_ALGpalma1_dest_V_0_state.read().is_01() || !ap_const_lv2_1.is_01())? sc_lv<1>(): sc_lv<1>(input_AX_ALGpalma1_dest_V_0_state.read() != ap_const_lv2_1))[0];
}

void opcionA::thread_input_AX_ALGpalma1_dest_V_0_vld_in() {
    input_AX_ALGpalma1_dest_V_0_vld_in = input_AX_ALGpalma1_TVALID.read();
}

void opcionA::thread_input_AX_ALGpalma1_dest_V_0_vld_out() {
    input_AX_ALGpalma1_dest_V_0_vld_out = input_AX_ALGpalma1_dest_V_0_state.read()[0];
}

void opcionA::thread_input_AX_ALGpalma1_id_V_0_ack_in() {
    input_AX_ALGpalma1_id_V_0_ack_in = input_AX_ALGpalma1_id_V_0_state.read()[1];
}

void opcionA::thread_input_AX_ALGpalma1_id_V_0_ack_out() {
    input_AX_ALGpalma1_id_V_0_ack_out = palma1_0_V_read_data_fu_175_input_AX_ALGpalma1_TREADY.read();
}

void opcionA::thread_input_AX_ALGpalma1_id_V_0_data_out() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, input_AX_ALGpalma1_id_V_0_sel.read())) {
        input_AX_ALGpalma1_id_V_0_data_out = input_AX_ALGpalma1_id_V_0_payload_B.read();
    } else {
        input_AX_ALGpalma1_id_V_0_data_out = input_AX_ALGpalma1_id_V_0_payload_A.read();
    }
}

void opcionA::thread_input_AX_ALGpalma1_id_V_0_load_A() {
    input_AX_ALGpalma1_id_V_0_load_A = (input_AX_ALGpalma1_id_V_0_state_cmp_full.read() & ~input_AX_ALGpalma1_id_V_0_sel_wr.read());
}

void opcionA::thread_input_AX_ALGpalma1_id_V_0_load_B() {
    input_AX_ALGpalma1_id_V_0_load_B = (input_AX_ALGpalma1_id_V_0_sel_wr.read() & input_AX_ALGpalma1_id_V_0_state_cmp_full.read());
}

void opcionA::thread_input_AX_ALGpalma1_id_V_0_sel() {
    input_AX_ALGpalma1_id_V_0_sel = input_AX_ALGpalma1_id_V_0_sel_rd.read();
}

void opcionA::thread_input_AX_ALGpalma1_id_V_0_state_cmp_full() {
    input_AX_ALGpalma1_id_V_0_state_cmp_full =  (sc_logic) ((!input_AX_ALGpalma1_id_V_0_state.read().is_01() || !ap_const_lv2_1.is_01())? sc_lv<1>(): sc_lv<1>(input_AX_ALGpalma1_id_V_0_state.read() != ap_const_lv2_1))[0];
}

void opcionA::thread_input_AX_ALGpalma1_id_V_0_vld_in() {
    input_AX_ALGpalma1_id_V_0_vld_in = input_AX_ALGpalma1_TVALID.read();
}

void opcionA::thread_input_AX_ALGpalma1_id_V_0_vld_out() {
    input_AX_ALGpalma1_id_V_0_vld_out = input_AX_ALGpalma1_id_V_0_state.read()[0];
}

void opcionA::thread_input_AX_ALGpalma1_keep_V_0_ack_in() {
    input_AX_ALGpalma1_keep_V_0_ack_in = input_AX_ALGpalma1_keep_V_0_state.read()[1];
}

void opcionA::thread_input_AX_ALGpalma1_keep_V_0_ack_out() {
    input_AX_ALGpalma1_keep_V_0_ack_out = palma1_0_V_read_data_fu_175_input_AX_ALGpalma1_TREADY.read();
}

void opcionA::thread_input_AX_ALGpalma1_keep_V_0_data_out() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, input_AX_ALGpalma1_keep_V_0_sel.read())) {
        input_AX_ALGpalma1_keep_V_0_data_out = input_AX_ALGpalma1_keep_V_0_payload_B.read();
    } else {
        input_AX_ALGpalma1_keep_V_0_data_out = input_AX_ALGpalma1_keep_V_0_payload_A.read();
    }
}

void opcionA::thread_input_AX_ALGpalma1_keep_V_0_load_A() {
    input_AX_ALGpalma1_keep_V_0_load_A = (input_AX_ALGpalma1_keep_V_0_state_cmp_full.read() & ~input_AX_ALGpalma1_keep_V_0_sel_wr.read());
}

void opcionA::thread_input_AX_ALGpalma1_keep_V_0_load_B() {
    input_AX_ALGpalma1_keep_V_0_load_B = (input_AX_ALGpalma1_keep_V_0_sel_wr.read() & input_AX_ALGpalma1_keep_V_0_state_cmp_full.read());
}

void opcionA::thread_input_AX_ALGpalma1_keep_V_0_sel() {
    input_AX_ALGpalma1_keep_V_0_sel = input_AX_ALGpalma1_keep_V_0_sel_rd.read();
}

void opcionA::thread_input_AX_ALGpalma1_keep_V_0_state_cmp_full() {
    input_AX_ALGpalma1_keep_V_0_state_cmp_full =  (sc_logic) ((!input_AX_ALGpalma1_keep_V_0_state.read().is_01() || !ap_const_lv2_1.is_01())? sc_lv<1>(): sc_lv<1>(input_AX_ALGpalma1_keep_V_0_state.read() != ap_const_lv2_1))[0];
}

void opcionA::thread_input_AX_ALGpalma1_keep_V_0_vld_in() {
    input_AX_ALGpalma1_keep_V_0_vld_in = input_AX_ALGpalma1_TVALID.read();
}

void opcionA::thread_input_AX_ALGpalma1_keep_V_0_vld_out() {
    input_AX_ALGpalma1_keep_V_0_vld_out = input_AX_ALGpalma1_keep_V_0_state.read()[0];
}

void opcionA::thread_input_AX_ALGpalma1_last_V_0_ack_in() {
    input_AX_ALGpalma1_last_V_0_ack_in = input_AX_ALGpalma1_last_V_0_state.read()[1];
}

void opcionA::thread_input_AX_ALGpalma1_last_V_0_ack_out() {
    input_AX_ALGpalma1_last_V_0_ack_out = palma1_0_V_read_data_fu_175_input_AX_ALGpalma1_TREADY.read();
}

void opcionA::thread_input_AX_ALGpalma1_last_V_0_data_out() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, input_AX_ALGpalma1_last_V_0_sel.read())) {
        input_AX_ALGpalma1_last_V_0_data_out = input_AX_ALGpalma1_last_V_0_payload_B.read();
    } else {
        input_AX_ALGpalma1_last_V_0_data_out = input_AX_ALGpalma1_last_V_0_payload_A.read();
    }
}

void opcionA::thread_input_AX_ALGpalma1_last_V_0_load_A() {
    input_AX_ALGpalma1_last_V_0_load_A = (input_AX_ALGpalma1_last_V_0_state_cmp_full.read() & ~input_AX_ALGpalma1_last_V_0_sel_wr.read());
}

void opcionA::thread_input_AX_ALGpalma1_last_V_0_load_B() {
    input_AX_ALGpalma1_last_V_0_load_B = (input_AX_ALGpalma1_last_V_0_sel_wr.read() & input_AX_ALGpalma1_last_V_0_state_cmp_full.read());
}

void opcionA::thread_input_AX_ALGpalma1_last_V_0_sel() {
    input_AX_ALGpalma1_last_V_0_sel = input_AX_ALGpalma1_last_V_0_sel_rd.read();
}

void opcionA::thread_input_AX_ALGpalma1_last_V_0_state_cmp_full() {
    input_AX_ALGpalma1_last_V_0_state_cmp_full =  (sc_logic) ((!input_AX_ALGpalma1_last_V_0_state.read().is_01() || !ap_const_lv2_1.is_01())? sc_lv<1>(): sc_lv<1>(input_AX_ALGpalma1_last_V_0_state.read() != ap_const_lv2_1))[0];
}

void opcionA::thread_input_AX_ALGpalma1_last_V_0_vld_in() {
    input_AX_ALGpalma1_last_V_0_vld_in = input_AX_ALGpalma1_TVALID.read();
}

void opcionA::thread_input_AX_ALGpalma1_last_V_0_vld_out() {
    input_AX_ALGpalma1_last_V_0_vld_out = input_AX_ALGpalma1_last_V_0_state.read()[0];
}

void opcionA::thread_input_AX_ALGpalma1_strb_V_0_ack_in() {
    input_AX_ALGpalma1_strb_V_0_ack_in = input_AX_ALGpalma1_strb_V_0_state.read()[1];
}

void opcionA::thread_input_AX_ALGpalma1_strb_V_0_ack_out() {
    input_AX_ALGpalma1_strb_V_0_ack_out = palma1_0_V_read_data_fu_175_input_AX_ALGpalma1_TREADY.read();
}

void opcionA::thread_input_AX_ALGpalma1_strb_V_0_data_out() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, input_AX_ALGpalma1_strb_V_0_sel.read())) {
        input_AX_ALGpalma1_strb_V_0_data_out = input_AX_ALGpalma1_strb_V_0_payload_B.read();
    } else {
        input_AX_ALGpalma1_strb_V_0_data_out = input_AX_ALGpalma1_strb_V_0_payload_A.read();
    }
}

void opcionA::thread_input_AX_ALGpalma1_strb_V_0_load_A() {
    input_AX_ALGpalma1_strb_V_0_load_A = (input_AX_ALGpalma1_strb_V_0_state_cmp_full.read() & ~input_AX_ALGpalma1_strb_V_0_sel_wr.read());
}

void opcionA::thread_input_AX_ALGpalma1_strb_V_0_load_B() {
    input_AX_ALGpalma1_strb_V_0_load_B = (input_AX_ALGpalma1_strb_V_0_sel_wr.read() & input_AX_ALGpalma1_strb_V_0_state_cmp_full.read());
}

void opcionA::thread_input_AX_ALGpalma1_strb_V_0_sel() {
    input_AX_ALGpalma1_strb_V_0_sel = input_AX_ALGpalma1_strb_V_0_sel_rd.read();
}

void opcionA::thread_input_AX_ALGpalma1_strb_V_0_state_cmp_full() {
    input_AX_ALGpalma1_strb_V_0_state_cmp_full =  (sc_logic) ((!input_AX_ALGpalma1_strb_V_0_state.read().is_01() || !ap_const_lv2_1.is_01())? sc_lv<1>(): sc_lv<1>(input_AX_ALGpalma1_strb_V_0_state.read() != ap_const_lv2_1))[0];
}

void opcionA::thread_input_AX_ALGpalma1_strb_V_0_vld_in() {
    input_AX_ALGpalma1_strb_V_0_vld_in = input_AX_ALGpalma1_TVALID.read();
}

void opcionA::thread_input_AX_ALGpalma1_strb_V_0_vld_out() {
    input_AX_ALGpalma1_strb_V_0_vld_out = input_AX_ALGpalma1_strb_V_0_state.read()[0];
}

void opcionA::thread_input_AX_ALGpalma1_user_V_0_ack_in() {
    input_AX_ALGpalma1_user_V_0_ack_in = input_AX_ALGpalma1_user_V_0_state.read()[1];
}

void opcionA::thread_input_AX_ALGpalma1_user_V_0_ack_out() {
    input_AX_ALGpalma1_user_V_0_ack_out = palma1_0_V_read_data_fu_175_input_AX_ALGpalma1_TREADY.read();
}

void opcionA::thread_input_AX_ALGpalma1_user_V_0_data_out() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, input_AX_ALGpalma1_user_V_0_sel.read())) {
        input_AX_ALGpalma1_user_V_0_data_out = input_AX_ALGpalma1_user_V_0_payload_B.read();
    } else {
        input_AX_ALGpalma1_user_V_0_data_out = input_AX_ALGpalma1_user_V_0_payload_A.read();
    }
}

void opcionA::thread_input_AX_ALGpalma1_user_V_0_load_A() {
    input_AX_ALGpalma1_user_V_0_load_A = (input_AX_ALGpalma1_user_V_0_state_cmp_full.read() & ~input_AX_ALGpalma1_user_V_0_sel_wr.read());
}

void opcionA::thread_input_AX_ALGpalma1_user_V_0_load_B() {
    input_AX_ALGpalma1_user_V_0_load_B = (input_AX_ALGpalma1_user_V_0_sel_wr.read() & input_AX_ALGpalma1_user_V_0_state_cmp_full.read());
}

void opcionA::thread_input_AX_ALGpalma1_user_V_0_sel() {
    input_AX_ALGpalma1_user_V_0_sel = input_AX_ALGpalma1_user_V_0_sel_rd.read();
}

void opcionA::thread_input_AX_ALGpalma1_user_V_0_state_cmp_full() {
    input_AX_ALGpalma1_user_V_0_state_cmp_full =  (sc_logic) ((!input_AX_ALGpalma1_user_V_0_state.read().is_01() || !ap_const_lv2_1.is_01())? sc_lv<1>(): sc_lv<1>(input_AX_ALGpalma1_user_V_0_state.read() != ap_const_lv2_1))[0];
}

void opcionA::thread_input_AX_ALGpalma1_user_V_0_vld_in() {
    input_AX_ALGpalma1_user_V_0_vld_in = input_AX_ALGpalma1_TVALID.read();
}

void opcionA::thread_input_AX_ALGpalma1_user_V_0_vld_out() {
    input_AX_ALGpalma1_user_V_0_vld_out = input_AX_ALGpalma1_user_V_0_state.read()[0];
}

void opcionA::thread_output_AX_ALG_TDATA() {
    output_AX_ALG_TDATA = output_AX_ALG_data_V_1_data_out.read();
}

void opcionA::thread_output_AX_ALG_TDEST() {
    output_AX_ALG_TDEST = output_AX_ALG_dest_V_1_data_out.read();
}

void opcionA::thread_output_AX_ALG_TID() {
    output_AX_ALG_TID = output_AX_ALG_id_V_1_data_out.read();
}

void opcionA::thread_output_AX_ALG_TKEEP() {
    output_AX_ALG_TKEEP = output_AX_ALG_keep_V_1_data_out.read();
}

void opcionA::thread_output_AX_ALG_TLAST() {
    output_AX_ALG_TLAST = output_AX_ALG_last_V_1_data_out.read();
}

void opcionA::thread_output_AX_ALG_TSTRB() {
    output_AX_ALG_TSTRB = output_AX_ALG_strb_V_1_data_out.read();
}

void opcionA::thread_output_AX_ALG_TUSER() {
    output_AX_ALG_TUSER = output_AX_ALG_user_V_1_data_out.read();
}

void opcionA::thread_output_AX_ALG_TVALID() {
    output_AX_ALG_TVALID = output_AX_ALG_dest_V_1_state.read()[0];
}

void opcionA::thread_output_AX_ALG_data_V_1_ack_in() {
    output_AX_ALG_data_V_1_ack_in = output_AX_ALG_data_V_1_state.read()[1];
}

void opcionA::thread_output_AX_ALG_data_V_1_ack_out() {
    output_AX_ALG_data_V_1_ack_out = output_AX_ALG_TREADY.read();
}

void opcionA::thread_output_AX_ALG_data_V_1_data_out() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, output_AX_ALG_data_V_1_sel.read())) {
        output_AX_ALG_data_V_1_data_out = output_AX_ALG_data_V_1_payload_B.read();
    } else {
        output_AX_ALG_data_V_1_data_out = output_AX_ALG_data_V_1_payload_A.read();
    }
}

void opcionA::thread_output_AX_ALG_data_V_1_load_A() {
    output_AX_ALG_data_V_1_load_A = (output_AX_ALG_data_V_1_state_cmp_full.read() & ~output_AX_ALG_data_V_1_sel_wr.read());
}

void opcionA::thread_output_AX_ALG_data_V_1_load_B() {
    output_AX_ALG_data_V_1_load_B = (output_AX_ALG_data_V_1_sel_wr.read() & output_AX_ALG_data_V_1_state_cmp_full.read());
}

void opcionA::thread_output_AX_ALG_data_V_1_sel() {
    output_AX_ALG_data_V_1_sel = output_AX_ALG_data_V_1_sel_rd.read();
}

void opcionA::thread_output_AX_ALG_data_V_1_state_cmp_full() {
    output_AX_ALG_data_V_1_state_cmp_full =  (sc_logic) ((!output_AX_ALG_data_V_1_state.read().is_01() || !ap_const_lv2_1.is_01())? sc_lv<1>(): sc_lv<1>(output_AX_ALG_data_V_1_state.read() != ap_const_lv2_1))[0];
}

void opcionA::thread_output_AX_ALG_data_V_1_vld_in() {
    output_AX_ALG_data_V_1_vld_in = grp_write_data_fu_96_output_AX_ALG_TVALID.read();
}

void opcionA::thread_output_AX_ALG_data_V_1_vld_out() {
    output_AX_ALG_data_V_1_vld_out = output_AX_ALG_data_V_1_state.read()[0];
}

void opcionA::thread_output_AX_ALG_dest_V_1_ack_in() {
    output_AX_ALG_dest_V_1_ack_in = output_AX_ALG_dest_V_1_state.read()[1];
}

void opcionA::thread_output_AX_ALG_dest_V_1_ack_out() {
    output_AX_ALG_dest_V_1_ack_out = output_AX_ALG_TREADY.read();
}

void opcionA::thread_output_AX_ALG_dest_V_1_data_out() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, output_AX_ALG_dest_V_1_sel.read())) {
        output_AX_ALG_dest_V_1_data_out = output_AX_ALG_dest_V_1_payload_B.read();
    } else {
        output_AX_ALG_dest_V_1_data_out = output_AX_ALG_dest_V_1_payload_A.read();
    }
}

void opcionA::thread_output_AX_ALG_dest_V_1_load_A() {
    output_AX_ALG_dest_V_1_load_A = (output_AX_ALG_dest_V_1_state_cmp_full.read() & ~output_AX_ALG_dest_V_1_sel_wr.read());
}

void opcionA::thread_output_AX_ALG_dest_V_1_load_B() {
    output_AX_ALG_dest_V_1_load_B = (output_AX_ALG_dest_V_1_sel_wr.read() & output_AX_ALG_dest_V_1_state_cmp_full.read());
}

void opcionA::thread_output_AX_ALG_dest_V_1_sel() {
    output_AX_ALG_dest_V_1_sel = output_AX_ALG_dest_V_1_sel_rd.read();
}

void opcionA::thread_output_AX_ALG_dest_V_1_state_cmp_full() {
    output_AX_ALG_dest_V_1_state_cmp_full =  (sc_logic) ((!output_AX_ALG_dest_V_1_state.read().is_01() || !ap_const_lv2_1.is_01())? sc_lv<1>(): sc_lv<1>(output_AX_ALG_dest_V_1_state.read() != ap_const_lv2_1))[0];
}

void opcionA::thread_output_AX_ALG_dest_V_1_vld_in() {
    output_AX_ALG_dest_V_1_vld_in = grp_write_data_fu_96_output_AX_ALG_TVALID.read();
}

void opcionA::thread_output_AX_ALG_dest_V_1_vld_out() {
    output_AX_ALG_dest_V_1_vld_out = output_AX_ALG_dest_V_1_state.read()[0];
}

void opcionA::thread_output_AX_ALG_id_V_1_ack_in() {
    output_AX_ALG_id_V_1_ack_in = output_AX_ALG_id_V_1_state.read()[1];
}

void opcionA::thread_output_AX_ALG_id_V_1_ack_out() {
    output_AX_ALG_id_V_1_ack_out = output_AX_ALG_TREADY.read();
}

void opcionA::thread_output_AX_ALG_id_V_1_data_out() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, output_AX_ALG_id_V_1_sel.read())) {
        output_AX_ALG_id_V_1_data_out = output_AX_ALG_id_V_1_payload_B.read();
    } else {
        output_AX_ALG_id_V_1_data_out = output_AX_ALG_id_V_1_payload_A.read();
    }
}

void opcionA::thread_output_AX_ALG_id_V_1_load_A() {
    output_AX_ALG_id_V_1_load_A = (output_AX_ALG_id_V_1_state_cmp_full.read() & ~output_AX_ALG_id_V_1_sel_wr.read());
}

void opcionA::thread_output_AX_ALG_id_V_1_load_B() {
    output_AX_ALG_id_V_1_load_B = (output_AX_ALG_id_V_1_sel_wr.read() & output_AX_ALG_id_V_1_state_cmp_full.read());
}

void opcionA::thread_output_AX_ALG_id_V_1_sel() {
    output_AX_ALG_id_V_1_sel = output_AX_ALG_id_V_1_sel_rd.read();
}

void opcionA::thread_output_AX_ALG_id_V_1_state_cmp_full() {
    output_AX_ALG_id_V_1_state_cmp_full =  (sc_logic) ((!output_AX_ALG_id_V_1_state.read().is_01() || !ap_const_lv2_1.is_01())? sc_lv<1>(): sc_lv<1>(output_AX_ALG_id_V_1_state.read() != ap_const_lv2_1))[0];
}

void opcionA::thread_output_AX_ALG_id_V_1_vld_in() {
    output_AX_ALG_id_V_1_vld_in = grp_write_data_fu_96_output_AX_ALG_TVALID.read();
}

void opcionA::thread_output_AX_ALG_id_V_1_vld_out() {
    output_AX_ALG_id_V_1_vld_out = output_AX_ALG_id_V_1_state.read()[0];
}

void opcionA::thread_output_AX_ALG_keep_V_1_ack_in() {
    output_AX_ALG_keep_V_1_ack_in = output_AX_ALG_keep_V_1_state.read()[1];
}

void opcionA::thread_output_AX_ALG_keep_V_1_ack_out() {
    output_AX_ALG_keep_V_1_ack_out = output_AX_ALG_TREADY.read();
}

void opcionA::thread_output_AX_ALG_keep_V_1_data_out() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, output_AX_ALG_keep_V_1_sel.read())) {
        output_AX_ALG_keep_V_1_data_out = output_AX_ALG_keep_V_1_payload_B.read();
    } else {
        output_AX_ALG_keep_V_1_data_out = output_AX_ALG_keep_V_1_payload_A.read();
    }
}

void opcionA::thread_output_AX_ALG_keep_V_1_load_A() {
    output_AX_ALG_keep_V_1_load_A = (output_AX_ALG_keep_V_1_state_cmp_full.read() & ~output_AX_ALG_keep_V_1_sel_wr.read());
}

void opcionA::thread_output_AX_ALG_keep_V_1_load_B() {
    output_AX_ALG_keep_V_1_load_B = (output_AX_ALG_keep_V_1_sel_wr.read() & output_AX_ALG_keep_V_1_state_cmp_full.read());
}

void opcionA::thread_output_AX_ALG_keep_V_1_sel() {
    output_AX_ALG_keep_V_1_sel = output_AX_ALG_keep_V_1_sel_rd.read();
}

void opcionA::thread_output_AX_ALG_keep_V_1_state_cmp_full() {
    output_AX_ALG_keep_V_1_state_cmp_full =  (sc_logic) ((!output_AX_ALG_keep_V_1_state.read().is_01() || !ap_const_lv2_1.is_01())? sc_lv<1>(): sc_lv<1>(output_AX_ALG_keep_V_1_state.read() != ap_const_lv2_1))[0];
}

void opcionA::thread_output_AX_ALG_keep_V_1_vld_in() {
    output_AX_ALG_keep_V_1_vld_in = grp_write_data_fu_96_output_AX_ALG_TVALID.read();
}

void opcionA::thread_output_AX_ALG_keep_V_1_vld_out() {
    output_AX_ALG_keep_V_1_vld_out = output_AX_ALG_keep_V_1_state.read()[0];
}

void opcionA::thread_output_AX_ALG_last_V_1_ack_in() {
    output_AX_ALG_last_V_1_ack_in = output_AX_ALG_last_V_1_state.read()[1];
}

void opcionA::thread_output_AX_ALG_last_V_1_ack_out() {
    output_AX_ALG_last_V_1_ack_out = output_AX_ALG_TREADY.read();
}

void opcionA::thread_output_AX_ALG_last_V_1_data_out() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, output_AX_ALG_last_V_1_sel.read())) {
        output_AX_ALG_last_V_1_data_out = output_AX_ALG_last_V_1_payload_B.read();
    } else {
        output_AX_ALG_last_V_1_data_out = output_AX_ALG_last_V_1_payload_A.read();
    }
}

void opcionA::thread_output_AX_ALG_last_V_1_load_A() {
    output_AX_ALG_last_V_1_load_A = (output_AX_ALG_last_V_1_state_cmp_full.read() & ~output_AX_ALG_last_V_1_sel_wr.read());
}

void opcionA::thread_output_AX_ALG_last_V_1_load_B() {
    output_AX_ALG_last_V_1_load_B = (output_AX_ALG_last_V_1_sel_wr.read() & output_AX_ALG_last_V_1_state_cmp_full.read());
}

void opcionA::thread_output_AX_ALG_last_V_1_sel() {
    output_AX_ALG_last_V_1_sel = output_AX_ALG_last_V_1_sel_rd.read();
}

void opcionA::thread_output_AX_ALG_last_V_1_state_cmp_full() {
    output_AX_ALG_last_V_1_state_cmp_full =  (sc_logic) ((!output_AX_ALG_last_V_1_state.read().is_01() || !ap_const_lv2_1.is_01())? sc_lv<1>(): sc_lv<1>(output_AX_ALG_last_V_1_state.read() != ap_const_lv2_1))[0];
}

void opcionA::thread_output_AX_ALG_last_V_1_vld_in() {
    output_AX_ALG_last_V_1_vld_in = grp_write_data_fu_96_output_AX_ALG_TVALID.read();
}

void opcionA::thread_output_AX_ALG_last_V_1_vld_out() {
    output_AX_ALG_last_V_1_vld_out = output_AX_ALG_last_V_1_state.read()[0];
}

void opcionA::thread_output_AX_ALG_strb_V_1_ack_in() {
    output_AX_ALG_strb_V_1_ack_in = output_AX_ALG_strb_V_1_state.read()[1];
}

void opcionA::thread_output_AX_ALG_strb_V_1_ack_out() {
    output_AX_ALG_strb_V_1_ack_out = output_AX_ALG_TREADY.read();
}

void opcionA::thread_output_AX_ALG_strb_V_1_data_out() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, output_AX_ALG_strb_V_1_sel.read())) {
        output_AX_ALG_strb_V_1_data_out = output_AX_ALG_strb_V_1_payload_B.read();
    } else {
        output_AX_ALG_strb_V_1_data_out = output_AX_ALG_strb_V_1_payload_A.read();
    }
}

void opcionA::thread_output_AX_ALG_strb_V_1_load_A() {
    output_AX_ALG_strb_V_1_load_A = (output_AX_ALG_strb_V_1_state_cmp_full.read() & ~output_AX_ALG_strb_V_1_sel_wr.read());
}

void opcionA::thread_output_AX_ALG_strb_V_1_load_B() {
    output_AX_ALG_strb_V_1_load_B = (output_AX_ALG_strb_V_1_sel_wr.read() & output_AX_ALG_strb_V_1_state_cmp_full.read());
}

void opcionA::thread_output_AX_ALG_strb_V_1_sel() {
    output_AX_ALG_strb_V_1_sel = output_AX_ALG_strb_V_1_sel_rd.read();
}

void opcionA::thread_output_AX_ALG_strb_V_1_state_cmp_full() {
    output_AX_ALG_strb_V_1_state_cmp_full =  (sc_logic) ((!output_AX_ALG_strb_V_1_state.read().is_01() || !ap_const_lv2_1.is_01())? sc_lv<1>(): sc_lv<1>(output_AX_ALG_strb_V_1_state.read() != ap_const_lv2_1))[0];
}

void opcionA::thread_output_AX_ALG_strb_V_1_vld_in() {
    output_AX_ALG_strb_V_1_vld_in = grp_write_data_fu_96_output_AX_ALG_TVALID.read();
}

void opcionA::thread_output_AX_ALG_strb_V_1_vld_out() {
    output_AX_ALG_strb_V_1_vld_out = output_AX_ALG_strb_V_1_state.read()[0];
}

void opcionA::thread_output_AX_ALG_user_V_1_ack_in() {
    output_AX_ALG_user_V_1_ack_in = output_AX_ALG_user_V_1_state.read()[1];
}

void opcionA::thread_output_AX_ALG_user_V_1_ack_out() {
    output_AX_ALG_user_V_1_ack_out = output_AX_ALG_TREADY.read();
}

void opcionA::thread_output_AX_ALG_user_V_1_data_out() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, output_AX_ALG_user_V_1_sel.read())) {
        output_AX_ALG_user_V_1_data_out = output_AX_ALG_user_V_1_payload_B.read();
    } else {
        output_AX_ALG_user_V_1_data_out = output_AX_ALG_user_V_1_payload_A.read();
    }
}

void opcionA::thread_output_AX_ALG_user_V_1_load_A() {
    output_AX_ALG_user_V_1_load_A = (output_AX_ALG_user_V_1_state_cmp_full.read() & ~output_AX_ALG_user_V_1_sel_wr.read());
}

void opcionA::thread_output_AX_ALG_user_V_1_load_B() {
    output_AX_ALG_user_V_1_load_B = (output_AX_ALG_user_V_1_sel_wr.read() & output_AX_ALG_user_V_1_state_cmp_full.read());
}

void opcionA::thread_output_AX_ALG_user_V_1_sel() {
    output_AX_ALG_user_V_1_sel = output_AX_ALG_user_V_1_sel_rd.read();
}

void opcionA::thread_output_AX_ALG_user_V_1_state_cmp_full() {
    output_AX_ALG_user_V_1_state_cmp_full =  (sc_logic) ((!output_AX_ALG_user_V_1_state.read().is_01() || !ap_const_lv2_1.is_01())? sc_lv<1>(): sc_lv<1>(output_AX_ALG_user_V_1_state.read() != ap_const_lv2_1))[0];
}

void opcionA::thread_output_AX_ALG_user_V_1_vld_in() {
    output_AX_ALG_user_V_1_vld_in = grp_write_data_fu_96_output_AX_ALG_TVALID.read();
}

void opcionA::thread_output_AX_ALG_user_V_1_vld_out() {
    output_AX_ALG_user_V_1_vld_out = output_AX_ALG_user_V_1_state.read()[0];
}

void opcionA::thread_palma0_0_V_read_data_fu_137_ap_start() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
         !(esl_seteq<1,1,1>(ap_const_logic_0, dedo0_0_V_read_data_fu_118_input_AX_ALGpalma1_TDATA_blk_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, dedo1_0_V_read_data_fu_156_input_AX_ALGpalma1_TDATA_blk_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, palma1_0_V_read_data_fu_175_input_AX_ALGpalma1_TDATA_blk_n.read())))) {
        palma0_0_V_read_data_fu_137_ap_start = ap_const_logic_1;
    } else {
        palma0_0_V_read_data_fu_137_ap_start = ap_const_logic_0;
    }
}

void opcionA::thread_palma0_0_V_read_data_fu_137_input_AX_ALGpalma1_TVALID() {
    palma0_0_V_read_data_fu_137_input_AX_ALGpalma1_TVALID = input_AX_ALGpalma0_dest_V_0_state.read()[0];
}

void opcionA::thread_palma1_0_V_read_data_fu_175_ap_start() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
         !(esl_seteq<1,1,1>(ap_const_logic_0, dedo0_0_V_read_data_fu_118_input_AX_ALGpalma1_TDATA_blk_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, palma0_0_V_read_data_fu_137_input_AX_ALGpalma1_TDATA_blk_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, dedo1_0_V_read_data_fu_156_input_AX_ALGpalma1_TDATA_blk_n.read())))) {
        palma1_0_V_read_data_fu_175_ap_start = ap_const_logic_1;
    } else {
        palma1_0_V_read_data_fu_175_ap_start = ap_const_logic_0;
    }
}

void opcionA::thread_palma1_0_V_read_data_fu_175_input_AX_ALGpalma1_TVALID() {
    palma1_0_V_read_data_fu_175_input_AX_ALGpalma1_TVALID = input_AX_ALGpalma1_dest_V_0_state.read()[0];
}

void opcionA::thread_ap_NS_fsm() {
    switch (ap_CS_fsm.read().to_uint64()) {
        case 1 : 
            ap_NS_fsm = ap_ST_fsm_state2;
            break;
        case 2 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && !(esl_seteq<1,1,1>(ap_const_logic_0, dedo0_0_V_read_data_fu_118_input_AX_ALGpalma1_TDATA_blk_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, palma0_0_V_read_data_fu_137_input_AX_ALGpalma1_TDATA_blk_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, dedo1_0_V_read_data_fu_156_input_AX_ALGpalma1_TDATA_blk_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, palma1_0_V_read_data_fu_175_input_AX_ALGpalma1_TDATA_blk_n.read())))) {
                ap_NS_fsm = ap_ST_fsm_state3;
            } else {
                ap_NS_fsm = ap_ST_fsm_state2;
            }
            break;
        case 4 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && esl_seteq<1,1,1>(grp_write_data_fu_96_ap_done.read(), ap_const_logic_1))) {
                ap_NS_fsm = ap_ST_fsm_state4;
            } else {
                ap_NS_fsm = ap_ST_fsm_state3;
            }
            break;
        case 8 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && !(esl_seteq<1,1,1>(ap_const_logic_0, output_AX_ALG_data_V_1_ack_in.read()) || esl_seteq<1,1,1>(ap_const_logic_0, output_AX_ALG_keep_V_1_ack_in.read()) || esl_seteq<1,1,1>(ap_const_logic_0, output_AX_ALG_strb_V_1_ack_in.read()) || esl_seteq<1,1,1>(ap_const_logic_0, output_AX_ALG_user_V_1_ack_in.read()) || esl_seteq<1,1,1>(ap_const_logic_0, output_AX_ALG_last_V_1_ack_in.read()) || esl_seteq<1,1,1>(ap_const_logic_0, output_AX_ALG_id_V_1_ack_in.read()) || esl_seteq<1,1,1>(ap_const_logic_0, output_AX_ALG_dest_V_1_ack_in.read())))) {
                ap_NS_fsm = ap_ST_fsm_state1;
            } else {
                ap_NS_fsm = ap_ST_fsm_state4;
            }
            break;
        default : 
            ap_NS_fsm = "XXXX";
            break;
    }
}

void opcionA::thread_hdltv_gen() {
    const char* dump_tv = std::getenv("AP_WRITE_TV");
    if (!(dump_tv && string(dump_tv) == "on")) return;

    wait();

    mHdltvinHandle << "[ " << endl;
    mHdltvoutHandle << "[ " << endl;
    int ap_cycleNo = 0;
    while (1) {
        wait();
        const char* mComma = ap_cycleNo == 0 ? " " : ", " ;
        mHdltvinHandle << mComma << "{"  <<  " \"ap_rst_n\" :  \"" << ap_rst_n.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"input_AX_ALGdedo0_TDATA\" :  \"" << input_AX_ALGdedo0_TDATA.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"input_AX_ALGdedo0_TVALID\" :  \"" << input_AX_ALGdedo0_TVALID.read() << "\" ";
        mHdltvoutHandle << mComma << "{"  <<  " \"input_AX_ALGdedo0_TREADY\" :  \"" << input_AX_ALGdedo0_TREADY.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"input_AX_ALGdedo0_TKEEP\" :  \"" << input_AX_ALGdedo0_TKEEP.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"input_AX_ALGdedo0_TSTRB\" :  \"" << input_AX_ALGdedo0_TSTRB.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"input_AX_ALGdedo0_TUSER\" :  \"" << input_AX_ALGdedo0_TUSER.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"input_AX_ALGdedo0_TLAST\" :  \"" << input_AX_ALGdedo0_TLAST.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"input_AX_ALGdedo0_TID\" :  \"" << input_AX_ALGdedo0_TID.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"input_AX_ALGdedo0_TDEST\" :  \"" << input_AX_ALGdedo0_TDEST.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"input_AX_ALGpalma0_TDATA\" :  \"" << input_AX_ALGpalma0_TDATA.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"input_AX_ALGpalma0_TVALID\" :  \"" << input_AX_ALGpalma0_TVALID.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"input_AX_ALGpalma0_TREADY\" :  \"" << input_AX_ALGpalma0_TREADY.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"input_AX_ALGpalma0_TKEEP\" :  \"" << input_AX_ALGpalma0_TKEEP.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"input_AX_ALGpalma0_TSTRB\" :  \"" << input_AX_ALGpalma0_TSTRB.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"input_AX_ALGpalma0_TUSER\" :  \"" << input_AX_ALGpalma0_TUSER.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"input_AX_ALGpalma0_TLAST\" :  \"" << input_AX_ALGpalma0_TLAST.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"input_AX_ALGpalma0_TID\" :  \"" << input_AX_ALGpalma0_TID.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"input_AX_ALGpalma0_TDEST\" :  \"" << input_AX_ALGpalma0_TDEST.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"input_AX_ALGdedo1_TDATA\" :  \"" << input_AX_ALGdedo1_TDATA.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"input_AX_ALGdedo1_TVALID\" :  \"" << input_AX_ALGdedo1_TVALID.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"input_AX_ALGdedo1_TREADY\" :  \"" << input_AX_ALGdedo1_TREADY.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"input_AX_ALGdedo1_TKEEP\" :  \"" << input_AX_ALGdedo1_TKEEP.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"input_AX_ALGdedo1_TSTRB\" :  \"" << input_AX_ALGdedo1_TSTRB.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"input_AX_ALGdedo1_TUSER\" :  \"" << input_AX_ALGdedo1_TUSER.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"input_AX_ALGdedo1_TLAST\" :  \"" << input_AX_ALGdedo1_TLAST.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"input_AX_ALGdedo1_TID\" :  \"" << input_AX_ALGdedo1_TID.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"input_AX_ALGdedo1_TDEST\" :  \"" << input_AX_ALGdedo1_TDEST.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"input_AX_ALGpalma1_TDATA\" :  \"" << input_AX_ALGpalma1_TDATA.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"input_AX_ALGpalma1_TVALID\" :  \"" << input_AX_ALGpalma1_TVALID.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"input_AX_ALGpalma1_TREADY\" :  \"" << input_AX_ALGpalma1_TREADY.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"input_AX_ALGpalma1_TKEEP\" :  \"" << input_AX_ALGpalma1_TKEEP.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"input_AX_ALGpalma1_TSTRB\" :  \"" << input_AX_ALGpalma1_TSTRB.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"input_AX_ALGpalma1_TUSER\" :  \"" << input_AX_ALGpalma1_TUSER.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"input_AX_ALGpalma1_TLAST\" :  \"" << input_AX_ALGpalma1_TLAST.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"input_AX_ALGpalma1_TID\" :  \"" << input_AX_ALGpalma1_TID.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"input_AX_ALGpalma1_TDEST\" :  \"" << input_AX_ALGpalma1_TDEST.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"output_AX_ALG_TDATA\" :  \"" << output_AX_ALG_TDATA.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"output_AX_ALG_TVALID\" :  \"" << output_AX_ALG_TVALID.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"output_AX_ALG_TREADY\" :  \"" << output_AX_ALG_TREADY.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"output_AX_ALG_TKEEP\" :  \"" << output_AX_ALG_TKEEP.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"output_AX_ALG_TSTRB\" :  \"" << output_AX_ALG_TSTRB.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"output_AX_ALG_TUSER\" :  \"" << output_AX_ALG_TUSER.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"output_AX_ALG_TLAST\" :  \"" << output_AX_ALG_TLAST.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"output_AX_ALG_TID\" :  \"" << output_AX_ALG_TID.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"output_AX_ALG_TDEST\" :  \"" << output_AX_ALG_TDEST.read() << "\" ";
        mHdltvinHandle << "}" << std::endl;
        mHdltvoutHandle << "}" << std::endl;
        ap_cycleNo++;
    }
}

}

