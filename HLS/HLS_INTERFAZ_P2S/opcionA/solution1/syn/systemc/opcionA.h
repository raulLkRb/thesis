// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2017.1
// Copyright (C) 1986-2017 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _opcionA_HH_
#define _opcionA_HH_

#include "systemc.h"
#include "AESL_pkg.h"

#include "write_data.h"
#include "read_data.h"

namespace ap_rtl {

struct opcionA : public sc_module {
    // Port declarations 47
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst_n;
    sc_in< sc_lv<32> > input_AX_ALGdedo0_TDATA;
    sc_in< sc_logic > input_AX_ALGdedo0_TVALID;
    sc_out< sc_logic > input_AX_ALGdedo0_TREADY;
    sc_in< sc_lv<4> > input_AX_ALGdedo0_TKEEP;
    sc_in< sc_lv<4> > input_AX_ALGdedo0_TSTRB;
    sc_in< sc_lv<4> > input_AX_ALGdedo0_TUSER;
    sc_in< sc_lv<1> > input_AX_ALGdedo0_TLAST;
    sc_in< sc_lv<5> > input_AX_ALGdedo0_TID;
    sc_in< sc_lv<5> > input_AX_ALGdedo0_TDEST;
    sc_in< sc_lv<32> > input_AX_ALGpalma0_TDATA;
    sc_in< sc_logic > input_AX_ALGpalma0_TVALID;
    sc_out< sc_logic > input_AX_ALGpalma0_TREADY;
    sc_in< sc_lv<4> > input_AX_ALGpalma0_TKEEP;
    sc_in< sc_lv<4> > input_AX_ALGpalma0_TSTRB;
    sc_in< sc_lv<4> > input_AX_ALGpalma0_TUSER;
    sc_in< sc_lv<1> > input_AX_ALGpalma0_TLAST;
    sc_in< sc_lv<5> > input_AX_ALGpalma0_TID;
    sc_in< sc_lv<5> > input_AX_ALGpalma0_TDEST;
    sc_in< sc_lv<32> > input_AX_ALGdedo1_TDATA;
    sc_in< sc_logic > input_AX_ALGdedo1_TVALID;
    sc_out< sc_logic > input_AX_ALGdedo1_TREADY;
    sc_in< sc_lv<4> > input_AX_ALGdedo1_TKEEP;
    sc_in< sc_lv<4> > input_AX_ALGdedo1_TSTRB;
    sc_in< sc_lv<4> > input_AX_ALGdedo1_TUSER;
    sc_in< sc_lv<1> > input_AX_ALGdedo1_TLAST;
    sc_in< sc_lv<5> > input_AX_ALGdedo1_TID;
    sc_in< sc_lv<5> > input_AX_ALGdedo1_TDEST;
    sc_in< sc_lv<32> > input_AX_ALGpalma1_TDATA;
    sc_in< sc_logic > input_AX_ALGpalma1_TVALID;
    sc_out< sc_logic > input_AX_ALGpalma1_TREADY;
    sc_in< sc_lv<4> > input_AX_ALGpalma1_TKEEP;
    sc_in< sc_lv<4> > input_AX_ALGpalma1_TSTRB;
    sc_in< sc_lv<4> > input_AX_ALGpalma1_TUSER;
    sc_in< sc_lv<1> > input_AX_ALGpalma1_TLAST;
    sc_in< sc_lv<5> > input_AX_ALGpalma1_TID;
    sc_in< sc_lv<5> > input_AX_ALGpalma1_TDEST;
    sc_out< sc_lv<32> > output_AX_ALG_TDATA;
    sc_out< sc_logic > output_AX_ALG_TVALID;
    sc_in< sc_logic > output_AX_ALG_TREADY;
    sc_out< sc_lv<4> > output_AX_ALG_TKEEP;
    sc_out< sc_lv<4> > output_AX_ALG_TSTRB;
    sc_out< sc_lv<4> > output_AX_ALG_TUSER;
    sc_out< sc_lv<1> > output_AX_ALG_TLAST;
    sc_out< sc_lv<5> > output_AX_ALG_TID;
    sc_out< sc_lv<5> > output_AX_ALG_TDEST;


    // Module declarations
    opcionA(sc_module_name name);
    SC_HAS_PROCESS(opcionA);

    ~opcionA();

    sc_trace_file* mVcdFile;

    ofstream mHdltvinHandle;
    ofstream mHdltvoutHandle;
    write_data* grp_write_data_fu_96;
    read_data* dedo0_0_V_read_data_fu_118;
    read_data* palma0_0_V_read_data_fu_137;
    read_data* dedo1_0_V_read_data_fu_156;
    read_data* palma1_0_V_read_data_fu_175;
    sc_signal< sc_logic > ap_rst_n_inv;
    sc_signal< sc_lv<32> > input_AX_ALGdedo0_data_V_0_data_out;
    sc_signal< sc_logic > input_AX_ALGdedo0_data_V_0_vld_in;
    sc_signal< sc_logic > input_AX_ALGdedo0_data_V_0_vld_out;
    sc_signal< sc_logic > input_AX_ALGdedo0_data_V_0_ack_in;
    sc_signal< sc_logic > input_AX_ALGdedo0_data_V_0_ack_out;
    sc_signal< sc_lv<32> > input_AX_ALGdedo0_data_V_0_payload_A;
    sc_signal< sc_lv<32> > input_AX_ALGdedo0_data_V_0_payload_B;
    sc_signal< sc_logic > input_AX_ALGdedo0_data_V_0_sel_rd;
    sc_signal< sc_logic > input_AX_ALGdedo0_data_V_0_sel_wr;
    sc_signal< sc_logic > input_AX_ALGdedo0_data_V_0_sel;
    sc_signal< sc_logic > input_AX_ALGdedo0_data_V_0_load_A;
    sc_signal< sc_logic > input_AX_ALGdedo0_data_V_0_load_B;
    sc_signal< sc_lv<2> > input_AX_ALGdedo0_data_V_0_state;
    sc_signal< sc_logic > input_AX_ALGdedo0_data_V_0_state_cmp_full;
    sc_signal< sc_lv<4> > input_AX_ALGdedo0_keep_V_0_data_out;
    sc_signal< sc_logic > input_AX_ALGdedo0_keep_V_0_vld_in;
    sc_signal< sc_logic > input_AX_ALGdedo0_keep_V_0_vld_out;
    sc_signal< sc_logic > input_AX_ALGdedo0_keep_V_0_ack_in;
    sc_signal< sc_logic > input_AX_ALGdedo0_keep_V_0_ack_out;
    sc_signal< sc_lv<4> > input_AX_ALGdedo0_keep_V_0_payload_A;
    sc_signal< sc_lv<4> > input_AX_ALGdedo0_keep_V_0_payload_B;
    sc_signal< sc_logic > input_AX_ALGdedo0_keep_V_0_sel_rd;
    sc_signal< sc_logic > input_AX_ALGdedo0_keep_V_0_sel_wr;
    sc_signal< sc_logic > input_AX_ALGdedo0_keep_V_0_sel;
    sc_signal< sc_logic > input_AX_ALGdedo0_keep_V_0_load_A;
    sc_signal< sc_logic > input_AX_ALGdedo0_keep_V_0_load_B;
    sc_signal< sc_lv<2> > input_AX_ALGdedo0_keep_V_0_state;
    sc_signal< sc_logic > input_AX_ALGdedo0_keep_V_0_state_cmp_full;
    sc_signal< sc_lv<4> > input_AX_ALGdedo0_strb_V_0_data_out;
    sc_signal< sc_logic > input_AX_ALGdedo0_strb_V_0_vld_in;
    sc_signal< sc_logic > input_AX_ALGdedo0_strb_V_0_vld_out;
    sc_signal< sc_logic > input_AX_ALGdedo0_strb_V_0_ack_in;
    sc_signal< sc_logic > input_AX_ALGdedo0_strb_V_0_ack_out;
    sc_signal< sc_lv<4> > input_AX_ALGdedo0_strb_V_0_payload_A;
    sc_signal< sc_lv<4> > input_AX_ALGdedo0_strb_V_0_payload_B;
    sc_signal< sc_logic > input_AX_ALGdedo0_strb_V_0_sel_rd;
    sc_signal< sc_logic > input_AX_ALGdedo0_strb_V_0_sel_wr;
    sc_signal< sc_logic > input_AX_ALGdedo0_strb_V_0_sel;
    sc_signal< sc_logic > input_AX_ALGdedo0_strb_V_0_load_A;
    sc_signal< sc_logic > input_AX_ALGdedo0_strb_V_0_load_B;
    sc_signal< sc_lv<2> > input_AX_ALGdedo0_strb_V_0_state;
    sc_signal< sc_logic > input_AX_ALGdedo0_strb_V_0_state_cmp_full;
    sc_signal< sc_lv<4> > input_AX_ALGdedo0_user_V_0_data_out;
    sc_signal< sc_logic > input_AX_ALGdedo0_user_V_0_vld_in;
    sc_signal< sc_logic > input_AX_ALGdedo0_user_V_0_vld_out;
    sc_signal< sc_logic > input_AX_ALGdedo0_user_V_0_ack_in;
    sc_signal< sc_logic > input_AX_ALGdedo0_user_V_0_ack_out;
    sc_signal< sc_lv<4> > input_AX_ALGdedo0_user_V_0_payload_A;
    sc_signal< sc_lv<4> > input_AX_ALGdedo0_user_V_0_payload_B;
    sc_signal< sc_logic > input_AX_ALGdedo0_user_V_0_sel_rd;
    sc_signal< sc_logic > input_AX_ALGdedo0_user_V_0_sel_wr;
    sc_signal< sc_logic > input_AX_ALGdedo0_user_V_0_sel;
    sc_signal< sc_logic > input_AX_ALGdedo0_user_V_0_load_A;
    sc_signal< sc_logic > input_AX_ALGdedo0_user_V_0_load_B;
    sc_signal< sc_lv<2> > input_AX_ALGdedo0_user_V_0_state;
    sc_signal< sc_logic > input_AX_ALGdedo0_user_V_0_state_cmp_full;
    sc_signal< sc_lv<1> > input_AX_ALGdedo0_last_V_0_data_out;
    sc_signal< sc_logic > input_AX_ALGdedo0_last_V_0_vld_in;
    sc_signal< sc_logic > input_AX_ALGdedo0_last_V_0_vld_out;
    sc_signal< sc_logic > input_AX_ALGdedo0_last_V_0_ack_in;
    sc_signal< sc_logic > input_AX_ALGdedo0_last_V_0_ack_out;
    sc_signal< sc_lv<1> > input_AX_ALGdedo0_last_V_0_payload_A;
    sc_signal< sc_lv<1> > input_AX_ALGdedo0_last_V_0_payload_B;
    sc_signal< sc_logic > input_AX_ALGdedo0_last_V_0_sel_rd;
    sc_signal< sc_logic > input_AX_ALGdedo0_last_V_0_sel_wr;
    sc_signal< sc_logic > input_AX_ALGdedo0_last_V_0_sel;
    sc_signal< sc_logic > input_AX_ALGdedo0_last_V_0_load_A;
    sc_signal< sc_logic > input_AX_ALGdedo0_last_V_0_load_B;
    sc_signal< sc_lv<2> > input_AX_ALGdedo0_last_V_0_state;
    sc_signal< sc_logic > input_AX_ALGdedo0_last_V_0_state_cmp_full;
    sc_signal< sc_lv<5> > input_AX_ALGdedo0_id_V_0_data_out;
    sc_signal< sc_logic > input_AX_ALGdedo0_id_V_0_vld_in;
    sc_signal< sc_logic > input_AX_ALGdedo0_id_V_0_vld_out;
    sc_signal< sc_logic > input_AX_ALGdedo0_id_V_0_ack_in;
    sc_signal< sc_logic > input_AX_ALGdedo0_id_V_0_ack_out;
    sc_signal< sc_lv<5> > input_AX_ALGdedo0_id_V_0_payload_A;
    sc_signal< sc_lv<5> > input_AX_ALGdedo0_id_V_0_payload_B;
    sc_signal< sc_logic > input_AX_ALGdedo0_id_V_0_sel_rd;
    sc_signal< sc_logic > input_AX_ALGdedo0_id_V_0_sel_wr;
    sc_signal< sc_logic > input_AX_ALGdedo0_id_V_0_sel;
    sc_signal< sc_logic > input_AX_ALGdedo0_id_V_0_load_A;
    sc_signal< sc_logic > input_AX_ALGdedo0_id_V_0_load_B;
    sc_signal< sc_lv<2> > input_AX_ALGdedo0_id_V_0_state;
    sc_signal< sc_logic > input_AX_ALGdedo0_id_V_0_state_cmp_full;
    sc_signal< sc_lv<5> > input_AX_ALGdedo0_dest_V_0_data_out;
    sc_signal< sc_logic > input_AX_ALGdedo0_dest_V_0_vld_in;
    sc_signal< sc_logic > input_AX_ALGdedo0_dest_V_0_vld_out;
    sc_signal< sc_logic > input_AX_ALGdedo0_dest_V_0_ack_in;
    sc_signal< sc_logic > input_AX_ALGdedo0_dest_V_0_ack_out;
    sc_signal< sc_lv<5> > input_AX_ALGdedo0_dest_V_0_payload_A;
    sc_signal< sc_lv<5> > input_AX_ALGdedo0_dest_V_0_payload_B;
    sc_signal< sc_logic > input_AX_ALGdedo0_dest_V_0_sel_rd;
    sc_signal< sc_logic > input_AX_ALGdedo0_dest_V_0_sel_wr;
    sc_signal< sc_logic > input_AX_ALGdedo0_dest_V_0_sel;
    sc_signal< sc_logic > input_AX_ALGdedo0_dest_V_0_load_A;
    sc_signal< sc_logic > input_AX_ALGdedo0_dest_V_0_load_B;
    sc_signal< sc_lv<2> > input_AX_ALGdedo0_dest_V_0_state;
    sc_signal< sc_logic > input_AX_ALGdedo0_dest_V_0_state_cmp_full;
    sc_signal< sc_lv<32> > input_AX_ALGpalma0_data_V_0_data_out;
    sc_signal< sc_logic > input_AX_ALGpalma0_data_V_0_vld_in;
    sc_signal< sc_logic > input_AX_ALGpalma0_data_V_0_vld_out;
    sc_signal< sc_logic > input_AX_ALGpalma0_data_V_0_ack_in;
    sc_signal< sc_logic > input_AX_ALGpalma0_data_V_0_ack_out;
    sc_signal< sc_lv<32> > input_AX_ALGpalma0_data_V_0_payload_A;
    sc_signal< sc_lv<32> > input_AX_ALGpalma0_data_V_0_payload_B;
    sc_signal< sc_logic > input_AX_ALGpalma0_data_V_0_sel_rd;
    sc_signal< sc_logic > input_AX_ALGpalma0_data_V_0_sel_wr;
    sc_signal< sc_logic > input_AX_ALGpalma0_data_V_0_sel;
    sc_signal< sc_logic > input_AX_ALGpalma0_data_V_0_load_A;
    sc_signal< sc_logic > input_AX_ALGpalma0_data_V_0_load_B;
    sc_signal< sc_lv<2> > input_AX_ALGpalma0_data_V_0_state;
    sc_signal< sc_logic > input_AX_ALGpalma0_data_V_0_state_cmp_full;
    sc_signal< sc_lv<4> > input_AX_ALGpalma0_keep_V_0_data_out;
    sc_signal< sc_logic > input_AX_ALGpalma0_keep_V_0_vld_in;
    sc_signal< sc_logic > input_AX_ALGpalma0_keep_V_0_vld_out;
    sc_signal< sc_logic > input_AX_ALGpalma0_keep_V_0_ack_in;
    sc_signal< sc_logic > input_AX_ALGpalma0_keep_V_0_ack_out;
    sc_signal< sc_lv<4> > input_AX_ALGpalma0_keep_V_0_payload_A;
    sc_signal< sc_lv<4> > input_AX_ALGpalma0_keep_V_0_payload_B;
    sc_signal< sc_logic > input_AX_ALGpalma0_keep_V_0_sel_rd;
    sc_signal< sc_logic > input_AX_ALGpalma0_keep_V_0_sel_wr;
    sc_signal< sc_logic > input_AX_ALGpalma0_keep_V_0_sel;
    sc_signal< sc_logic > input_AX_ALGpalma0_keep_V_0_load_A;
    sc_signal< sc_logic > input_AX_ALGpalma0_keep_V_0_load_B;
    sc_signal< sc_lv<2> > input_AX_ALGpalma0_keep_V_0_state;
    sc_signal< sc_logic > input_AX_ALGpalma0_keep_V_0_state_cmp_full;
    sc_signal< sc_lv<4> > input_AX_ALGpalma0_strb_V_0_data_out;
    sc_signal< sc_logic > input_AX_ALGpalma0_strb_V_0_vld_in;
    sc_signal< sc_logic > input_AX_ALGpalma0_strb_V_0_vld_out;
    sc_signal< sc_logic > input_AX_ALGpalma0_strb_V_0_ack_in;
    sc_signal< sc_logic > input_AX_ALGpalma0_strb_V_0_ack_out;
    sc_signal< sc_lv<4> > input_AX_ALGpalma0_strb_V_0_payload_A;
    sc_signal< sc_lv<4> > input_AX_ALGpalma0_strb_V_0_payload_B;
    sc_signal< sc_logic > input_AX_ALGpalma0_strb_V_0_sel_rd;
    sc_signal< sc_logic > input_AX_ALGpalma0_strb_V_0_sel_wr;
    sc_signal< sc_logic > input_AX_ALGpalma0_strb_V_0_sel;
    sc_signal< sc_logic > input_AX_ALGpalma0_strb_V_0_load_A;
    sc_signal< sc_logic > input_AX_ALGpalma0_strb_V_0_load_B;
    sc_signal< sc_lv<2> > input_AX_ALGpalma0_strb_V_0_state;
    sc_signal< sc_logic > input_AX_ALGpalma0_strb_V_0_state_cmp_full;
    sc_signal< sc_lv<4> > input_AX_ALGpalma0_user_V_0_data_out;
    sc_signal< sc_logic > input_AX_ALGpalma0_user_V_0_vld_in;
    sc_signal< sc_logic > input_AX_ALGpalma0_user_V_0_vld_out;
    sc_signal< sc_logic > input_AX_ALGpalma0_user_V_0_ack_in;
    sc_signal< sc_logic > input_AX_ALGpalma0_user_V_0_ack_out;
    sc_signal< sc_lv<4> > input_AX_ALGpalma0_user_V_0_payload_A;
    sc_signal< sc_lv<4> > input_AX_ALGpalma0_user_V_0_payload_B;
    sc_signal< sc_logic > input_AX_ALGpalma0_user_V_0_sel_rd;
    sc_signal< sc_logic > input_AX_ALGpalma0_user_V_0_sel_wr;
    sc_signal< sc_logic > input_AX_ALGpalma0_user_V_0_sel;
    sc_signal< sc_logic > input_AX_ALGpalma0_user_V_0_load_A;
    sc_signal< sc_logic > input_AX_ALGpalma0_user_V_0_load_B;
    sc_signal< sc_lv<2> > input_AX_ALGpalma0_user_V_0_state;
    sc_signal< sc_logic > input_AX_ALGpalma0_user_V_0_state_cmp_full;
    sc_signal< sc_lv<1> > input_AX_ALGpalma0_last_V_0_data_out;
    sc_signal< sc_logic > input_AX_ALGpalma0_last_V_0_vld_in;
    sc_signal< sc_logic > input_AX_ALGpalma0_last_V_0_vld_out;
    sc_signal< sc_logic > input_AX_ALGpalma0_last_V_0_ack_in;
    sc_signal< sc_logic > input_AX_ALGpalma0_last_V_0_ack_out;
    sc_signal< sc_lv<1> > input_AX_ALGpalma0_last_V_0_payload_A;
    sc_signal< sc_lv<1> > input_AX_ALGpalma0_last_V_0_payload_B;
    sc_signal< sc_logic > input_AX_ALGpalma0_last_V_0_sel_rd;
    sc_signal< sc_logic > input_AX_ALGpalma0_last_V_0_sel_wr;
    sc_signal< sc_logic > input_AX_ALGpalma0_last_V_0_sel;
    sc_signal< sc_logic > input_AX_ALGpalma0_last_V_0_load_A;
    sc_signal< sc_logic > input_AX_ALGpalma0_last_V_0_load_B;
    sc_signal< sc_lv<2> > input_AX_ALGpalma0_last_V_0_state;
    sc_signal< sc_logic > input_AX_ALGpalma0_last_V_0_state_cmp_full;
    sc_signal< sc_lv<5> > input_AX_ALGpalma0_id_V_0_data_out;
    sc_signal< sc_logic > input_AX_ALGpalma0_id_V_0_vld_in;
    sc_signal< sc_logic > input_AX_ALGpalma0_id_V_0_vld_out;
    sc_signal< sc_logic > input_AX_ALGpalma0_id_V_0_ack_in;
    sc_signal< sc_logic > input_AX_ALGpalma0_id_V_0_ack_out;
    sc_signal< sc_lv<5> > input_AX_ALGpalma0_id_V_0_payload_A;
    sc_signal< sc_lv<5> > input_AX_ALGpalma0_id_V_0_payload_B;
    sc_signal< sc_logic > input_AX_ALGpalma0_id_V_0_sel_rd;
    sc_signal< sc_logic > input_AX_ALGpalma0_id_V_0_sel_wr;
    sc_signal< sc_logic > input_AX_ALGpalma0_id_V_0_sel;
    sc_signal< sc_logic > input_AX_ALGpalma0_id_V_0_load_A;
    sc_signal< sc_logic > input_AX_ALGpalma0_id_V_0_load_B;
    sc_signal< sc_lv<2> > input_AX_ALGpalma0_id_V_0_state;
    sc_signal< sc_logic > input_AX_ALGpalma0_id_V_0_state_cmp_full;
    sc_signal< sc_lv<5> > input_AX_ALGpalma0_dest_V_0_data_out;
    sc_signal< sc_logic > input_AX_ALGpalma0_dest_V_0_vld_in;
    sc_signal< sc_logic > input_AX_ALGpalma0_dest_V_0_vld_out;
    sc_signal< sc_logic > input_AX_ALGpalma0_dest_V_0_ack_in;
    sc_signal< sc_logic > input_AX_ALGpalma0_dest_V_0_ack_out;
    sc_signal< sc_lv<5> > input_AX_ALGpalma0_dest_V_0_payload_A;
    sc_signal< sc_lv<5> > input_AX_ALGpalma0_dest_V_0_payload_B;
    sc_signal< sc_logic > input_AX_ALGpalma0_dest_V_0_sel_rd;
    sc_signal< sc_logic > input_AX_ALGpalma0_dest_V_0_sel_wr;
    sc_signal< sc_logic > input_AX_ALGpalma0_dest_V_0_sel;
    sc_signal< sc_logic > input_AX_ALGpalma0_dest_V_0_load_A;
    sc_signal< sc_logic > input_AX_ALGpalma0_dest_V_0_load_B;
    sc_signal< sc_lv<2> > input_AX_ALGpalma0_dest_V_0_state;
    sc_signal< sc_logic > input_AX_ALGpalma0_dest_V_0_state_cmp_full;
    sc_signal< sc_lv<32> > input_AX_ALGdedo1_data_V_0_data_out;
    sc_signal< sc_logic > input_AX_ALGdedo1_data_V_0_vld_in;
    sc_signal< sc_logic > input_AX_ALGdedo1_data_V_0_vld_out;
    sc_signal< sc_logic > input_AX_ALGdedo1_data_V_0_ack_in;
    sc_signal< sc_logic > input_AX_ALGdedo1_data_V_0_ack_out;
    sc_signal< sc_lv<32> > input_AX_ALGdedo1_data_V_0_payload_A;
    sc_signal< sc_lv<32> > input_AX_ALGdedo1_data_V_0_payload_B;
    sc_signal< sc_logic > input_AX_ALGdedo1_data_V_0_sel_rd;
    sc_signal< sc_logic > input_AX_ALGdedo1_data_V_0_sel_wr;
    sc_signal< sc_logic > input_AX_ALGdedo1_data_V_0_sel;
    sc_signal< sc_logic > input_AX_ALGdedo1_data_V_0_load_A;
    sc_signal< sc_logic > input_AX_ALGdedo1_data_V_0_load_B;
    sc_signal< sc_lv<2> > input_AX_ALGdedo1_data_V_0_state;
    sc_signal< sc_logic > input_AX_ALGdedo1_data_V_0_state_cmp_full;
    sc_signal< sc_lv<4> > input_AX_ALGdedo1_keep_V_0_data_out;
    sc_signal< sc_logic > input_AX_ALGdedo1_keep_V_0_vld_in;
    sc_signal< sc_logic > input_AX_ALGdedo1_keep_V_0_vld_out;
    sc_signal< sc_logic > input_AX_ALGdedo1_keep_V_0_ack_in;
    sc_signal< sc_logic > input_AX_ALGdedo1_keep_V_0_ack_out;
    sc_signal< sc_lv<4> > input_AX_ALGdedo1_keep_V_0_payload_A;
    sc_signal< sc_lv<4> > input_AX_ALGdedo1_keep_V_0_payload_B;
    sc_signal< sc_logic > input_AX_ALGdedo1_keep_V_0_sel_rd;
    sc_signal< sc_logic > input_AX_ALGdedo1_keep_V_0_sel_wr;
    sc_signal< sc_logic > input_AX_ALGdedo1_keep_V_0_sel;
    sc_signal< sc_logic > input_AX_ALGdedo1_keep_V_0_load_A;
    sc_signal< sc_logic > input_AX_ALGdedo1_keep_V_0_load_B;
    sc_signal< sc_lv<2> > input_AX_ALGdedo1_keep_V_0_state;
    sc_signal< sc_logic > input_AX_ALGdedo1_keep_V_0_state_cmp_full;
    sc_signal< sc_lv<4> > input_AX_ALGdedo1_strb_V_0_data_out;
    sc_signal< sc_logic > input_AX_ALGdedo1_strb_V_0_vld_in;
    sc_signal< sc_logic > input_AX_ALGdedo1_strb_V_0_vld_out;
    sc_signal< sc_logic > input_AX_ALGdedo1_strb_V_0_ack_in;
    sc_signal< sc_logic > input_AX_ALGdedo1_strb_V_0_ack_out;
    sc_signal< sc_lv<4> > input_AX_ALGdedo1_strb_V_0_payload_A;
    sc_signal< sc_lv<4> > input_AX_ALGdedo1_strb_V_0_payload_B;
    sc_signal< sc_logic > input_AX_ALGdedo1_strb_V_0_sel_rd;
    sc_signal< sc_logic > input_AX_ALGdedo1_strb_V_0_sel_wr;
    sc_signal< sc_logic > input_AX_ALGdedo1_strb_V_0_sel;
    sc_signal< sc_logic > input_AX_ALGdedo1_strb_V_0_load_A;
    sc_signal< sc_logic > input_AX_ALGdedo1_strb_V_0_load_B;
    sc_signal< sc_lv<2> > input_AX_ALGdedo1_strb_V_0_state;
    sc_signal< sc_logic > input_AX_ALGdedo1_strb_V_0_state_cmp_full;
    sc_signal< sc_lv<4> > input_AX_ALGdedo1_user_V_0_data_out;
    sc_signal< sc_logic > input_AX_ALGdedo1_user_V_0_vld_in;
    sc_signal< sc_logic > input_AX_ALGdedo1_user_V_0_vld_out;
    sc_signal< sc_logic > input_AX_ALGdedo1_user_V_0_ack_in;
    sc_signal< sc_logic > input_AX_ALGdedo1_user_V_0_ack_out;
    sc_signal< sc_lv<4> > input_AX_ALGdedo1_user_V_0_payload_A;
    sc_signal< sc_lv<4> > input_AX_ALGdedo1_user_V_0_payload_B;
    sc_signal< sc_logic > input_AX_ALGdedo1_user_V_0_sel_rd;
    sc_signal< sc_logic > input_AX_ALGdedo1_user_V_0_sel_wr;
    sc_signal< sc_logic > input_AX_ALGdedo1_user_V_0_sel;
    sc_signal< sc_logic > input_AX_ALGdedo1_user_V_0_load_A;
    sc_signal< sc_logic > input_AX_ALGdedo1_user_V_0_load_B;
    sc_signal< sc_lv<2> > input_AX_ALGdedo1_user_V_0_state;
    sc_signal< sc_logic > input_AX_ALGdedo1_user_V_0_state_cmp_full;
    sc_signal< sc_lv<1> > input_AX_ALGdedo1_last_V_0_data_out;
    sc_signal< sc_logic > input_AX_ALGdedo1_last_V_0_vld_in;
    sc_signal< sc_logic > input_AX_ALGdedo1_last_V_0_vld_out;
    sc_signal< sc_logic > input_AX_ALGdedo1_last_V_0_ack_in;
    sc_signal< sc_logic > input_AX_ALGdedo1_last_V_0_ack_out;
    sc_signal< sc_lv<1> > input_AX_ALGdedo1_last_V_0_payload_A;
    sc_signal< sc_lv<1> > input_AX_ALGdedo1_last_V_0_payload_B;
    sc_signal< sc_logic > input_AX_ALGdedo1_last_V_0_sel_rd;
    sc_signal< sc_logic > input_AX_ALGdedo1_last_V_0_sel_wr;
    sc_signal< sc_logic > input_AX_ALGdedo1_last_V_0_sel;
    sc_signal< sc_logic > input_AX_ALGdedo1_last_V_0_load_A;
    sc_signal< sc_logic > input_AX_ALGdedo1_last_V_0_load_B;
    sc_signal< sc_lv<2> > input_AX_ALGdedo1_last_V_0_state;
    sc_signal< sc_logic > input_AX_ALGdedo1_last_V_0_state_cmp_full;
    sc_signal< sc_lv<5> > input_AX_ALGdedo1_id_V_0_data_out;
    sc_signal< sc_logic > input_AX_ALGdedo1_id_V_0_vld_in;
    sc_signal< sc_logic > input_AX_ALGdedo1_id_V_0_vld_out;
    sc_signal< sc_logic > input_AX_ALGdedo1_id_V_0_ack_in;
    sc_signal< sc_logic > input_AX_ALGdedo1_id_V_0_ack_out;
    sc_signal< sc_lv<5> > input_AX_ALGdedo1_id_V_0_payload_A;
    sc_signal< sc_lv<5> > input_AX_ALGdedo1_id_V_0_payload_B;
    sc_signal< sc_logic > input_AX_ALGdedo1_id_V_0_sel_rd;
    sc_signal< sc_logic > input_AX_ALGdedo1_id_V_0_sel_wr;
    sc_signal< sc_logic > input_AX_ALGdedo1_id_V_0_sel;
    sc_signal< sc_logic > input_AX_ALGdedo1_id_V_0_load_A;
    sc_signal< sc_logic > input_AX_ALGdedo1_id_V_0_load_B;
    sc_signal< sc_lv<2> > input_AX_ALGdedo1_id_V_0_state;
    sc_signal< sc_logic > input_AX_ALGdedo1_id_V_0_state_cmp_full;
    sc_signal< sc_lv<5> > input_AX_ALGdedo1_dest_V_0_data_out;
    sc_signal< sc_logic > input_AX_ALGdedo1_dest_V_0_vld_in;
    sc_signal< sc_logic > input_AX_ALGdedo1_dest_V_0_vld_out;
    sc_signal< sc_logic > input_AX_ALGdedo1_dest_V_0_ack_in;
    sc_signal< sc_logic > input_AX_ALGdedo1_dest_V_0_ack_out;
    sc_signal< sc_lv<5> > input_AX_ALGdedo1_dest_V_0_payload_A;
    sc_signal< sc_lv<5> > input_AX_ALGdedo1_dest_V_0_payload_B;
    sc_signal< sc_logic > input_AX_ALGdedo1_dest_V_0_sel_rd;
    sc_signal< sc_logic > input_AX_ALGdedo1_dest_V_0_sel_wr;
    sc_signal< sc_logic > input_AX_ALGdedo1_dest_V_0_sel;
    sc_signal< sc_logic > input_AX_ALGdedo1_dest_V_0_load_A;
    sc_signal< sc_logic > input_AX_ALGdedo1_dest_V_0_load_B;
    sc_signal< sc_lv<2> > input_AX_ALGdedo1_dest_V_0_state;
    sc_signal< sc_logic > input_AX_ALGdedo1_dest_V_0_state_cmp_full;
    sc_signal< sc_lv<32> > input_AX_ALGpalma1_data_V_0_data_out;
    sc_signal< sc_logic > input_AX_ALGpalma1_data_V_0_vld_in;
    sc_signal< sc_logic > input_AX_ALGpalma1_data_V_0_vld_out;
    sc_signal< sc_logic > input_AX_ALGpalma1_data_V_0_ack_in;
    sc_signal< sc_logic > input_AX_ALGpalma1_data_V_0_ack_out;
    sc_signal< sc_lv<32> > input_AX_ALGpalma1_data_V_0_payload_A;
    sc_signal< sc_lv<32> > input_AX_ALGpalma1_data_V_0_payload_B;
    sc_signal< sc_logic > input_AX_ALGpalma1_data_V_0_sel_rd;
    sc_signal< sc_logic > input_AX_ALGpalma1_data_V_0_sel_wr;
    sc_signal< sc_logic > input_AX_ALGpalma1_data_V_0_sel;
    sc_signal< sc_logic > input_AX_ALGpalma1_data_V_0_load_A;
    sc_signal< sc_logic > input_AX_ALGpalma1_data_V_0_load_B;
    sc_signal< sc_lv<2> > input_AX_ALGpalma1_data_V_0_state;
    sc_signal< sc_logic > input_AX_ALGpalma1_data_V_0_state_cmp_full;
    sc_signal< sc_lv<4> > input_AX_ALGpalma1_keep_V_0_data_out;
    sc_signal< sc_logic > input_AX_ALGpalma1_keep_V_0_vld_in;
    sc_signal< sc_logic > input_AX_ALGpalma1_keep_V_0_vld_out;
    sc_signal< sc_logic > input_AX_ALGpalma1_keep_V_0_ack_in;
    sc_signal< sc_logic > input_AX_ALGpalma1_keep_V_0_ack_out;
    sc_signal< sc_lv<4> > input_AX_ALGpalma1_keep_V_0_payload_A;
    sc_signal< sc_lv<4> > input_AX_ALGpalma1_keep_V_0_payload_B;
    sc_signal< sc_logic > input_AX_ALGpalma1_keep_V_0_sel_rd;
    sc_signal< sc_logic > input_AX_ALGpalma1_keep_V_0_sel_wr;
    sc_signal< sc_logic > input_AX_ALGpalma1_keep_V_0_sel;
    sc_signal< sc_logic > input_AX_ALGpalma1_keep_V_0_load_A;
    sc_signal< sc_logic > input_AX_ALGpalma1_keep_V_0_load_B;
    sc_signal< sc_lv<2> > input_AX_ALGpalma1_keep_V_0_state;
    sc_signal< sc_logic > input_AX_ALGpalma1_keep_V_0_state_cmp_full;
    sc_signal< sc_lv<4> > input_AX_ALGpalma1_strb_V_0_data_out;
    sc_signal< sc_logic > input_AX_ALGpalma1_strb_V_0_vld_in;
    sc_signal< sc_logic > input_AX_ALGpalma1_strb_V_0_vld_out;
    sc_signal< sc_logic > input_AX_ALGpalma1_strb_V_0_ack_in;
    sc_signal< sc_logic > input_AX_ALGpalma1_strb_V_0_ack_out;
    sc_signal< sc_lv<4> > input_AX_ALGpalma1_strb_V_0_payload_A;
    sc_signal< sc_lv<4> > input_AX_ALGpalma1_strb_V_0_payload_B;
    sc_signal< sc_logic > input_AX_ALGpalma1_strb_V_0_sel_rd;
    sc_signal< sc_logic > input_AX_ALGpalma1_strb_V_0_sel_wr;
    sc_signal< sc_logic > input_AX_ALGpalma1_strb_V_0_sel;
    sc_signal< sc_logic > input_AX_ALGpalma1_strb_V_0_load_A;
    sc_signal< sc_logic > input_AX_ALGpalma1_strb_V_0_load_B;
    sc_signal< sc_lv<2> > input_AX_ALGpalma1_strb_V_0_state;
    sc_signal< sc_logic > input_AX_ALGpalma1_strb_V_0_state_cmp_full;
    sc_signal< sc_lv<4> > input_AX_ALGpalma1_user_V_0_data_out;
    sc_signal< sc_logic > input_AX_ALGpalma1_user_V_0_vld_in;
    sc_signal< sc_logic > input_AX_ALGpalma1_user_V_0_vld_out;
    sc_signal< sc_logic > input_AX_ALGpalma1_user_V_0_ack_in;
    sc_signal< sc_logic > input_AX_ALGpalma1_user_V_0_ack_out;
    sc_signal< sc_lv<4> > input_AX_ALGpalma1_user_V_0_payload_A;
    sc_signal< sc_lv<4> > input_AX_ALGpalma1_user_V_0_payload_B;
    sc_signal< sc_logic > input_AX_ALGpalma1_user_V_0_sel_rd;
    sc_signal< sc_logic > input_AX_ALGpalma1_user_V_0_sel_wr;
    sc_signal< sc_logic > input_AX_ALGpalma1_user_V_0_sel;
    sc_signal< sc_logic > input_AX_ALGpalma1_user_V_0_load_A;
    sc_signal< sc_logic > input_AX_ALGpalma1_user_V_0_load_B;
    sc_signal< sc_lv<2> > input_AX_ALGpalma1_user_V_0_state;
    sc_signal< sc_logic > input_AX_ALGpalma1_user_V_0_state_cmp_full;
    sc_signal< sc_lv<1> > input_AX_ALGpalma1_last_V_0_data_out;
    sc_signal< sc_logic > input_AX_ALGpalma1_last_V_0_vld_in;
    sc_signal< sc_logic > input_AX_ALGpalma1_last_V_0_vld_out;
    sc_signal< sc_logic > input_AX_ALGpalma1_last_V_0_ack_in;
    sc_signal< sc_logic > input_AX_ALGpalma1_last_V_0_ack_out;
    sc_signal< sc_lv<1> > input_AX_ALGpalma1_last_V_0_payload_A;
    sc_signal< sc_lv<1> > input_AX_ALGpalma1_last_V_0_payload_B;
    sc_signal< sc_logic > input_AX_ALGpalma1_last_V_0_sel_rd;
    sc_signal< sc_logic > input_AX_ALGpalma1_last_V_0_sel_wr;
    sc_signal< sc_logic > input_AX_ALGpalma1_last_V_0_sel;
    sc_signal< sc_logic > input_AX_ALGpalma1_last_V_0_load_A;
    sc_signal< sc_logic > input_AX_ALGpalma1_last_V_0_load_B;
    sc_signal< sc_lv<2> > input_AX_ALGpalma1_last_V_0_state;
    sc_signal< sc_logic > input_AX_ALGpalma1_last_V_0_state_cmp_full;
    sc_signal< sc_lv<5> > input_AX_ALGpalma1_id_V_0_data_out;
    sc_signal< sc_logic > input_AX_ALGpalma1_id_V_0_vld_in;
    sc_signal< sc_logic > input_AX_ALGpalma1_id_V_0_vld_out;
    sc_signal< sc_logic > input_AX_ALGpalma1_id_V_0_ack_in;
    sc_signal< sc_logic > input_AX_ALGpalma1_id_V_0_ack_out;
    sc_signal< sc_lv<5> > input_AX_ALGpalma1_id_V_0_payload_A;
    sc_signal< sc_lv<5> > input_AX_ALGpalma1_id_V_0_payload_B;
    sc_signal< sc_logic > input_AX_ALGpalma1_id_V_0_sel_rd;
    sc_signal< sc_logic > input_AX_ALGpalma1_id_V_0_sel_wr;
    sc_signal< sc_logic > input_AX_ALGpalma1_id_V_0_sel;
    sc_signal< sc_logic > input_AX_ALGpalma1_id_V_0_load_A;
    sc_signal< sc_logic > input_AX_ALGpalma1_id_V_0_load_B;
    sc_signal< sc_lv<2> > input_AX_ALGpalma1_id_V_0_state;
    sc_signal< sc_logic > input_AX_ALGpalma1_id_V_0_state_cmp_full;
    sc_signal< sc_lv<5> > input_AX_ALGpalma1_dest_V_0_data_out;
    sc_signal< sc_logic > input_AX_ALGpalma1_dest_V_0_vld_in;
    sc_signal< sc_logic > input_AX_ALGpalma1_dest_V_0_vld_out;
    sc_signal< sc_logic > input_AX_ALGpalma1_dest_V_0_ack_in;
    sc_signal< sc_logic > input_AX_ALGpalma1_dest_V_0_ack_out;
    sc_signal< sc_lv<5> > input_AX_ALGpalma1_dest_V_0_payload_A;
    sc_signal< sc_lv<5> > input_AX_ALGpalma1_dest_V_0_payload_B;
    sc_signal< sc_logic > input_AX_ALGpalma1_dest_V_0_sel_rd;
    sc_signal< sc_logic > input_AX_ALGpalma1_dest_V_0_sel_wr;
    sc_signal< sc_logic > input_AX_ALGpalma1_dest_V_0_sel;
    sc_signal< sc_logic > input_AX_ALGpalma1_dest_V_0_load_A;
    sc_signal< sc_logic > input_AX_ALGpalma1_dest_V_0_load_B;
    sc_signal< sc_lv<2> > input_AX_ALGpalma1_dest_V_0_state;
    sc_signal< sc_logic > input_AX_ALGpalma1_dest_V_0_state_cmp_full;
    sc_signal< sc_lv<32> > output_AX_ALG_data_V_1_data_out;
    sc_signal< sc_logic > output_AX_ALG_data_V_1_vld_in;
    sc_signal< sc_logic > output_AX_ALG_data_V_1_vld_out;
    sc_signal< sc_logic > output_AX_ALG_data_V_1_ack_in;
    sc_signal< sc_logic > output_AX_ALG_data_V_1_ack_out;
    sc_signal< sc_lv<32> > output_AX_ALG_data_V_1_payload_A;
    sc_signal< sc_lv<32> > output_AX_ALG_data_V_1_payload_B;
    sc_signal< sc_logic > output_AX_ALG_data_V_1_sel_rd;
    sc_signal< sc_logic > output_AX_ALG_data_V_1_sel_wr;
    sc_signal< sc_logic > output_AX_ALG_data_V_1_sel;
    sc_signal< sc_logic > output_AX_ALG_data_V_1_load_A;
    sc_signal< sc_logic > output_AX_ALG_data_V_1_load_B;
    sc_signal< sc_lv<2> > output_AX_ALG_data_V_1_state;
    sc_signal< sc_logic > output_AX_ALG_data_V_1_state_cmp_full;
    sc_signal< sc_lv<4> > output_AX_ALG_keep_V_1_data_out;
    sc_signal< sc_logic > output_AX_ALG_keep_V_1_vld_in;
    sc_signal< sc_logic > output_AX_ALG_keep_V_1_vld_out;
    sc_signal< sc_logic > output_AX_ALG_keep_V_1_ack_in;
    sc_signal< sc_logic > output_AX_ALG_keep_V_1_ack_out;
    sc_signal< sc_lv<4> > output_AX_ALG_keep_V_1_payload_A;
    sc_signal< sc_lv<4> > output_AX_ALG_keep_V_1_payload_B;
    sc_signal< sc_logic > output_AX_ALG_keep_V_1_sel_rd;
    sc_signal< sc_logic > output_AX_ALG_keep_V_1_sel_wr;
    sc_signal< sc_logic > output_AX_ALG_keep_V_1_sel;
    sc_signal< sc_logic > output_AX_ALG_keep_V_1_load_A;
    sc_signal< sc_logic > output_AX_ALG_keep_V_1_load_B;
    sc_signal< sc_lv<2> > output_AX_ALG_keep_V_1_state;
    sc_signal< sc_logic > output_AX_ALG_keep_V_1_state_cmp_full;
    sc_signal< sc_lv<4> > output_AX_ALG_strb_V_1_data_out;
    sc_signal< sc_logic > output_AX_ALG_strb_V_1_vld_in;
    sc_signal< sc_logic > output_AX_ALG_strb_V_1_vld_out;
    sc_signal< sc_logic > output_AX_ALG_strb_V_1_ack_in;
    sc_signal< sc_logic > output_AX_ALG_strb_V_1_ack_out;
    sc_signal< sc_lv<4> > output_AX_ALG_strb_V_1_payload_A;
    sc_signal< sc_lv<4> > output_AX_ALG_strb_V_1_payload_B;
    sc_signal< sc_logic > output_AX_ALG_strb_V_1_sel_rd;
    sc_signal< sc_logic > output_AX_ALG_strb_V_1_sel_wr;
    sc_signal< sc_logic > output_AX_ALG_strb_V_1_sel;
    sc_signal< sc_logic > output_AX_ALG_strb_V_1_load_A;
    sc_signal< sc_logic > output_AX_ALG_strb_V_1_load_B;
    sc_signal< sc_lv<2> > output_AX_ALG_strb_V_1_state;
    sc_signal< sc_logic > output_AX_ALG_strb_V_1_state_cmp_full;
    sc_signal< sc_lv<4> > output_AX_ALG_user_V_1_data_out;
    sc_signal< sc_logic > output_AX_ALG_user_V_1_vld_in;
    sc_signal< sc_logic > output_AX_ALG_user_V_1_vld_out;
    sc_signal< sc_logic > output_AX_ALG_user_V_1_ack_in;
    sc_signal< sc_logic > output_AX_ALG_user_V_1_ack_out;
    sc_signal< sc_lv<4> > output_AX_ALG_user_V_1_payload_A;
    sc_signal< sc_lv<4> > output_AX_ALG_user_V_1_payload_B;
    sc_signal< sc_logic > output_AX_ALG_user_V_1_sel_rd;
    sc_signal< sc_logic > output_AX_ALG_user_V_1_sel_wr;
    sc_signal< sc_logic > output_AX_ALG_user_V_1_sel;
    sc_signal< sc_logic > output_AX_ALG_user_V_1_load_A;
    sc_signal< sc_logic > output_AX_ALG_user_V_1_load_B;
    sc_signal< sc_lv<2> > output_AX_ALG_user_V_1_state;
    sc_signal< sc_logic > output_AX_ALG_user_V_1_state_cmp_full;
    sc_signal< sc_lv<1> > output_AX_ALG_last_V_1_data_out;
    sc_signal< sc_logic > output_AX_ALG_last_V_1_vld_in;
    sc_signal< sc_logic > output_AX_ALG_last_V_1_vld_out;
    sc_signal< sc_logic > output_AX_ALG_last_V_1_ack_in;
    sc_signal< sc_logic > output_AX_ALG_last_V_1_ack_out;
    sc_signal< sc_lv<1> > output_AX_ALG_last_V_1_payload_A;
    sc_signal< sc_lv<1> > output_AX_ALG_last_V_1_payload_B;
    sc_signal< sc_logic > output_AX_ALG_last_V_1_sel_rd;
    sc_signal< sc_logic > output_AX_ALG_last_V_1_sel_wr;
    sc_signal< sc_logic > output_AX_ALG_last_V_1_sel;
    sc_signal< sc_logic > output_AX_ALG_last_V_1_load_A;
    sc_signal< sc_logic > output_AX_ALG_last_V_1_load_B;
    sc_signal< sc_lv<2> > output_AX_ALG_last_V_1_state;
    sc_signal< sc_logic > output_AX_ALG_last_V_1_state_cmp_full;
    sc_signal< sc_lv<5> > output_AX_ALG_id_V_1_data_out;
    sc_signal< sc_logic > output_AX_ALG_id_V_1_vld_in;
    sc_signal< sc_logic > output_AX_ALG_id_V_1_vld_out;
    sc_signal< sc_logic > output_AX_ALG_id_V_1_ack_in;
    sc_signal< sc_logic > output_AX_ALG_id_V_1_ack_out;
    sc_signal< sc_lv<5> > output_AX_ALG_id_V_1_payload_A;
    sc_signal< sc_lv<5> > output_AX_ALG_id_V_1_payload_B;
    sc_signal< sc_logic > output_AX_ALG_id_V_1_sel_rd;
    sc_signal< sc_logic > output_AX_ALG_id_V_1_sel_wr;
    sc_signal< sc_logic > output_AX_ALG_id_V_1_sel;
    sc_signal< sc_logic > output_AX_ALG_id_V_1_load_A;
    sc_signal< sc_logic > output_AX_ALG_id_V_1_load_B;
    sc_signal< sc_lv<2> > output_AX_ALG_id_V_1_state;
    sc_signal< sc_logic > output_AX_ALG_id_V_1_state_cmp_full;
    sc_signal< sc_lv<5> > output_AX_ALG_dest_V_1_data_out;
    sc_signal< sc_logic > output_AX_ALG_dest_V_1_vld_in;
    sc_signal< sc_logic > output_AX_ALG_dest_V_1_vld_out;
    sc_signal< sc_logic > output_AX_ALG_dest_V_1_ack_in;
    sc_signal< sc_logic > output_AX_ALG_dest_V_1_ack_out;
    sc_signal< sc_lv<5> > output_AX_ALG_dest_V_1_payload_A;
    sc_signal< sc_lv<5> > output_AX_ALG_dest_V_1_payload_B;
    sc_signal< sc_logic > output_AX_ALG_dest_V_1_sel_rd;
    sc_signal< sc_logic > output_AX_ALG_dest_V_1_sel_wr;
    sc_signal< sc_logic > output_AX_ALG_dest_V_1_sel;
    sc_signal< sc_logic > output_AX_ALG_dest_V_1_load_A;
    sc_signal< sc_logic > output_AX_ALG_dest_V_1_load_B;
    sc_signal< sc_lv<2> > output_AX_ALG_dest_V_1_state;
    sc_signal< sc_logic > output_AX_ALG_dest_V_1_state_cmp_full;
    sc_signal< sc_logic > dedo0_0_V_read_data_fu_118_input_AX_ALGpalma1_TDATA_blk_n;
    sc_signal< sc_logic > input_AX_ALGdedo0_TDATA_blk_n;
    sc_signal< sc_lv<4> > ap_CS_fsm;
    sc_signal< sc_logic > ap_CS_fsm_state2;
    sc_signal< sc_logic > palma0_0_V_read_data_fu_137_input_AX_ALGpalma1_TDATA_blk_n;
    sc_signal< sc_logic > input_AX_ALGpalma0_TDATA_blk_n;
    sc_signal< sc_logic > dedo1_0_V_read_data_fu_156_input_AX_ALGpalma1_TDATA_blk_n;
    sc_signal< sc_logic > input_AX_ALGdedo1_TDATA_blk_n;
    sc_signal< sc_logic > palma1_0_V_read_data_fu_175_input_AX_ALGpalma1_TDATA_blk_n;
    sc_signal< sc_logic > input_AX_ALGpalma1_TDATA_blk_n;
    sc_signal< sc_lv<32> > dedo0_0_V_read_data_fu_118_ap_return;
    sc_signal< sc_lv<32> > dedo0_0_V_reg_194;
    sc_signal< bool > ap_block_state2;
    sc_signal< sc_lv<32> > palma0_0_V_read_data_fu_137_ap_return;
    sc_signal< sc_lv<32> > palma0_0_V_reg_199;
    sc_signal< sc_lv<32> > dedo1_0_V_read_data_fu_156_ap_return;
    sc_signal< sc_lv<32> > dedo1_0_V_reg_204;
    sc_signal< sc_lv<32> > palma1_0_V_read_data_fu_175_ap_return;
    sc_signal< sc_lv<32> > palma1_0_V_reg_209;
    sc_signal< sc_logic > grp_write_data_fu_96_ap_start;
    sc_signal< sc_logic > grp_write_data_fu_96_ap_done;
    sc_signal< sc_logic > grp_write_data_fu_96_ap_idle;
    sc_signal< sc_logic > grp_write_data_fu_96_ap_ready;
    sc_signal< sc_lv<32> > grp_write_data_fu_96_output_AX_ALG_TDATA;
    sc_signal< sc_logic > grp_write_data_fu_96_output_AX_ALG_TVALID;
    sc_signal< sc_logic > grp_write_data_fu_96_output_AX_ALG_TREADY;
    sc_signal< sc_lv<4> > grp_write_data_fu_96_output_AX_ALG_TKEEP;
    sc_signal< sc_lv<4> > grp_write_data_fu_96_output_AX_ALG_TSTRB;
    sc_signal< sc_lv<4> > grp_write_data_fu_96_output_AX_ALG_TUSER;
    sc_signal< sc_lv<1> > grp_write_data_fu_96_output_AX_ALG_TLAST;
    sc_signal< sc_lv<5> > grp_write_data_fu_96_output_AX_ALG_TID;
    sc_signal< sc_lv<5> > grp_write_data_fu_96_output_AX_ALG_TDEST;
    sc_signal< sc_logic > dedo0_0_V_read_data_fu_118_ap_start;
    sc_signal< sc_logic > dedo0_0_V_read_data_fu_118_ap_done;
    sc_signal< sc_logic > dedo0_0_V_read_data_fu_118_ap_idle;
    sc_signal< sc_logic > dedo0_0_V_read_data_fu_118_ap_ready;
    sc_signal< sc_logic > dedo0_0_V_read_data_fu_118_input_AX_ALGpalma1_TVALID;
    sc_signal< sc_logic > dedo0_0_V_read_data_fu_118_input_AX_ALGpalma1_TREADY;
    sc_signal< sc_logic > palma0_0_V_read_data_fu_137_ap_start;
    sc_signal< sc_logic > palma0_0_V_read_data_fu_137_ap_done;
    sc_signal< sc_logic > palma0_0_V_read_data_fu_137_ap_idle;
    sc_signal< sc_logic > palma0_0_V_read_data_fu_137_ap_ready;
    sc_signal< sc_logic > palma0_0_V_read_data_fu_137_input_AX_ALGpalma1_TVALID;
    sc_signal< sc_logic > palma0_0_V_read_data_fu_137_input_AX_ALGpalma1_TREADY;
    sc_signal< sc_logic > dedo1_0_V_read_data_fu_156_ap_start;
    sc_signal< sc_logic > dedo1_0_V_read_data_fu_156_ap_done;
    sc_signal< sc_logic > dedo1_0_V_read_data_fu_156_ap_idle;
    sc_signal< sc_logic > dedo1_0_V_read_data_fu_156_ap_ready;
    sc_signal< sc_logic > dedo1_0_V_read_data_fu_156_input_AX_ALGpalma1_TVALID;
    sc_signal< sc_logic > dedo1_0_V_read_data_fu_156_input_AX_ALGpalma1_TREADY;
    sc_signal< sc_logic > palma1_0_V_read_data_fu_175_ap_start;
    sc_signal< sc_logic > palma1_0_V_read_data_fu_175_ap_done;
    sc_signal< sc_logic > palma1_0_V_read_data_fu_175_ap_idle;
    sc_signal< sc_logic > palma1_0_V_read_data_fu_175_ap_ready;
    sc_signal< sc_logic > palma1_0_V_read_data_fu_175_input_AX_ALGpalma1_TVALID;
    sc_signal< sc_logic > palma1_0_V_read_data_fu_175_input_AX_ALGpalma1_TREADY;
    sc_signal< sc_logic > ap_reg_grp_write_data_fu_96_ap_start;
    sc_signal< bool > ap_block_state2_ignore_call46;
    sc_signal< sc_logic > ap_CS_fsm_state3;
    sc_signal< bool > ap_block_state2_ignore_call42;
    sc_signal< bool > ap_block_state2_ignore_call43;
    sc_signal< bool > ap_block_state2_ignore_call44;
    sc_signal< bool > ap_block_state2_ignore_call45;
    sc_signal< sc_lv<4> > ap_NS_fsm;
    sc_signal< sc_logic > ap_CS_fsm_state4;
    sc_signal< bool > ap_block_state4;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<4> ap_ST_fsm_state1;
    static const sc_lv<4> ap_ST_fsm_state2;
    static const sc_lv<4> ap_ST_fsm_state3;
    static const sc_lv<4> ap_ST_fsm_state4;
    static const sc_lv<1> ap_const_lv1_0;
    static const sc_lv<1> ap_const_lv1_1;
    static const sc_lv<2> ap_const_lv2_0;
    static const sc_lv<2> ap_const_lv2_2;
    static const sc_lv<2> ap_const_lv2_3;
    static const sc_lv<2> ap_const_lv2_1;
    static const sc_lv<32> ap_const_lv32_1;
    static const sc_lv<32> ap_const_lv32_2;
    static const sc_lv<32> ap_const_lv32_3;
    static const bool ap_const_boolean_1;
    // Thread declarations
    void thread_ap_clk_no_reset_();
    void thread_ap_CS_fsm_state2();
    void thread_ap_CS_fsm_state3();
    void thread_ap_CS_fsm_state4();
    void thread_ap_block_state2();
    void thread_ap_block_state2_ignore_call42();
    void thread_ap_block_state2_ignore_call43();
    void thread_ap_block_state2_ignore_call44();
    void thread_ap_block_state2_ignore_call45();
    void thread_ap_block_state2_ignore_call46();
    void thread_ap_block_state4();
    void thread_ap_rst_n_inv();
    void thread_dedo0_0_V_read_data_fu_118_ap_start();
    void thread_dedo0_0_V_read_data_fu_118_input_AX_ALGpalma1_TVALID();
    void thread_dedo1_0_V_read_data_fu_156_ap_start();
    void thread_dedo1_0_V_read_data_fu_156_input_AX_ALGpalma1_TVALID();
    void thread_grp_write_data_fu_96_ap_start();
    void thread_grp_write_data_fu_96_output_AX_ALG_TREADY();
    void thread_input_AX_ALGdedo0_TDATA_blk_n();
    void thread_input_AX_ALGdedo0_TREADY();
    void thread_input_AX_ALGdedo0_data_V_0_ack_in();
    void thread_input_AX_ALGdedo0_data_V_0_ack_out();
    void thread_input_AX_ALGdedo0_data_V_0_data_out();
    void thread_input_AX_ALGdedo0_data_V_0_load_A();
    void thread_input_AX_ALGdedo0_data_V_0_load_B();
    void thread_input_AX_ALGdedo0_data_V_0_sel();
    void thread_input_AX_ALGdedo0_data_V_0_state_cmp_full();
    void thread_input_AX_ALGdedo0_data_V_0_vld_in();
    void thread_input_AX_ALGdedo0_data_V_0_vld_out();
    void thread_input_AX_ALGdedo0_dest_V_0_ack_in();
    void thread_input_AX_ALGdedo0_dest_V_0_ack_out();
    void thread_input_AX_ALGdedo0_dest_V_0_data_out();
    void thread_input_AX_ALGdedo0_dest_V_0_load_A();
    void thread_input_AX_ALGdedo0_dest_V_0_load_B();
    void thread_input_AX_ALGdedo0_dest_V_0_sel();
    void thread_input_AX_ALGdedo0_dest_V_0_state_cmp_full();
    void thread_input_AX_ALGdedo0_dest_V_0_vld_in();
    void thread_input_AX_ALGdedo0_dest_V_0_vld_out();
    void thread_input_AX_ALGdedo0_id_V_0_ack_in();
    void thread_input_AX_ALGdedo0_id_V_0_ack_out();
    void thread_input_AX_ALGdedo0_id_V_0_data_out();
    void thread_input_AX_ALGdedo0_id_V_0_load_A();
    void thread_input_AX_ALGdedo0_id_V_0_load_B();
    void thread_input_AX_ALGdedo0_id_V_0_sel();
    void thread_input_AX_ALGdedo0_id_V_0_state_cmp_full();
    void thread_input_AX_ALGdedo0_id_V_0_vld_in();
    void thread_input_AX_ALGdedo0_id_V_0_vld_out();
    void thread_input_AX_ALGdedo0_keep_V_0_ack_in();
    void thread_input_AX_ALGdedo0_keep_V_0_ack_out();
    void thread_input_AX_ALGdedo0_keep_V_0_data_out();
    void thread_input_AX_ALGdedo0_keep_V_0_load_A();
    void thread_input_AX_ALGdedo0_keep_V_0_load_B();
    void thread_input_AX_ALGdedo0_keep_V_0_sel();
    void thread_input_AX_ALGdedo0_keep_V_0_state_cmp_full();
    void thread_input_AX_ALGdedo0_keep_V_0_vld_in();
    void thread_input_AX_ALGdedo0_keep_V_0_vld_out();
    void thread_input_AX_ALGdedo0_last_V_0_ack_in();
    void thread_input_AX_ALGdedo0_last_V_0_ack_out();
    void thread_input_AX_ALGdedo0_last_V_0_data_out();
    void thread_input_AX_ALGdedo0_last_V_0_load_A();
    void thread_input_AX_ALGdedo0_last_V_0_load_B();
    void thread_input_AX_ALGdedo0_last_V_0_sel();
    void thread_input_AX_ALGdedo0_last_V_0_state_cmp_full();
    void thread_input_AX_ALGdedo0_last_V_0_vld_in();
    void thread_input_AX_ALGdedo0_last_V_0_vld_out();
    void thread_input_AX_ALGdedo0_strb_V_0_ack_in();
    void thread_input_AX_ALGdedo0_strb_V_0_ack_out();
    void thread_input_AX_ALGdedo0_strb_V_0_data_out();
    void thread_input_AX_ALGdedo0_strb_V_0_load_A();
    void thread_input_AX_ALGdedo0_strb_V_0_load_B();
    void thread_input_AX_ALGdedo0_strb_V_0_sel();
    void thread_input_AX_ALGdedo0_strb_V_0_state_cmp_full();
    void thread_input_AX_ALGdedo0_strb_V_0_vld_in();
    void thread_input_AX_ALGdedo0_strb_V_0_vld_out();
    void thread_input_AX_ALGdedo0_user_V_0_ack_in();
    void thread_input_AX_ALGdedo0_user_V_0_ack_out();
    void thread_input_AX_ALGdedo0_user_V_0_data_out();
    void thread_input_AX_ALGdedo0_user_V_0_load_A();
    void thread_input_AX_ALGdedo0_user_V_0_load_B();
    void thread_input_AX_ALGdedo0_user_V_0_sel();
    void thread_input_AX_ALGdedo0_user_V_0_state_cmp_full();
    void thread_input_AX_ALGdedo0_user_V_0_vld_in();
    void thread_input_AX_ALGdedo0_user_V_0_vld_out();
    void thread_input_AX_ALGdedo1_TDATA_blk_n();
    void thread_input_AX_ALGdedo1_TREADY();
    void thread_input_AX_ALGdedo1_data_V_0_ack_in();
    void thread_input_AX_ALGdedo1_data_V_0_ack_out();
    void thread_input_AX_ALGdedo1_data_V_0_data_out();
    void thread_input_AX_ALGdedo1_data_V_0_load_A();
    void thread_input_AX_ALGdedo1_data_V_0_load_B();
    void thread_input_AX_ALGdedo1_data_V_0_sel();
    void thread_input_AX_ALGdedo1_data_V_0_state_cmp_full();
    void thread_input_AX_ALGdedo1_data_V_0_vld_in();
    void thread_input_AX_ALGdedo1_data_V_0_vld_out();
    void thread_input_AX_ALGdedo1_dest_V_0_ack_in();
    void thread_input_AX_ALGdedo1_dest_V_0_ack_out();
    void thread_input_AX_ALGdedo1_dest_V_0_data_out();
    void thread_input_AX_ALGdedo1_dest_V_0_load_A();
    void thread_input_AX_ALGdedo1_dest_V_0_load_B();
    void thread_input_AX_ALGdedo1_dest_V_0_sel();
    void thread_input_AX_ALGdedo1_dest_V_0_state_cmp_full();
    void thread_input_AX_ALGdedo1_dest_V_0_vld_in();
    void thread_input_AX_ALGdedo1_dest_V_0_vld_out();
    void thread_input_AX_ALGdedo1_id_V_0_ack_in();
    void thread_input_AX_ALGdedo1_id_V_0_ack_out();
    void thread_input_AX_ALGdedo1_id_V_0_data_out();
    void thread_input_AX_ALGdedo1_id_V_0_load_A();
    void thread_input_AX_ALGdedo1_id_V_0_load_B();
    void thread_input_AX_ALGdedo1_id_V_0_sel();
    void thread_input_AX_ALGdedo1_id_V_0_state_cmp_full();
    void thread_input_AX_ALGdedo1_id_V_0_vld_in();
    void thread_input_AX_ALGdedo1_id_V_0_vld_out();
    void thread_input_AX_ALGdedo1_keep_V_0_ack_in();
    void thread_input_AX_ALGdedo1_keep_V_0_ack_out();
    void thread_input_AX_ALGdedo1_keep_V_0_data_out();
    void thread_input_AX_ALGdedo1_keep_V_0_load_A();
    void thread_input_AX_ALGdedo1_keep_V_0_load_B();
    void thread_input_AX_ALGdedo1_keep_V_0_sel();
    void thread_input_AX_ALGdedo1_keep_V_0_state_cmp_full();
    void thread_input_AX_ALGdedo1_keep_V_0_vld_in();
    void thread_input_AX_ALGdedo1_keep_V_0_vld_out();
    void thread_input_AX_ALGdedo1_last_V_0_ack_in();
    void thread_input_AX_ALGdedo1_last_V_0_ack_out();
    void thread_input_AX_ALGdedo1_last_V_0_data_out();
    void thread_input_AX_ALGdedo1_last_V_0_load_A();
    void thread_input_AX_ALGdedo1_last_V_0_load_B();
    void thread_input_AX_ALGdedo1_last_V_0_sel();
    void thread_input_AX_ALGdedo1_last_V_0_state_cmp_full();
    void thread_input_AX_ALGdedo1_last_V_0_vld_in();
    void thread_input_AX_ALGdedo1_last_V_0_vld_out();
    void thread_input_AX_ALGdedo1_strb_V_0_ack_in();
    void thread_input_AX_ALGdedo1_strb_V_0_ack_out();
    void thread_input_AX_ALGdedo1_strb_V_0_data_out();
    void thread_input_AX_ALGdedo1_strb_V_0_load_A();
    void thread_input_AX_ALGdedo1_strb_V_0_load_B();
    void thread_input_AX_ALGdedo1_strb_V_0_sel();
    void thread_input_AX_ALGdedo1_strb_V_0_state_cmp_full();
    void thread_input_AX_ALGdedo1_strb_V_0_vld_in();
    void thread_input_AX_ALGdedo1_strb_V_0_vld_out();
    void thread_input_AX_ALGdedo1_user_V_0_ack_in();
    void thread_input_AX_ALGdedo1_user_V_0_ack_out();
    void thread_input_AX_ALGdedo1_user_V_0_data_out();
    void thread_input_AX_ALGdedo1_user_V_0_load_A();
    void thread_input_AX_ALGdedo1_user_V_0_load_B();
    void thread_input_AX_ALGdedo1_user_V_0_sel();
    void thread_input_AX_ALGdedo1_user_V_0_state_cmp_full();
    void thread_input_AX_ALGdedo1_user_V_0_vld_in();
    void thread_input_AX_ALGdedo1_user_V_0_vld_out();
    void thread_input_AX_ALGpalma0_TDATA_blk_n();
    void thread_input_AX_ALGpalma0_TREADY();
    void thread_input_AX_ALGpalma0_data_V_0_ack_in();
    void thread_input_AX_ALGpalma0_data_V_0_ack_out();
    void thread_input_AX_ALGpalma0_data_V_0_data_out();
    void thread_input_AX_ALGpalma0_data_V_0_load_A();
    void thread_input_AX_ALGpalma0_data_V_0_load_B();
    void thread_input_AX_ALGpalma0_data_V_0_sel();
    void thread_input_AX_ALGpalma0_data_V_0_state_cmp_full();
    void thread_input_AX_ALGpalma0_data_V_0_vld_in();
    void thread_input_AX_ALGpalma0_data_V_0_vld_out();
    void thread_input_AX_ALGpalma0_dest_V_0_ack_in();
    void thread_input_AX_ALGpalma0_dest_V_0_ack_out();
    void thread_input_AX_ALGpalma0_dest_V_0_data_out();
    void thread_input_AX_ALGpalma0_dest_V_0_load_A();
    void thread_input_AX_ALGpalma0_dest_V_0_load_B();
    void thread_input_AX_ALGpalma0_dest_V_0_sel();
    void thread_input_AX_ALGpalma0_dest_V_0_state_cmp_full();
    void thread_input_AX_ALGpalma0_dest_V_0_vld_in();
    void thread_input_AX_ALGpalma0_dest_V_0_vld_out();
    void thread_input_AX_ALGpalma0_id_V_0_ack_in();
    void thread_input_AX_ALGpalma0_id_V_0_ack_out();
    void thread_input_AX_ALGpalma0_id_V_0_data_out();
    void thread_input_AX_ALGpalma0_id_V_0_load_A();
    void thread_input_AX_ALGpalma0_id_V_0_load_B();
    void thread_input_AX_ALGpalma0_id_V_0_sel();
    void thread_input_AX_ALGpalma0_id_V_0_state_cmp_full();
    void thread_input_AX_ALGpalma0_id_V_0_vld_in();
    void thread_input_AX_ALGpalma0_id_V_0_vld_out();
    void thread_input_AX_ALGpalma0_keep_V_0_ack_in();
    void thread_input_AX_ALGpalma0_keep_V_0_ack_out();
    void thread_input_AX_ALGpalma0_keep_V_0_data_out();
    void thread_input_AX_ALGpalma0_keep_V_0_load_A();
    void thread_input_AX_ALGpalma0_keep_V_0_load_B();
    void thread_input_AX_ALGpalma0_keep_V_0_sel();
    void thread_input_AX_ALGpalma0_keep_V_0_state_cmp_full();
    void thread_input_AX_ALGpalma0_keep_V_0_vld_in();
    void thread_input_AX_ALGpalma0_keep_V_0_vld_out();
    void thread_input_AX_ALGpalma0_last_V_0_ack_in();
    void thread_input_AX_ALGpalma0_last_V_0_ack_out();
    void thread_input_AX_ALGpalma0_last_V_0_data_out();
    void thread_input_AX_ALGpalma0_last_V_0_load_A();
    void thread_input_AX_ALGpalma0_last_V_0_load_B();
    void thread_input_AX_ALGpalma0_last_V_0_sel();
    void thread_input_AX_ALGpalma0_last_V_0_state_cmp_full();
    void thread_input_AX_ALGpalma0_last_V_0_vld_in();
    void thread_input_AX_ALGpalma0_last_V_0_vld_out();
    void thread_input_AX_ALGpalma0_strb_V_0_ack_in();
    void thread_input_AX_ALGpalma0_strb_V_0_ack_out();
    void thread_input_AX_ALGpalma0_strb_V_0_data_out();
    void thread_input_AX_ALGpalma0_strb_V_0_load_A();
    void thread_input_AX_ALGpalma0_strb_V_0_load_B();
    void thread_input_AX_ALGpalma0_strb_V_0_sel();
    void thread_input_AX_ALGpalma0_strb_V_0_state_cmp_full();
    void thread_input_AX_ALGpalma0_strb_V_0_vld_in();
    void thread_input_AX_ALGpalma0_strb_V_0_vld_out();
    void thread_input_AX_ALGpalma0_user_V_0_ack_in();
    void thread_input_AX_ALGpalma0_user_V_0_ack_out();
    void thread_input_AX_ALGpalma0_user_V_0_data_out();
    void thread_input_AX_ALGpalma0_user_V_0_load_A();
    void thread_input_AX_ALGpalma0_user_V_0_load_B();
    void thread_input_AX_ALGpalma0_user_V_0_sel();
    void thread_input_AX_ALGpalma0_user_V_0_state_cmp_full();
    void thread_input_AX_ALGpalma0_user_V_0_vld_in();
    void thread_input_AX_ALGpalma0_user_V_0_vld_out();
    void thread_input_AX_ALGpalma1_TDATA_blk_n();
    void thread_input_AX_ALGpalma1_TREADY();
    void thread_input_AX_ALGpalma1_data_V_0_ack_in();
    void thread_input_AX_ALGpalma1_data_V_0_ack_out();
    void thread_input_AX_ALGpalma1_data_V_0_data_out();
    void thread_input_AX_ALGpalma1_data_V_0_load_A();
    void thread_input_AX_ALGpalma1_data_V_0_load_B();
    void thread_input_AX_ALGpalma1_data_V_0_sel();
    void thread_input_AX_ALGpalma1_data_V_0_state_cmp_full();
    void thread_input_AX_ALGpalma1_data_V_0_vld_in();
    void thread_input_AX_ALGpalma1_data_V_0_vld_out();
    void thread_input_AX_ALGpalma1_dest_V_0_ack_in();
    void thread_input_AX_ALGpalma1_dest_V_0_ack_out();
    void thread_input_AX_ALGpalma1_dest_V_0_data_out();
    void thread_input_AX_ALGpalma1_dest_V_0_load_A();
    void thread_input_AX_ALGpalma1_dest_V_0_load_B();
    void thread_input_AX_ALGpalma1_dest_V_0_sel();
    void thread_input_AX_ALGpalma1_dest_V_0_state_cmp_full();
    void thread_input_AX_ALGpalma1_dest_V_0_vld_in();
    void thread_input_AX_ALGpalma1_dest_V_0_vld_out();
    void thread_input_AX_ALGpalma1_id_V_0_ack_in();
    void thread_input_AX_ALGpalma1_id_V_0_ack_out();
    void thread_input_AX_ALGpalma1_id_V_0_data_out();
    void thread_input_AX_ALGpalma1_id_V_0_load_A();
    void thread_input_AX_ALGpalma1_id_V_0_load_B();
    void thread_input_AX_ALGpalma1_id_V_0_sel();
    void thread_input_AX_ALGpalma1_id_V_0_state_cmp_full();
    void thread_input_AX_ALGpalma1_id_V_0_vld_in();
    void thread_input_AX_ALGpalma1_id_V_0_vld_out();
    void thread_input_AX_ALGpalma1_keep_V_0_ack_in();
    void thread_input_AX_ALGpalma1_keep_V_0_ack_out();
    void thread_input_AX_ALGpalma1_keep_V_0_data_out();
    void thread_input_AX_ALGpalma1_keep_V_0_load_A();
    void thread_input_AX_ALGpalma1_keep_V_0_load_B();
    void thread_input_AX_ALGpalma1_keep_V_0_sel();
    void thread_input_AX_ALGpalma1_keep_V_0_state_cmp_full();
    void thread_input_AX_ALGpalma1_keep_V_0_vld_in();
    void thread_input_AX_ALGpalma1_keep_V_0_vld_out();
    void thread_input_AX_ALGpalma1_last_V_0_ack_in();
    void thread_input_AX_ALGpalma1_last_V_0_ack_out();
    void thread_input_AX_ALGpalma1_last_V_0_data_out();
    void thread_input_AX_ALGpalma1_last_V_0_load_A();
    void thread_input_AX_ALGpalma1_last_V_0_load_B();
    void thread_input_AX_ALGpalma1_last_V_0_sel();
    void thread_input_AX_ALGpalma1_last_V_0_state_cmp_full();
    void thread_input_AX_ALGpalma1_last_V_0_vld_in();
    void thread_input_AX_ALGpalma1_last_V_0_vld_out();
    void thread_input_AX_ALGpalma1_strb_V_0_ack_in();
    void thread_input_AX_ALGpalma1_strb_V_0_ack_out();
    void thread_input_AX_ALGpalma1_strb_V_0_data_out();
    void thread_input_AX_ALGpalma1_strb_V_0_load_A();
    void thread_input_AX_ALGpalma1_strb_V_0_load_B();
    void thread_input_AX_ALGpalma1_strb_V_0_sel();
    void thread_input_AX_ALGpalma1_strb_V_0_state_cmp_full();
    void thread_input_AX_ALGpalma1_strb_V_0_vld_in();
    void thread_input_AX_ALGpalma1_strb_V_0_vld_out();
    void thread_input_AX_ALGpalma1_user_V_0_ack_in();
    void thread_input_AX_ALGpalma1_user_V_0_ack_out();
    void thread_input_AX_ALGpalma1_user_V_0_data_out();
    void thread_input_AX_ALGpalma1_user_V_0_load_A();
    void thread_input_AX_ALGpalma1_user_V_0_load_B();
    void thread_input_AX_ALGpalma1_user_V_0_sel();
    void thread_input_AX_ALGpalma1_user_V_0_state_cmp_full();
    void thread_input_AX_ALGpalma1_user_V_0_vld_in();
    void thread_input_AX_ALGpalma1_user_V_0_vld_out();
    void thread_output_AX_ALG_TDATA();
    void thread_output_AX_ALG_TDEST();
    void thread_output_AX_ALG_TID();
    void thread_output_AX_ALG_TKEEP();
    void thread_output_AX_ALG_TLAST();
    void thread_output_AX_ALG_TSTRB();
    void thread_output_AX_ALG_TUSER();
    void thread_output_AX_ALG_TVALID();
    void thread_output_AX_ALG_data_V_1_ack_in();
    void thread_output_AX_ALG_data_V_1_ack_out();
    void thread_output_AX_ALG_data_V_1_data_out();
    void thread_output_AX_ALG_data_V_1_load_A();
    void thread_output_AX_ALG_data_V_1_load_B();
    void thread_output_AX_ALG_data_V_1_sel();
    void thread_output_AX_ALG_data_V_1_state_cmp_full();
    void thread_output_AX_ALG_data_V_1_vld_in();
    void thread_output_AX_ALG_data_V_1_vld_out();
    void thread_output_AX_ALG_dest_V_1_ack_in();
    void thread_output_AX_ALG_dest_V_1_ack_out();
    void thread_output_AX_ALG_dest_V_1_data_out();
    void thread_output_AX_ALG_dest_V_1_load_A();
    void thread_output_AX_ALG_dest_V_1_load_B();
    void thread_output_AX_ALG_dest_V_1_sel();
    void thread_output_AX_ALG_dest_V_1_state_cmp_full();
    void thread_output_AX_ALG_dest_V_1_vld_in();
    void thread_output_AX_ALG_dest_V_1_vld_out();
    void thread_output_AX_ALG_id_V_1_ack_in();
    void thread_output_AX_ALG_id_V_1_ack_out();
    void thread_output_AX_ALG_id_V_1_data_out();
    void thread_output_AX_ALG_id_V_1_load_A();
    void thread_output_AX_ALG_id_V_1_load_B();
    void thread_output_AX_ALG_id_V_1_sel();
    void thread_output_AX_ALG_id_V_1_state_cmp_full();
    void thread_output_AX_ALG_id_V_1_vld_in();
    void thread_output_AX_ALG_id_V_1_vld_out();
    void thread_output_AX_ALG_keep_V_1_ack_in();
    void thread_output_AX_ALG_keep_V_1_ack_out();
    void thread_output_AX_ALG_keep_V_1_data_out();
    void thread_output_AX_ALG_keep_V_1_load_A();
    void thread_output_AX_ALG_keep_V_1_load_B();
    void thread_output_AX_ALG_keep_V_1_sel();
    void thread_output_AX_ALG_keep_V_1_state_cmp_full();
    void thread_output_AX_ALG_keep_V_1_vld_in();
    void thread_output_AX_ALG_keep_V_1_vld_out();
    void thread_output_AX_ALG_last_V_1_ack_in();
    void thread_output_AX_ALG_last_V_1_ack_out();
    void thread_output_AX_ALG_last_V_1_data_out();
    void thread_output_AX_ALG_last_V_1_load_A();
    void thread_output_AX_ALG_last_V_1_load_B();
    void thread_output_AX_ALG_last_V_1_sel();
    void thread_output_AX_ALG_last_V_1_state_cmp_full();
    void thread_output_AX_ALG_last_V_1_vld_in();
    void thread_output_AX_ALG_last_V_1_vld_out();
    void thread_output_AX_ALG_strb_V_1_ack_in();
    void thread_output_AX_ALG_strb_V_1_ack_out();
    void thread_output_AX_ALG_strb_V_1_data_out();
    void thread_output_AX_ALG_strb_V_1_load_A();
    void thread_output_AX_ALG_strb_V_1_load_B();
    void thread_output_AX_ALG_strb_V_1_sel();
    void thread_output_AX_ALG_strb_V_1_state_cmp_full();
    void thread_output_AX_ALG_strb_V_1_vld_in();
    void thread_output_AX_ALG_strb_V_1_vld_out();
    void thread_output_AX_ALG_user_V_1_ack_in();
    void thread_output_AX_ALG_user_V_1_ack_out();
    void thread_output_AX_ALG_user_V_1_data_out();
    void thread_output_AX_ALG_user_V_1_load_A();
    void thread_output_AX_ALG_user_V_1_load_B();
    void thread_output_AX_ALG_user_V_1_sel();
    void thread_output_AX_ALG_user_V_1_state_cmp_full();
    void thread_output_AX_ALG_user_V_1_vld_in();
    void thread_output_AX_ALG_user_V_1_vld_out();
    void thread_palma0_0_V_read_data_fu_137_ap_start();
    void thread_palma0_0_V_read_data_fu_137_input_AX_ALGpalma1_TVALID();
    void thread_palma1_0_V_read_data_fu_175_ap_start();
    void thread_palma1_0_V_read_data_fu_175_input_AX_ALGpalma1_TVALID();
    void thread_ap_NS_fsm();
    void thread_hdltv_gen();
};

}

using namespace ap_rtl;

#endif
