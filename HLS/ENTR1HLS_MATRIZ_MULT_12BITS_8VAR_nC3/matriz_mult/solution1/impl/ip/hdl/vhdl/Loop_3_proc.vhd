-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
-- Version: 2017.1
-- Copyright (C) 1986-2017 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity Loop_3_proc is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_continue : IN STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    X_OUT_0_address0 : OUT STD_LOGIC_VECTOR (1 downto 0);
    X_OUT_0_ce0 : OUT STD_LOGIC;
    X_OUT_0_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    out_stream_TDATA : OUT STD_LOGIC_VECTOR (31 downto 0);
    out_stream_TVALID : OUT STD_LOGIC;
    out_stream_TREADY : IN STD_LOGIC;
    out_stream_TKEEP : OUT STD_LOGIC_VECTOR (3 downto 0);
    out_stream_TSTRB : OUT STD_LOGIC_VECTOR (3 downto 0);
    out_stream_TUSER : OUT STD_LOGIC_VECTOR (3 downto 0);
    out_stream_TLAST : OUT STD_LOGIC_VECTOR (0 downto 0);
    out_stream_TID : OUT STD_LOGIC_VECTOR (4 downto 0);
    out_stream_TDEST : OUT STD_LOGIC_VECTOR (4 downto 0) );
end;


architecture behav of Loop_3_proc is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (3 downto 0) := "0001";
    constant ap_ST_fsm_state2 : STD_LOGIC_VECTOR (3 downto 0) := "0010";
    constant ap_ST_fsm_state3 : STD_LOGIC_VECTOR (3 downto 0) := "0100";
    constant ap_ST_fsm_state4 : STD_LOGIC_VECTOR (3 downto 0) := "1000";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv2_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    constant ap_const_lv2_2 : STD_LOGIC_VECTOR (1 downto 0) := "10";
    constant ap_const_lv2_3 : STD_LOGIC_VECTOR (1 downto 0) := "11";
    constant ap_const_lv2_1 : STD_LOGIC_VECTOR (1 downto 0) := "01";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv3_1 : STD_LOGIC_VECTOR (2 downto 0) := "001";
    constant ap_const_lv3_0 : STD_LOGIC_VECTOR (2 downto 0) := "000";
    constant ap_const_lv5_0 : STD_LOGIC_VECTOR (4 downto 0) := "00000";
    constant ap_const_lv4_0 : STD_LOGIC_VECTOR (3 downto 0) := "0000";
    constant ap_const_lv4_F : STD_LOGIC_VECTOR (3 downto 0) := "1111";
    constant ap_const_lv3_4 : STD_LOGIC_VECTOR (2 downto 0) := "100";
    constant ap_const_lv3_2 : STD_LOGIC_VECTOR (2 downto 0) := "010";
    constant ap_const_boolean_1 : BOOLEAN := true;

    signal ap_done_reg : STD_LOGIC := '0';
    signal ap_CS_fsm : STD_LOGIC_VECTOR (3 downto 0) := "0001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal out_stream_data_V_1_data_out : STD_LOGIC_VECTOR (31 downto 0);
    signal out_stream_data_V_1_vld_in : STD_LOGIC;
    signal out_stream_data_V_1_vld_out : STD_LOGIC;
    signal out_stream_data_V_1_ack_in : STD_LOGIC;
    signal out_stream_data_V_1_ack_out : STD_LOGIC;
    signal out_stream_data_V_1_payload_A : STD_LOGIC_VECTOR (31 downto 0);
    signal out_stream_data_V_1_payload_B : STD_LOGIC_VECTOR (31 downto 0);
    signal out_stream_data_V_1_sel_rd : STD_LOGIC := '0';
    signal out_stream_data_V_1_sel_wr : STD_LOGIC := '0';
    signal out_stream_data_V_1_sel : STD_LOGIC;
    signal out_stream_data_V_1_load_A : STD_LOGIC;
    signal out_stream_data_V_1_load_B : STD_LOGIC;
    signal out_stream_data_V_1_state : STD_LOGIC_VECTOR (1 downto 0) := "00";
    signal out_stream_data_V_1_state_cmp_full : STD_LOGIC;
    signal out_stream_keep_V_1_data_out : STD_LOGIC_VECTOR (3 downto 0);
    signal out_stream_keep_V_1_vld_in : STD_LOGIC;
    signal out_stream_keep_V_1_vld_out : STD_LOGIC;
    signal out_stream_keep_V_1_ack_in : STD_LOGIC;
    signal out_stream_keep_V_1_ack_out : STD_LOGIC;
    signal out_stream_keep_V_1_sel_rd : STD_LOGIC := '0';
    signal out_stream_keep_V_1_sel : STD_LOGIC;
    signal out_stream_keep_V_1_state : STD_LOGIC_VECTOR (1 downto 0) := "00";
    signal out_stream_strb_V_1_data_out : STD_LOGIC_VECTOR (3 downto 0);
    signal out_stream_strb_V_1_vld_in : STD_LOGIC;
    signal out_stream_strb_V_1_vld_out : STD_LOGIC;
    signal out_stream_strb_V_1_ack_in : STD_LOGIC;
    signal out_stream_strb_V_1_ack_out : STD_LOGIC;
    signal out_stream_strb_V_1_sel_rd : STD_LOGIC := '0';
    signal out_stream_strb_V_1_sel : STD_LOGIC;
    signal out_stream_strb_V_1_state : STD_LOGIC_VECTOR (1 downto 0) := "00";
    signal out_stream_user_V_1_data_out : STD_LOGIC_VECTOR (3 downto 0);
    signal out_stream_user_V_1_vld_in : STD_LOGIC;
    signal out_stream_user_V_1_vld_out : STD_LOGIC;
    signal out_stream_user_V_1_ack_in : STD_LOGIC;
    signal out_stream_user_V_1_ack_out : STD_LOGIC;
    signal out_stream_user_V_1_sel_rd : STD_LOGIC := '0';
    signal out_stream_user_V_1_sel : STD_LOGIC;
    signal out_stream_user_V_1_state : STD_LOGIC_VECTOR (1 downto 0) := "00";
    signal out_stream_last_V_1_data_out : STD_LOGIC_VECTOR (0 downto 0);
    signal out_stream_last_V_1_vld_in : STD_LOGIC;
    signal out_stream_last_V_1_vld_out : STD_LOGIC;
    signal out_stream_last_V_1_ack_in : STD_LOGIC;
    signal out_stream_last_V_1_ack_out : STD_LOGIC;
    signal out_stream_last_V_1_payload_A : STD_LOGIC_VECTOR (0 downto 0);
    signal out_stream_last_V_1_payload_B : STD_LOGIC_VECTOR (0 downto 0);
    signal out_stream_last_V_1_sel_rd : STD_LOGIC := '0';
    signal out_stream_last_V_1_sel_wr : STD_LOGIC := '0';
    signal out_stream_last_V_1_sel : STD_LOGIC;
    signal out_stream_last_V_1_load_A : STD_LOGIC;
    signal out_stream_last_V_1_load_B : STD_LOGIC;
    signal out_stream_last_V_1_state : STD_LOGIC_VECTOR (1 downto 0) := "00";
    signal out_stream_last_V_1_state_cmp_full : STD_LOGIC;
    signal out_stream_id_V_1_data_out : STD_LOGIC_VECTOR (4 downto 0);
    signal out_stream_id_V_1_vld_in : STD_LOGIC;
    signal out_stream_id_V_1_vld_out : STD_LOGIC;
    signal out_stream_id_V_1_ack_in : STD_LOGIC;
    signal out_stream_id_V_1_ack_out : STD_LOGIC;
    signal out_stream_id_V_1_sel_rd : STD_LOGIC := '0';
    signal out_stream_id_V_1_sel : STD_LOGIC;
    signal out_stream_id_V_1_state : STD_LOGIC_VECTOR (1 downto 0) := "00";
    signal out_stream_dest_V_1_data_out : STD_LOGIC_VECTOR (4 downto 0);
    signal out_stream_dest_V_1_vld_in : STD_LOGIC;
    signal out_stream_dest_V_1_vld_out : STD_LOGIC;
    signal out_stream_dest_V_1_ack_in : STD_LOGIC;
    signal out_stream_dest_V_1_ack_out : STD_LOGIC;
    signal out_stream_dest_V_1_sel_rd : STD_LOGIC := '0';
    signal out_stream_dest_V_1_sel : STD_LOGIC;
    signal out_stream_dest_V_1_state : STD_LOGIC_VECTOR (1 downto 0) := "00";
    signal out_stream_TDATA_blk_n : STD_LOGIC;
    signal ap_CS_fsm_state3 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state3 : signal is "none";
    signal ap_CS_fsm_state4 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state4 : signal is "none";
    signal ap_CS_fsm_state2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state2 : signal is "none";
    signal ap_block_state2 : BOOLEAN;
    signal exitcond4_fu_114_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal last_assign_fu_125_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal last_assign_reg_150 : STD_LOGIC_VECTOR (0 downto 0);
    signal indvars_iv_next_fu_131_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal indvars_iv_next_reg_155 : STD_LOGIC_VECTOR (2 downto 0);
    signal val_assign_fu_137_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal indvars_iv_reg_90 : STD_LOGIC_VECTOR (2 downto 0);
    signal ap_block_state1 : BOOLEAN;
    signal k_1_reg_102 : STD_LOGIC_VECTOR (2 downto 0);
    signal k_1_cast3_fu_120_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_NS_fsm : STD_LOGIC_VECTOR (3 downto 0);


begin




    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_done_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_done_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_continue)) then 
                    ap_done_reg <= ap_const_logic_0;
                elsif (((ap_const_logic_1 = ap_CS_fsm_state2) and not(((ap_const_logic_0 = out_stream_data_V_1_ack_in) or (ap_const_logic_0 = out_stream_keep_V_1_ack_in) or (ap_const_logic_0 = out_stream_strb_V_1_ack_in) or (ap_const_logic_0 = out_stream_user_V_1_ack_in) or (ap_const_logic_0 = out_stream_last_V_1_ack_in) or (ap_const_logic_0 = out_stream_id_V_1_ack_in) or (ap_const_logic_0 = out_stream_dest_V_1_ack_in))) and (ap_const_lv1_1 = exitcond4_fu_114_p2))) then 
                    ap_done_reg <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    out_stream_data_V_1_sel_rd_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                out_stream_data_V_1_sel_rd <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = out_stream_data_V_1_ack_out) and (ap_const_logic_1 = out_stream_data_V_1_vld_out))) then 
                                        out_stream_data_V_1_sel_rd <= not(out_stream_data_V_1_sel_rd);
                end if; 
            end if;
        end if;
    end process;


    out_stream_data_V_1_sel_wr_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                out_stream_data_V_1_sel_wr <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = out_stream_data_V_1_vld_in) and (ap_const_logic_1 = out_stream_data_V_1_ack_in))) then 
                                        out_stream_data_V_1_sel_wr <= not(out_stream_data_V_1_sel_wr);
                end if; 
            end if;
        end if;
    end process;


    out_stream_data_V_1_state_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                out_stream_data_V_1_state <= ap_const_lv2_0;
            else
                if ((((ap_const_logic_0 = out_stream_data_V_1_vld_in) and (ap_const_logic_1 = out_stream_data_V_1_ack_out) and (out_stream_data_V_1_state = ap_const_lv2_3)) or ((ap_const_logic_0 = out_stream_data_V_1_vld_in) and (out_stream_data_V_1_state = ap_const_lv2_2)))) then 
                    out_stream_data_V_1_state <= ap_const_lv2_2;
                elsif ((((ap_const_logic_1 = out_stream_data_V_1_vld_in) and (ap_const_logic_0 = out_stream_data_V_1_ack_out) and (out_stream_data_V_1_state = ap_const_lv2_3)) or ((ap_const_logic_0 = out_stream_data_V_1_ack_out) and (out_stream_data_V_1_state = ap_const_lv2_1)))) then 
                    out_stream_data_V_1_state <= ap_const_lv2_1;
                elsif ((((ap_const_logic_1 = out_stream_data_V_1_vld_in) and (out_stream_data_V_1_state = ap_const_lv2_2)) or ((ap_const_logic_1 = out_stream_data_V_1_ack_out) and (out_stream_data_V_1_state = ap_const_lv2_1)) or ((out_stream_data_V_1_state = ap_const_lv2_3) and not(((ap_const_logic_1 = out_stream_data_V_1_vld_in) and (ap_const_logic_0 = out_stream_data_V_1_ack_out))) and not(((ap_const_logic_0 = out_stream_data_V_1_vld_in) and (ap_const_logic_1 = out_stream_data_V_1_ack_out)))))) then 
                    out_stream_data_V_1_state <= ap_const_lv2_3;
                else 
                    out_stream_data_V_1_state <= ap_const_lv2_2;
                end if; 
            end if;
        end if;
    end process;


    out_stream_dest_V_1_sel_rd_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                out_stream_dest_V_1_sel_rd <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = out_stream_dest_V_1_ack_out) and (ap_const_logic_1 = out_stream_dest_V_1_vld_out))) then 
                                        out_stream_dest_V_1_sel_rd <= not(out_stream_dest_V_1_sel_rd);
                end if; 
            end if;
        end if;
    end process;


    out_stream_dest_V_1_state_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                out_stream_dest_V_1_state <= ap_const_lv2_0;
            else
                if ((((ap_const_logic_0 = out_stream_dest_V_1_vld_in) and (ap_const_logic_1 = out_stream_dest_V_1_ack_out) and (ap_const_lv2_3 = out_stream_dest_V_1_state)) or ((ap_const_logic_0 = out_stream_dest_V_1_vld_in) and (ap_const_lv2_2 = out_stream_dest_V_1_state)))) then 
                    out_stream_dest_V_1_state <= ap_const_lv2_2;
                elsif ((((ap_const_logic_1 = out_stream_dest_V_1_vld_in) and (ap_const_logic_0 = out_stream_dest_V_1_ack_out) and (ap_const_lv2_3 = out_stream_dest_V_1_state)) or ((ap_const_logic_0 = out_stream_dest_V_1_ack_out) and (ap_const_lv2_1 = out_stream_dest_V_1_state)))) then 
                    out_stream_dest_V_1_state <= ap_const_lv2_1;
                elsif ((((ap_const_logic_1 = out_stream_dest_V_1_vld_in) and (ap_const_lv2_2 = out_stream_dest_V_1_state)) or ((ap_const_logic_1 = out_stream_dest_V_1_ack_out) and (ap_const_lv2_1 = out_stream_dest_V_1_state)) or ((ap_const_lv2_3 = out_stream_dest_V_1_state) and not(((ap_const_logic_1 = out_stream_dest_V_1_vld_in) and (ap_const_logic_0 = out_stream_dest_V_1_ack_out))) and not(((ap_const_logic_0 = out_stream_dest_V_1_vld_in) and (ap_const_logic_1 = out_stream_dest_V_1_ack_out)))))) then 
                    out_stream_dest_V_1_state <= ap_const_lv2_3;
                else 
                    out_stream_dest_V_1_state <= ap_const_lv2_2;
                end if; 
            end if;
        end if;
    end process;


    out_stream_id_V_1_sel_rd_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                out_stream_id_V_1_sel_rd <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = out_stream_id_V_1_ack_out) and (ap_const_logic_1 = out_stream_id_V_1_vld_out))) then 
                                        out_stream_id_V_1_sel_rd <= not(out_stream_id_V_1_sel_rd);
                end if; 
            end if;
        end if;
    end process;


    out_stream_id_V_1_state_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                out_stream_id_V_1_state <= ap_const_lv2_0;
            else
                if ((((ap_const_logic_0 = out_stream_id_V_1_vld_in) and (ap_const_logic_1 = out_stream_id_V_1_ack_out) and (ap_const_lv2_3 = out_stream_id_V_1_state)) or ((ap_const_logic_0 = out_stream_id_V_1_vld_in) and (ap_const_lv2_2 = out_stream_id_V_1_state)))) then 
                    out_stream_id_V_1_state <= ap_const_lv2_2;
                elsif ((((ap_const_logic_1 = out_stream_id_V_1_vld_in) and (ap_const_logic_0 = out_stream_id_V_1_ack_out) and (ap_const_lv2_3 = out_stream_id_V_1_state)) or ((ap_const_logic_0 = out_stream_id_V_1_ack_out) and (ap_const_lv2_1 = out_stream_id_V_1_state)))) then 
                    out_stream_id_V_1_state <= ap_const_lv2_1;
                elsif ((((ap_const_logic_1 = out_stream_id_V_1_vld_in) and (ap_const_lv2_2 = out_stream_id_V_1_state)) or ((ap_const_logic_1 = out_stream_id_V_1_ack_out) and (ap_const_lv2_1 = out_stream_id_V_1_state)) or ((ap_const_lv2_3 = out_stream_id_V_1_state) and not(((ap_const_logic_1 = out_stream_id_V_1_vld_in) and (ap_const_logic_0 = out_stream_id_V_1_ack_out))) and not(((ap_const_logic_0 = out_stream_id_V_1_vld_in) and (ap_const_logic_1 = out_stream_id_V_1_ack_out)))))) then 
                    out_stream_id_V_1_state <= ap_const_lv2_3;
                else 
                    out_stream_id_V_1_state <= ap_const_lv2_2;
                end if; 
            end if;
        end if;
    end process;


    out_stream_keep_V_1_sel_rd_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                out_stream_keep_V_1_sel_rd <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = out_stream_keep_V_1_ack_out) and (ap_const_logic_1 = out_stream_keep_V_1_vld_out))) then 
                                        out_stream_keep_V_1_sel_rd <= not(out_stream_keep_V_1_sel_rd);
                end if; 
            end if;
        end if;
    end process;


    out_stream_keep_V_1_state_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                out_stream_keep_V_1_state <= ap_const_lv2_0;
            else
                if ((((ap_const_logic_0 = out_stream_keep_V_1_vld_in) and (ap_const_logic_1 = out_stream_keep_V_1_ack_out) and (ap_const_lv2_3 = out_stream_keep_V_1_state)) or ((ap_const_logic_0 = out_stream_keep_V_1_vld_in) and (ap_const_lv2_2 = out_stream_keep_V_1_state)))) then 
                    out_stream_keep_V_1_state <= ap_const_lv2_2;
                elsif ((((ap_const_logic_1 = out_stream_keep_V_1_vld_in) and (ap_const_logic_0 = out_stream_keep_V_1_ack_out) and (ap_const_lv2_3 = out_stream_keep_V_1_state)) or ((ap_const_logic_0 = out_stream_keep_V_1_ack_out) and (ap_const_lv2_1 = out_stream_keep_V_1_state)))) then 
                    out_stream_keep_V_1_state <= ap_const_lv2_1;
                elsif ((((ap_const_logic_1 = out_stream_keep_V_1_vld_in) and (ap_const_lv2_2 = out_stream_keep_V_1_state)) or ((ap_const_logic_1 = out_stream_keep_V_1_ack_out) and (ap_const_lv2_1 = out_stream_keep_V_1_state)) or ((ap_const_lv2_3 = out_stream_keep_V_1_state) and not(((ap_const_logic_1 = out_stream_keep_V_1_vld_in) and (ap_const_logic_0 = out_stream_keep_V_1_ack_out))) and not(((ap_const_logic_0 = out_stream_keep_V_1_vld_in) and (ap_const_logic_1 = out_stream_keep_V_1_ack_out)))))) then 
                    out_stream_keep_V_1_state <= ap_const_lv2_3;
                else 
                    out_stream_keep_V_1_state <= ap_const_lv2_2;
                end if; 
            end if;
        end if;
    end process;


    out_stream_last_V_1_sel_rd_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                out_stream_last_V_1_sel_rd <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = out_stream_last_V_1_ack_out) and (ap_const_logic_1 = out_stream_last_V_1_vld_out))) then 
                                        out_stream_last_V_1_sel_rd <= not(out_stream_last_V_1_sel_rd);
                end if; 
            end if;
        end if;
    end process;


    out_stream_last_V_1_sel_wr_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                out_stream_last_V_1_sel_wr <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = out_stream_last_V_1_vld_in) and (ap_const_logic_1 = out_stream_last_V_1_ack_in))) then 
                                        out_stream_last_V_1_sel_wr <= not(out_stream_last_V_1_sel_wr);
                end if; 
            end if;
        end if;
    end process;


    out_stream_last_V_1_state_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                out_stream_last_V_1_state <= ap_const_lv2_0;
            else
                if ((((ap_const_logic_0 = out_stream_last_V_1_vld_in) and (ap_const_logic_1 = out_stream_last_V_1_ack_out) and (ap_const_lv2_3 = out_stream_last_V_1_state)) or ((ap_const_logic_0 = out_stream_last_V_1_vld_in) and (ap_const_lv2_2 = out_stream_last_V_1_state)))) then 
                    out_stream_last_V_1_state <= ap_const_lv2_2;
                elsif ((((ap_const_logic_1 = out_stream_last_V_1_vld_in) and (ap_const_logic_0 = out_stream_last_V_1_ack_out) and (ap_const_lv2_3 = out_stream_last_V_1_state)) or ((ap_const_logic_0 = out_stream_last_V_1_ack_out) and (ap_const_lv2_1 = out_stream_last_V_1_state)))) then 
                    out_stream_last_V_1_state <= ap_const_lv2_1;
                elsif ((((ap_const_logic_1 = out_stream_last_V_1_vld_in) and (ap_const_lv2_2 = out_stream_last_V_1_state)) or ((ap_const_logic_1 = out_stream_last_V_1_ack_out) and (ap_const_lv2_1 = out_stream_last_V_1_state)) or ((ap_const_lv2_3 = out_stream_last_V_1_state) and not(((ap_const_logic_1 = out_stream_last_V_1_vld_in) and (ap_const_logic_0 = out_stream_last_V_1_ack_out))) and not(((ap_const_logic_0 = out_stream_last_V_1_vld_in) and (ap_const_logic_1 = out_stream_last_V_1_ack_out)))))) then 
                    out_stream_last_V_1_state <= ap_const_lv2_3;
                else 
                    out_stream_last_V_1_state <= ap_const_lv2_2;
                end if; 
            end if;
        end if;
    end process;


    out_stream_strb_V_1_sel_rd_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                out_stream_strb_V_1_sel_rd <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = out_stream_strb_V_1_ack_out) and (ap_const_logic_1 = out_stream_strb_V_1_vld_out))) then 
                                        out_stream_strb_V_1_sel_rd <= not(out_stream_strb_V_1_sel_rd);
                end if; 
            end if;
        end if;
    end process;


    out_stream_strb_V_1_state_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                out_stream_strb_V_1_state <= ap_const_lv2_0;
            else
                if ((((ap_const_logic_0 = out_stream_strb_V_1_vld_in) and (ap_const_logic_1 = out_stream_strb_V_1_ack_out) and (ap_const_lv2_3 = out_stream_strb_V_1_state)) or ((ap_const_logic_0 = out_stream_strb_V_1_vld_in) and (ap_const_lv2_2 = out_stream_strb_V_1_state)))) then 
                    out_stream_strb_V_1_state <= ap_const_lv2_2;
                elsif ((((ap_const_logic_1 = out_stream_strb_V_1_vld_in) and (ap_const_logic_0 = out_stream_strb_V_1_ack_out) and (ap_const_lv2_3 = out_stream_strb_V_1_state)) or ((ap_const_logic_0 = out_stream_strb_V_1_ack_out) and (ap_const_lv2_1 = out_stream_strb_V_1_state)))) then 
                    out_stream_strb_V_1_state <= ap_const_lv2_1;
                elsif ((((ap_const_logic_1 = out_stream_strb_V_1_vld_in) and (ap_const_lv2_2 = out_stream_strb_V_1_state)) or ((ap_const_logic_1 = out_stream_strb_V_1_ack_out) and (ap_const_lv2_1 = out_stream_strb_V_1_state)) or ((ap_const_lv2_3 = out_stream_strb_V_1_state) and not(((ap_const_logic_1 = out_stream_strb_V_1_vld_in) and (ap_const_logic_0 = out_stream_strb_V_1_ack_out))) and not(((ap_const_logic_0 = out_stream_strb_V_1_vld_in) and (ap_const_logic_1 = out_stream_strb_V_1_ack_out)))))) then 
                    out_stream_strb_V_1_state <= ap_const_lv2_3;
                else 
                    out_stream_strb_V_1_state <= ap_const_lv2_2;
                end if; 
            end if;
        end if;
    end process;


    out_stream_user_V_1_sel_rd_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                out_stream_user_V_1_sel_rd <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = out_stream_user_V_1_ack_out) and (ap_const_logic_1 = out_stream_user_V_1_vld_out))) then 
                                        out_stream_user_V_1_sel_rd <= not(out_stream_user_V_1_sel_rd);
                end if; 
            end if;
        end if;
    end process;


    out_stream_user_V_1_state_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                out_stream_user_V_1_state <= ap_const_lv2_0;
            else
                if ((((ap_const_logic_0 = out_stream_user_V_1_vld_in) and (ap_const_logic_1 = out_stream_user_V_1_ack_out) and (ap_const_lv2_3 = out_stream_user_V_1_state)) or ((ap_const_logic_0 = out_stream_user_V_1_vld_in) and (ap_const_lv2_2 = out_stream_user_V_1_state)))) then 
                    out_stream_user_V_1_state <= ap_const_lv2_2;
                elsif ((((ap_const_logic_1 = out_stream_user_V_1_vld_in) and (ap_const_logic_0 = out_stream_user_V_1_ack_out) and (ap_const_lv2_3 = out_stream_user_V_1_state)) or ((ap_const_logic_0 = out_stream_user_V_1_ack_out) and (ap_const_lv2_1 = out_stream_user_V_1_state)))) then 
                    out_stream_user_V_1_state <= ap_const_lv2_1;
                elsif ((((ap_const_logic_1 = out_stream_user_V_1_vld_in) and (ap_const_lv2_2 = out_stream_user_V_1_state)) or ((ap_const_logic_1 = out_stream_user_V_1_ack_out) and (ap_const_lv2_1 = out_stream_user_V_1_state)) or ((ap_const_lv2_3 = out_stream_user_V_1_state) and not(((ap_const_logic_1 = out_stream_user_V_1_vld_in) and (ap_const_logic_0 = out_stream_user_V_1_ack_out))) and not(((ap_const_logic_0 = out_stream_user_V_1_vld_in) and (ap_const_logic_1 = out_stream_user_V_1_ack_out)))))) then 
                    out_stream_user_V_1_state <= ap_const_lv2_3;
                else 
                    out_stream_user_V_1_state <= ap_const_lv2_2;
                end if; 
            end if;
        end if;
    end process;


    indvars_iv_reg_90_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state1) and not(((ap_const_logic_0 = ap_start) or (ap_done_reg = ap_const_logic_1))))) then 
                indvars_iv_reg_90 <= ap_const_lv3_1;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state4) and (out_stream_dest_V_1_ack_in = ap_const_logic_1))) then 
                indvars_iv_reg_90 <= indvars_iv_next_reg_155;
            end if; 
        end if;
    end process;

    k_1_reg_102_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state1) and not(((ap_const_logic_0 = ap_start) or (ap_done_reg = ap_const_logic_1))))) then 
                k_1_reg_102 <= ap_const_lv3_0;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state4) and (out_stream_dest_V_1_ack_in = ap_const_logic_1))) then 
                k_1_reg_102 <= indvars_iv_reg_90;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state2) and not(((ap_const_logic_0 = out_stream_data_V_1_ack_in) or (ap_const_logic_0 = out_stream_keep_V_1_ack_in) or (ap_const_logic_0 = out_stream_strb_V_1_ack_in) or (ap_const_logic_0 = out_stream_user_V_1_ack_in) or (ap_const_logic_0 = out_stream_last_V_1_ack_in) or (ap_const_logic_0 = out_stream_id_V_1_ack_in) or (ap_const_logic_0 = out_stream_dest_V_1_ack_in))) and (ap_const_lv1_0 = exitcond4_fu_114_p2))) then
                indvars_iv_next_reg_155 <= indvars_iv_next_fu_131_p2;
                last_assign_reg_150 <= last_assign_fu_125_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = out_stream_data_V_1_load_A)) then
                out_stream_data_V_1_payload_A <= val_assign_fu_137_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = out_stream_data_V_1_load_B)) then
                out_stream_data_V_1_payload_B <= val_assign_fu_137_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = out_stream_last_V_1_load_A)) then
                out_stream_last_V_1_payload_A <= last_assign_reg_150;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = out_stream_last_V_1_load_B)) then
                out_stream_last_V_1_payload_B <= last_assign_reg_150;
            end if;
        end if;
    end process;

    ap_NS_fsm_assign_proc : process (ap_start, ap_done_reg, ap_CS_fsm, ap_CS_fsm_state1, out_stream_data_V_1_ack_in, out_stream_keep_V_1_ack_in, out_stream_strb_V_1_ack_in, out_stream_user_V_1_ack_in, out_stream_last_V_1_ack_in, out_stream_id_V_1_ack_in, out_stream_dest_V_1_ack_in, ap_CS_fsm_state3, ap_CS_fsm_state4, ap_CS_fsm_state2, exitcond4_fu_114_p2)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state1) and not(((ap_const_logic_0 = ap_start) or (ap_done_reg = ap_const_logic_1))))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_state2 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state2) and not(((ap_const_logic_0 = out_stream_data_V_1_ack_in) or (ap_const_logic_0 = out_stream_keep_V_1_ack_in) or (ap_const_logic_0 = out_stream_strb_V_1_ack_in) or (ap_const_logic_0 = out_stream_user_V_1_ack_in) or (ap_const_logic_0 = out_stream_last_V_1_ack_in) or (ap_const_logic_0 = out_stream_id_V_1_ack_in) or (ap_const_logic_0 = out_stream_dest_V_1_ack_in))) and (ap_const_lv1_1 = exitcond4_fu_114_p2))) then
                    ap_NS_fsm <= ap_ST_fsm_state1;
                elsif (((ap_const_logic_1 = ap_CS_fsm_state2) and not(((ap_const_logic_0 = out_stream_data_V_1_ack_in) or (ap_const_logic_0 = out_stream_keep_V_1_ack_in) or (ap_const_logic_0 = out_stream_strb_V_1_ack_in) or (ap_const_logic_0 = out_stream_user_V_1_ack_in) or (ap_const_logic_0 = out_stream_last_V_1_ack_in) or (ap_const_logic_0 = out_stream_id_V_1_ack_in) or (ap_const_logic_0 = out_stream_dest_V_1_ack_in))) and (ap_const_lv1_0 = exitcond4_fu_114_p2))) then
                    ap_NS_fsm <= ap_ST_fsm_state3;
                else
                    ap_NS_fsm <= ap_ST_fsm_state2;
                end if;
            when ap_ST_fsm_state3 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state3) and (out_stream_dest_V_1_ack_in = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state4;
                else
                    ap_NS_fsm <= ap_ST_fsm_state3;
                end if;
            when ap_ST_fsm_state4 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state4) and (out_stream_dest_V_1_ack_in = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state4;
                end if;
            when others =>  
                ap_NS_fsm <= "XXXX";
        end case;
    end process;
    X_OUT_0_address0 <= k_1_cast3_fu_120_p1(2 - 1 downto 0);

    X_OUT_0_ce0_assign_proc : process(out_stream_data_V_1_ack_in, out_stream_keep_V_1_ack_in, out_stream_strb_V_1_ack_in, out_stream_user_V_1_ack_in, out_stream_last_V_1_ack_in, out_stream_id_V_1_ack_in, out_stream_dest_V_1_ack_in, ap_CS_fsm_state2)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state2) and not(((ap_const_logic_0 = out_stream_data_V_1_ack_in) or (ap_const_logic_0 = out_stream_keep_V_1_ack_in) or (ap_const_logic_0 = out_stream_strb_V_1_ack_in) or (ap_const_logic_0 = out_stream_user_V_1_ack_in) or (ap_const_logic_0 = out_stream_last_V_1_ack_in) or (ap_const_logic_0 = out_stream_id_V_1_ack_in) or (ap_const_logic_0 = out_stream_dest_V_1_ack_in))))) then 
            X_OUT_0_ce0 <= ap_const_logic_1;
        else 
            X_OUT_0_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state2 <= ap_CS_fsm(1);
    ap_CS_fsm_state3 <= ap_CS_fsm(2);
    ap_CS_fsm_state4 <= ap_CS_fsm(3);

    ap_block_state1_assign_proc : process(ap_start, ap_done_reg)
    begin
                ap_block_state1 <= ((ap_const_logic_0 = ap_start) or (ap_done_reg = ap_const_logic_1));
    end process;


    ap_block_state2_assign_proc : process(out_stream_data_V_1_ack_in, out_stream_keep_V_1_ack_in, out_stream_strb_V_1_ack_in, out_stream_user_V_1_ack_in, out_stream_last_V_1_ack_in, out_stream_id_V_1_ack_in, out_stream_dest_V_1_ack_in)
    begin
                ap_block_state2 <= ((ap_const_logic_0 = out_stream_data_V_1_ack_in) or (ap_const_logic_0 = out_stream_keep_V_1_ack_in) or (ap_const_logic_0 = out_stream_strb_V_1_ack_in) or (ap_const_logic_0 = out_stream_user_V_1_ack_in) or (ap_const_logic_0 = out_stream_last_V_1_ack_in) or (ap_const_logic_0 = out_stream_id_V_1_ack_in) or (ap_const_logic_0 = out_stream_dest_V_1_ack_in));
    end process;


    ap_done_assign_proc : process(ap_done_reg, out_stream_data_V_1_ack_in, out_stream_keep_V_1_ack_in, out_stream_strb_V_1_ack_in, out_stream_user_V_1_ack_in, out_stream_last_V_1_ack_in, out_stream_id_V_1_ack_in, out_stream_dest_V_1_ack_in, ap_CS_fsm_state2, exitcond4_fu_114_p2)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state2) and not(((ap_const_logic_0 = out_stream_data_V_1_ack_in) or (ap_const_logic_0 = out_stream_keep_V_1_ack_in) or (ap_const_logic_0 = out_stream_strb_V_1_ack_in) or (ap_const_logic_0 = out_stream_user_V_1_ack_in) or (ap_const_logic_0 = out_stream_last_V_1_ack_in) or (ap_const_logic_0 = out_stream_id_V_1_ack_in) or (ap_const_logic_0 = out_stream_dest_V_1_ack_in))) and (ap_const_lv1_1 = exitcond4_fu_114_p2))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_done_reg;
        end if; 
    end process;


    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_const_logic_0 = ap_start) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_ready_assign_proc : process(out_stream_data_V_1_ack_in, out_stream_keep_V_1_ack_in, out_stream_strb_V_1_ack_in, out_stream_user_V_1_ack_in, out_stream_last_V_1_ack_in, out_stream_id_V_1_ack_in, out_stream_dest_V_1_ack_in, ap_CS_fsm_state2, exitcond4_fu_114_p2)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state2) and not(((ap_const_logic_0 = out_stream_data_V_1_ack_in) or (ap_const_logic_0 = out_stream_keep_V_1_ack_in) or (ap_const_logic_0 = out_stream_strb_V_1_ack_in) or (ap_const_logic_0 = out_stream_user_V_1_ack_in) or (ap_const_logic_0 = out_stream_last_V_1_ack_in) or (ap_const_logic_0 = out_stream_id_V_1_ack_in) or (ap_const_logic_0 = out_stream_dest_V_1_ack_in))) and (ap_const_lv1_1 = exitcond4_fu_114_p2))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;

    exitcond4_fu_114_p2 <= "1" when (indvars_iv_reg_90 = ap_const_lv3_4) else "0";
    indvars_iv_next_fu_131_p2 <= std_logic_vector(unsigned(indvars_iv_reg_90) + unsigned(ap_const_lv3_1));
    k_1_cast3_fu_120_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(k_1_reg_102),32));
    last_assign_fu_125_p2 <= "1" when (k_1_reg_102 = ap_const_lv3_2) else "0";
    out_stream_TDATA <= out_stream_data_V_1_data_out;

    out_stream_TDATA_blk_n_assign_proc : process(out_stream_data_V_1_state, ap_CS_fsm_state3, ap_CS_fsm_state4)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state3) or (ap_const_logic_1 = ap_CS_fsm_state4))) then 
            out_stream_TDATA_blk_n <= out_stream_data_V_1_state(1);
        else 
            out_stream_TDATA_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    out_stream_TDEST <= out_stream_dest_V_1_data_out;
    out_stream_TID <= out_stream_id_V_1_data_out;
    out_stream_TKEEP <= out_stream_keep_V_1_data_out;
    out_stream_TLAST <= out_stream_last_V_1_data_out;
    out_stream_TSTRB <= out_stream_strb_V_1_data_out;
    out_stream_TUSER <= out_stream_user_V_1_data_out;
    out_stream_TVALID <= out_stream_dest_V_1_state(0);
    out_stream_data_V_1_ack_in <= out_stream_data_V_1_state(1);
    out_stream_data_V_1_ack_out <= out_stream_TREADY;

    out_stream_data_V_1_data_out_assign_proc : process(out_stream_data_V_1_payload_A, out_stream_data_V_1_payload_B, out_stream_data_V_1_sel)
    begin
        if ((ap_const_logic_1 = out_stream_data_V_1_sel)) then 
            out_stream_data_V_1_data_out <= out_stream_data_V_1_payload_B;
        else 
            out_stream_data_V_1_data_out <= out_stream_data_V_1_payload_A;
        end if; 
    end process;

    out_stream_data_V_1_load_A <= (out_stream_data_V_1_state_cmp_full and not(out_stream_data_V_1_sel_wr));
    out_stream_data_V_1_load_B <= (out_stream_data_V_1_sel_wr and out_stream_data_V_1_state_cmp_full);
    out_stream_data_V_1_sel <= out_stream_data_V_1_sel_rd;
    out_stream_data_V_1_state_cmp_full <= '0' when (out_stream_data_V_1_state = ap_const_lv2_1) else '1';

    out_stream_data_V_1_vld_in_assign_proc : process(out_stream_dest_V_1_ack_in, ap_CS_fsm_state3)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state3) and (out_stream_dest_V_1_ack_in = ap_const_logic_1))) then 
            out_stream_data_V_1_vld_in <= ap_const_logic_1;
        else 
            out_stream_data_V_1_vld_in <= ap_const_logic_0;
        end if; 
    end process;

    out_stream_data_V_1_vld_out <= out_stream_data_V_1_state(0);
    out_stream_dest_V_1_ack_in <= out_stream_dest_V_1_state(1);
    out_stream_dest_V_1_ack_out <= out_stream_TREADY;
    out_stream_dest_V_1_data_out <= ap_const_lv5_0;
    out_stream_dest_V_1_sel <= out_stream_dest_V_1_sel_rd;

    out_stream_dest_V_1_vld_in_assign_proc : process(out_stream_dest_V_1_ack_in, ap_CS_fsm_state3)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state3) and (out_stream_dest_V_1_ack_in = ap_const_logic_1))) then 
            out_stream_dest_V_1_vld_in <= ap_const_logic_1;
        else 
            out_stream_dest_V_1_vld_in <= ap_const_logic_0;
        end if; 
    end process;

    out_stream_dest_V_1_vld_out <= out_stream_dest_V_1_state(0);
    out_stream_id_V_1_ack_in <= out_stream_id_V_1_state(1);
    out_stream_id_V_1_ack_out <= out_stream_TREADY;
    out_stream_id_V_1_data_out <= ap_const_lv5_0;
    out_stream_id_V_1_sel <= out_stream_id_V_1_sel_rd;

    out_stream_id_V_1_vld_in_assign_proc : process(out_stream_dest_V_1_ack_in, ap_CS_fsm_state3)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state3) and (out_stream_dest_V_1_ack_in = ap_const_logic_1))) then 
            out_stream_id_V_1_vld_in <= ap_const_logic_1;
        else 
            out_stream_id_V_1_vld_in <= ap_const_logic_0;
        end if; 
    end process;

    out_stream_id_V_1_vld_out <= out_stream_id_V_1_state(0);
    out_stream_keep_V_1_ack_in <= out_stream_keep_V_1_state(1);
    out_stream_keep_V_1_ack_out <= out_stream_TREADY;
    out_stream_keep_V_1_data_out <= ap_const_lv4_F;
    out_stream_keep_V_1_sel <= out_stream_keep_V_1_sel_rd;

    out_stream_keep_V_1_vld_in_assign_proc : process(out_stream_dest_V_1_ack_in, ap_CS_fsm_state3)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state3) and (out_stream_dest_V_1_ack_in = ap_const_logic_1))) then 
            out_stream_keep_V_1_vld_in <= ap_const_logic_1;
        else 
            out_stream_keep_V_1_vld_in <= ap_const_logic_0;
        end if; 
    end process;

    out_stream_keep_V_1_vld_out <= out_stream_keep_V_1_state(0);
    out_stream_last_V_1_ack_in <= out_stream_last_V_1_state(1);
    out_stream_last_V_1_ack_out <= out_stream_TREADY;

    out_stream_last_V_1_data_out_assign_proc : process(out_stream_last_V_1_payload_A, out_stream_last_V_1_payload_B, out_stream_last_V_1_sel)
    begin
        if ((ap_const_logic_1 = out_stream_last_V_1_sel)) then 
            out_stream_last_V_1_data_out <= out_stream_last_V_1_payload_B;
        else 
            out_stream_last_V_1_data_out <= out_stream_last_V_1_payload_A;
        end if; 
    end process;

    out_stream_last_V_1_load_A <= (out_stream_last_V_1_state_cmp_full and not(out_stream_last_V_1_sel_wr));
    out_stream_last_V_1_load_B <= (out_stream_last_V_1_sel_wr and out_stream_last_V_1_state_cmp_full);
    out_stream_last_V_1_sel <= out_stream_last_V_1_sel_rd;
    out_stream_last_V_1_state_cmp_full <= '0' when (out_stream_last_V_1_state = ap_const_lv2_1) else '1';

    out_stream_last_V_1_vld_in_assign_proc : process(out_stream_dest_V_1_ack_in, ap_CS_fsm_state3)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state3) and (out_stream_dest_V_1_ack_in = ap_const_logic_1))) then 
            out_stream_last_V_1_vld_in <= ap_const_logic_1;
        else 
            out_stream_last_V_1_vld_in <= ap_const_logic_0;
        end if; 
    end process;

    out_stream_last_V_1_vld_out <= out_stream_last_V_1_state(0);
    out_stream_strb_V_1_ack_in <= out_stream_strb_V_1_state(1);
    out_stream_strb_V_1_ack_out <= out_stream_TREADY;
    out_stream_strb_V_1_data_out <= ap_const_lv4_F;
    out_stream_strb_V_1_sel <= out_stream_strb_V_1_sel_rd;

    out_stream_strb_V_1_vld_in_assign_proc : process(out_stream_dest_V_1_ack_in, ap_CS_fsm_state3)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state3) and (out_stream_dest_V_1_ack_in = ap_const_logic_1))) then 
            out_stream_strb_V_1_vld_in <= ap_const_logic_1;
        else 
            out_stream_strb_V_1_vld_in <= ap_const_logic_0;
        end if; 
    end process;

    out_stream_strb_V_1_vld_out <= out_stream_strb_V_1_state(0);
    out_stream_user_V_1_ack_in <= out_stream_user_V_1_state(1);
    out_stream_user_V_1_ack_out <= out_stream_TREADY;
    out_stream_user_V_1_data_out <= ap_const_lv4_0;
    out_stream_user_V_1_sel <= out_stream_user_V_1_sel_rd;

    out_stream_user_V_1_vld_in_assign_proc : process(out_stream_dest_V_1_ack_in, ap_CS_fsm_state3)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state3) and (out_stream_dest_V_1_ack_in = ap_const_logic_1))) then 
            out_stream_user_V_1_vld_in <= ap_const_logic_1;
        else 
            out_stream_user_V_1_vld_in <= ap_const_logic_0;
        end if; 
    end process;

    out_stream_user_V_1_vld_out <= out_stream_user_V_1_state(0);
    val_assign_fu_137_p1 <= X_OUT_0_q0;
end behav;
