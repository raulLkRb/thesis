-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
-- Version: 2017.1
-- Copyright (C) 1986-2017 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity wrapped_mmult_hw is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst_n : IN STD_LOGIC;
    in_stream_TDATA : IN STD_LOGIC_VECTOR (31 downto 0);
    in_stream_TKEEP : IN STD_LOGIC_VECTOR (3 downto 0);
    in_stream_TSTRB : IN STD_LOGIC_VECTOR (3 downto 0);
    in_stream_TUSER : IN STD_LOGIC_VECTOR (3 downto 0);
    in_stream_TLAST : IN STD_LOGIC_VECTOR (0 downto 0);
    in_stream_TID : IN STD_LOGIC_VECTOR (4 downto 0);
    in_stream_TDEST : IN STD_LOGIC_VECTOR (4 downto 0);
    out_stream_TDATA : OUT STD_LOGIC_VECTOR (31 downto 0);
    out_stream_TKEEP : OUT STD_LOGIC_VECTOR (3 downto 0);
    out_stream_TSTRB : OUT STD_LOGIC_VECTOR (3 downto 0);
    out_stream_TUSER : OUT STD_LOGIC_VECTOR (3 downto 0);
    out_stream_TLAST : OUT STD_LOGIC_VECTOR (0 downto 0);
    out_stream_TID : OUT STD_LOGIC_VECTOR (4 downto 0);
    out_stream_TDEST : OUT STD_LOGIC_VECTOR (4 downto 0);
    in_stream_TVALID : IN STD_LOGIC;
    in_stream_TREADY : OUT STD_LOGIC;
    out_stream_TVALID : OUT STD_LOGIC;
    out_stream_TREADY : IN STD_LOGIC );
end;


architecture behav of wrapped_mmult_hw is 
    attribute CORE_GENERATION_INFO : STRING;
    attribute CORE_GENERATION_INFO of behav : architecture is
    "wrapped_mmult_hw,hls_ip_2017_1,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xc7z020clg484-1,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=dataflow,HLS_SYN_CLOCK=8.735000,HLS_SYN_LAT=364,HLS_SYN_TPT=272,HLS_SYN_MEM=4,HLS_SYN_DSP=7,HLS_SYN_FF=1996,HLS_SYN_LUT=3016}";
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv4_0 : STD_LOGIC_VECTOR (3 downto 0) := "0000";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv5_0 : STD_LOGIC_VECTOR (4 downto 0) := "00000";
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_const_lv3_0 : STD_LOGIC_VECTOR (2 downto 0) := "000";
    constant ap_const_lv3_1 : STD_LOGIC_VECTOR (2 downto 0) := "001";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";

    signal ap_rst_n_inv : STD_LOGIC;
    signal dato_V_i_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal dato_V_t_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal X_MAT_0_i_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal X_MAT_0_t_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal X_OUT_0_i_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal X_OUT_0_t_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal read_data_U0_ap_start : STD_LOGIC;
    signal read_data_U0_ap_done : STD_LOGIC;
    signal read_data_U0_ap_continue : STD_LOGIC;
    signal read_data_U0_ap_idle : STD_LOGIC;
    signal read_data_U0_ap_ready : STD_LOGIC;
    signal read_data_U0_in_stream_TREADY : STD_LOGIC;
    signal read_data_U0_buf_V_address0 : STD_LOGIC_VECTOR (1 downto 0);
    signal read_data_U0_buf_V_ce0 : STD_LOGIC;
    signal read_data_U0_buf_V_we0 : STD_LOGIC;
    signal read_data_U0_buf_V_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_channel_done_dato_V : STD_LOGIC;
    signal read_data_U0_buf_V_full_n : STD_LOGIC;
    signal Block_preheader117_U0_ap_start : STD_LOGIC;
    signal Block_preheader117_U0_ap_done : STD_LOGIC;
    signal Block_preheader117_U0_ap_continue : STD_LOGIC;
    signal Block_preheader117_U0_ap_idle : STD_LOGIC;
    signal Block_preheader117_U0_ap_ready : STD_LOGIC;
    signal Block_preheader117_U0_dato_V_address0 : STD_LOGIC_VECTOR (1 downto 0);
    signal Block_preheader117_U0_dato_V_ce0 : STD_LOGIC;
    signal Block_preheader117_U0_X_MAT_0_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal Block_preheader117_U0_X_MAT_0_ce0 : STD_LOGIC;
    signal Block_preheader117_U0_X_MAT_0_we0 : STD_LOGIC;
    signal Block_preheader117_U0_X_MAT_0_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal Block_preheader117_U0_X_MAT_0_address1 : STD_LOGIC_VECTOR (2 downto 0);
    signal Block_preheader117_U0_X_MAT_0_ce1 : STD_LOGIC;
    signal Block_preheader117_U0_X_MAT_0_we1 : STD_LOGIC;
    signal Block_preheader117_U0_X_MAT_0_d1 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_channel_done_X_MAT_0 : STD_LOGIC;
    signal Block_preheader117_U0_X_MAT_0_full_n : STD_LOGIC;
    signal Loop_L1_proc_U0_ap_start : STD_LOGIC;
    signal Loop_L1_proc_U0_ap_done : STD_LOGIC;
    signal Loop_L1_proc_U0_ap_continue : STD_LOGIC;
    signal Loop_L1_proc_U0_ap_idle : STD_LOGIC;
    signal Loop_L1_proc_U0_ap_ready : STD_LOGIC;
    signal Loop_L1_proc_U0_X_OUT_0_address0 : STD_LOGIC_VECTOR (1 downto 0);
    signal Loop_L1_proc_U0_X_OUT_0_ce0 : STD_LOGIC;
    signal Loop_L1_proc_U0_X_OUT_0_we0 : STD_LOGIC;
    signal Loop_L1_proc_U0_X_OUT_0_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal Loop_L1_proc_U0_X_MAT_0_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal Loop_L1_proc_U0_X_MAT_0_ce0 : STD_LOGIC;
    signal ap_channel_done_X_OUT_0 : STD_LOGIC;
    signal Loop_L1_proc_U0_X_OUT_0_full_n : STD_LOGIC;
    signal Loop_3_proc_U0_ap_start : STD_LOGIC;
    signal Loop_3_proc_U0_ap_done : STD_LOGIC;
    signal Loop_3_proc_U0_ap_continue : STD_LOGIC;
    signal Loop_3_proc_U0_ap_idle : STD_LOGIC;
    signal Loop_3_proc_U0_ap_ready : STD_LOGIC;
    signal Loop_3_proc_U0_X_OUT_0_address0 : STD_LOGIC_VECTOR (1 downto 0);
    signal Loop_3_proc_U0_X_OUT_0_ce0 : STD_LOGIC;
    signal Loop_3_proc_U0_out_stream_TDATA : STD_LOGIC_VECTOR (31 downto 0);
    signal Loop_3_proc_U0_out_stream_TVALID : STD_LOGIC;
    signal Loop_3_proc_U0_out_stream_TKEEP : STD_LOGIC_VECTOR (3 downto 0);
    signal Loop_3_proc_U0_out_stream_TSTRB : STD_LOGIC_VECTOR (3 downto 0);
    signal Loop_3_proc_U0_out_stream_TUSER : STD_LOGIC_VECTOR (3 downto 0);
    signal Loop_3_proc_U0_out_stream_TLAST : STD_LOGIC_VECTOR (0 downto 0);
    signal Loop_3_proc_U0_out_stream_TID : STD_LOGIC_VECTOR (4 downto 0);
    signal Loop_3_proc_U0_out_stream_TDEST : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_sync_continue : STD_LOGIC;
    signal dato_V_i_full_n : STD_LOGIC;
    signal dato_V_t_empty_n : STD_LOGIC;
    signal X_MAT_0_i_full_n : STD_LOGIC;
    signal X_MAT_0_t_empty_n : STD_LOGIC;
    signal X_OUT_0_i_full_n : STD_LOGIC;
    signal X_OUT_0_t_empty_n : STD_LOGIC;
    signal read_data_U0_start_full_n : STD_LOGIC;
    signal read_data_U0_start_write : STD_LOGIC;
    signal Block_preheader117_U0_start_full_n : STD_LOGIC;
    signal Block_preheader117_U0_start_write : STD_LOGIC;
    signal Loop_L1_proc_U0_start_full_n : STD_LOGIC;
    signal Loop_L1_proc_U0_start_write : STD_LOGIC;
    signal Loop_3_proc_U0_start_full_n : STD_LOGIC;
    signal Loop_3_proc_U0_start_write : STD_LOGIC;

    component read_data IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        in_stream_TDATA : IN STD_LOGIC_VECTOR (31 downto 0);
        in_stream_TVALID : IN STD_LOGIC;
        in_stream_TREADY : OUT STD_LOGIC;
        in_stream_TKEEP : IN STD_LOGIC_VECTOR (3 downto 0);
        in_stream_TSTRB : IN STD_LOGIC_VECTOR (3 downto 0);
        in_stream_TUSER : IN STD_LOGIC_VECTOR (3 downto 0);
        in_stream_TLAST : IN STD_LOGIC_VECTOR (0 downto 0);
        in_stream_TID : IN STD_LOGIC_VECTOR (4 downto 0);
        in_stream_TDEST : IN STD_LOGIC_VECTOR (4 downto 0);
        buf_V_address0 : OUT STD_LOGIC_VECTOR (1 downto 0);
        buf_V_ce0 : OUT STD_LOGIC;
        buf_V_we0 : OUT STD_LOGIC;
        buf_V_d0 : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component Block_preheader117_s IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        dato_V_address0 : OUT STD_LOGIC_VECTOR (1 downto 0);
        dato_V_ce0 : OUT STD_LOGIC;
        dato_V_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        X_MAT_0_address0 : OUT STD_LOGIC_VECTOR (2 downto 0);
        X_MAT_0_ce0 : OUT STD_LOGIC;
        X_MAT_0_we0 : OUT STD_LOGIC;
        X_MAT_0_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        X_MAT_0_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        X_MAT_0_address1 : OUT STD_LOGIC_VECTOR (2 downto 0);
        X_MAT_0_ce1 : OUT STD_LOGIC;
        X_MAT_0_we1 : OUT STD_LOGIC;
        X_MAT_0_d1 : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component Loop_L1_proc IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        X_OUT_0_address0 : OUT STD_LOGIC_VECTOR (1 downto 0);
        X_OUT_0_ce0 : OUT STD_LOGIC;
        X_OUT_0_we0 : OUT STD_LOGIC;
        X_OUT_0_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        X_MAT_0_address0 : OUT STD_LOGIC_VECTOR (2 downto 0);
        X_MAT_0_ce0 : OUT STD_LOGIC;
        X_MAT_0_q0 : IN STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component Loop_3_proc IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        X_OUT_0_address0 : OUT STD_LOGIC_VECTOR (1 downto 0);
        X_OUT_0_ce0 : OUT STD_LOGIC;
        X_OUT_0_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        out_stream_TDATA : OUT STD_LOGIC_VECTOR (31 downto 0);
        out_stream_TVALID : OUT STD_LOGIC;
        out_stream_TREADY : IN STD_LOGIC;
        out_stream_TKEEP : OUT STD_LOGIC_VECTOR (3 downto 0);
        out_stream_TSTRB : OUT STD_LOGIC_VECTOR (3 downto 0);
        out_stream_TUSER : OUT STD_LOGIC_VECTOR (3 downto 0);
        out_stream_TLAST : OUT STD_LOGIC_VECTOR (0 downto 0);
        out_stream_TID : OUT STD_LOGIC_VECTOR (4 downto 0);
        out_stream_TDEST : OUT STD_LOGIC_VECTOR (4 downto 0) );
    end component;


    component wrapped_mmult_hw_g8j IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        i_address0 : IN STD_LOGIC_VECTOR (1 downto 0);
        i_ce0 : IN STD_LOGIC;
        i_we0 : IN STD_LOGIC;
        i_d0 : IN STD_LOGIC_VECTOR (31 downto 0);
        i_q0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        t_address0 : IN STD_LOGIC_VECTOR (1 downto 0);
        t_ce0 : IN STD_LOGIC;
        t_we0 : IN STD_LOGIC;
        t_d0 : IN STD_LOGIC_VECTOR (31 downto 0);
        t_q0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        i_ce : IN STD_LOGIC;
        t_ce : IN STD_LOGIC;
        i_full_n : OUT STD_LOGIC;
        i_write : IN STD_LOGIC;
        t_empty_n : OUT STD_LOGIC;
        t_read : IN STD_LOGIC );
    end component;


    component wrapped_mmult_hw_hbi IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        i_address0 : IN STD_LOGIC_VECTOR (2 downto 0);
        i_ce0 : IN STD_LOGIC;
        i_we0 : IN STD_LOGIC;
        i_d0 : IN STD_LOGIC_VECTOR (31 downto 0);
        i_q0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        i_address1 : IN STD_LOGIC_VECTOR (2 downto 0);
        i_ce1 : IN STD_LOGIC;
        i_we1 : IN STD_LOGIC;
        i_d1 : IN STD_LOGIC_VECTOR (31 downto 0);
        t_address0 : IN STD_LOGIC_VECTOR (2 downto 0);
        t_ce0 : IN STD_LOGIC;
        t_we0 : IN STD_LOGIC;
        t_d0 : IN STD_LOGIC_VECTOR (31 downto 0);
        t_q0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        t_address1 : IN STD_LOGIC_VECTOR (2 downto 0);
        t_ce1 : IN STD_LOGIC;
        t_we1 : IN STD_LOGIC;
        t_d1 : IN STD_LOGIC_VECTOR (31 downto 0);
        i_ce : IN STD_LOGIC;
        t_ce : IN STD_LOGIC;
        i_full_n : OUT STD_LOGIC;
        i_write : IN STD_LOGIC;
        t_empty_n : OUT STD_LOGIC;
        t_read : IN STD_LOGIC );
    end component;


    component wrapped_mmult_hw_ibs IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        i_address0 : IN STD_LOGIC_VECTOR (1 downto 0);
        i_ce0 : IN STD_LOGIC;
        i_we0 : IN STD_LOGIC;
        i_d0 : IN STD_LOGIC_VECTOR (31 downto 0);
        i_q0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        t_address0 : IN STD_LOGIC_VECTOR (1 downto 0);
        t_ce0 : IN STD_LOGIC;
        t_we0 : IN STD_LOGIC;
        t_d0 : IN STD_LOGIC_VECTOR (31 downto 0);
        t_q0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        i_ce : IN STD_LOGIC;
        t_ce : IN STD_LOGIC;
        i_full_n : OUT STD_LOGIC;
        i_write : IN STD_LOGIC;
        t_empty_n : OUT STD_LOGIC;
        t_read : IN STD_LOGIC );
    end component;



begin
    dato_V_U : component wrapped_mmult_hw_g8j
    generic map (
        DataWidth => 32,
        AddressRange => 4,
        AddressWidth => 2)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        i_address0 => read_data_U0_buf_V_address0,
        i_ce0 => read_data_U0_buf_V_ce0,
        i_we0 => read_data_U0_buf_V_we0,
        i_d0 => read_data_U0_buf_V_d0,
        i_q0 => dato_V_i_q0,
        t_address0 => Block_preheader117_U0_dato_V_address0,
        t_ce0 => Block_preheader117_U0_dato_V_ce0,
        t_we0 => ap_const_logic_0,
        t_d0 => ap_const_lv32_0,
        t_q0 => dato_V_t_q0,
        i_ce => ap_const_logic_1,
        t_ce => ap_const_logic_1,
        i_full_n => dato_V_i_full_n,
        i_write => read_data_U0_ap_done,
        t_empty_n => dato_V_t_empty_n,
        t_read => Block_preheader117_U0_ap_ready);

    X_MAT_0_U : component wrapped_mmult_hw_hbi
    generic map (
        DataWidth => 32,
        AddressRange => 8,
        AddressWidth => 3)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        i_address0 => Block_preheader117_U0_X_MAT_0_address0,
        i_ce0 => Block_preheader117_U0_X_MAT_0_ce0,
        i_we0 => Block_preheader117_U0_X_MAT_0_we0,
        i_d0 => Block_preheader117_U0_X_MAT_0_d0,
        i_q0 => X_MAT_0_i_q0,
        i_address1 => Block_preheader117_U0_X_MAT_0_address1,
        i_ce1 => Block_preheader117_U0_X_MAT_0_ce1,
        i_we1 => Block_preheader117_U0_X_MAT_0_we1,
        i_d1 => Block_preheader117_U0_X_MAT_0_d1,
        t_address0 => Loop_L1_proc_U0_X_MAT_0_address0,
        t_ce0 => Loop_L1_proc_U0_X_MAT_0_ce0,
        t_we0 => ap_const_logic_0,
        t_d0 => ap_const_lv32_0,
        t_q0 => X_MAT_0_t_q0,
        t_address1 => ap_const_lv3_0,
        t_ce1 => ap_const_logic_0,
        t_we1 => ap_const_logic_0,
        t_d1 => ap_const_lv32_0,
        i_ce => ap_const_logic_1,
        t_ce => ap_const_logic_1,
        i_full_n => X_MAT_0_i_full_n,
        i_write => Block_preheader117_U0_ap_done,
        t_empty_n => X_MAT_0_t_empty_n,
        t_read => Loop_L1_proc_U0_ap_ready);

    X_OUT_0_U : component wrapped_mmult_hw_ibs
    generic map (
        DataWidth => 32,
        AddressRange => 3,
        AddressWidth => 2)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        i_address0 => Loop_L1_proc_U0_X_OUT_0_address0,
        i_ce0 => Loop_L1_proc_U0_X_OUT_0_ce0,
        i_we0 => Loop_L1_proc_U0_X_OUT_0_we0,
        i_d0 => Loop_L1_proc_U0_X_OUT_0_d0,
        i_q0 => X_OUT_0_i_q0,
        t_address0 => Loop_3_proc_U0_X_OUT_0_address0,
        t_ce0 => Loop_3_proc_U0_X_OUT_0_ce0,
        t_we0 => ap_const_logic_0,
        t_d0 => ap_const_lv32_0,
        t_q0 => X_OUT_0_t_q0,
        i_ce => ap_const_logic_1,
        t_ce => ap_const_logic_1,
        i_full_n => X_OUT_0_i_full_n,
        i_write => Loop_L1_proc_U0_ap_done,
        t_empty_n => X_OUT_0_t_empty_n,
        t_read => Loop_3_proc_U0_ap_ready);

    read_data_U0 : component read_data
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => read_data_U0_ap_start,
        ap_done => read_data_U0_ap_done,
        ap_continue => read_data_U0_ap_continue,
        ap_idle => read_data_U0_ap_idle,
        ap_ready => read_data_U0_ap_ready,
        in_stream_TDATA => in_stream_TDATA,
        in_stream_TVALID => in_stream_TVALID,
        in_stream_TREADY => read_data_U0_in_stream_TREADY,
        in_stream_TKEEP => in_stream_TKEEP,
        in_stream_TSTRB => in_stream_TSTRB,
        in_stream_TUSER => in_stream_TUSER,
        in_stream_TLAST => in_stream_TLAST,
        in_stream_TID => in_stream_TID,
        in_stream_TDEST => in_stream_TDEST,
        buf_V_address0 => read_data_U0_buf_V_address0,
        buf_V_ce0 => read_data_U0_buf_V_ce0,
        buf_V_we0 => read_data_U0_buf_V_we0,
        buf_V_d0 => read_data_U0_buf_V_d0);

    Block_preheader117_U0 : component Block_preheader117_s
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => Block_preheader117_U0_ap_start,
        ap_done => Block_preheader117_U0_ap_done,
        ap_continue => Block_preheader117_U0_ap_continue,
        ap_idle => Block_preheader117_U0_ap_idle,
        ap_ready => Block_preheader117_U0_ap_ready,
        dato_V_address0 => Block_preheader117_U0_dato_V_address0,
        dato_V_ce0 => Block_preheader117_U0_dato_V_ce0,
        dato_V_q0 => dato_V_t_q0,
        X_MAT_0_address0 => Block_preheader117_U0_X_MAT_0_address0,
        X_MAT_0_ce0 => Block_preheader117_U0_X_MAT_0_ce0,
        X_MAT_0_we0 => Block_preheader117_U0_X_MAT_0_we0,
        X_MAT_0_d0 => Block_preheader117_U0_X_MAT_0_d0,
        X_MAT_0_q0 => X_MAT_0_i_q0,
        X_MAT_0_address1 => Block_preheader117_U0_X_MAT_0_address1,
        X_MAT_0_ce1 => Block_preheader117_U0_X_MAT_0_ce1,
        X_MAT_0_we1 => Block_preheader117_U0_X_MAT_0_we1,
        X_MAT_0_d1 => Block_preheader117_U0_X_MAT_0_d1);

    Loop_L1_proc_U0 : component Loop_L1_proc
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => Loop_L1_proc_U0_ap_start,
        ap_done => Loop_L1_proc_U0_ap_done,
        ap_continue => Loop_L1_proc_U0_ap_continue,
        ap_idle => Loop_L1_proc_U0_ap_idle,
        ap_ready => Loop_L1_proc_U0_ap_ready,
        X_OUT_0_address0 => Loop_L1_proc_U0_X_OUT_0_address0,
        X_OUT_0_ce0 => Loop_L1_proc_U0_X_OUT_0_ce0,
        X_OUT_0_we0 => Loop_L1_proc_U0_X_OUT_0_we0,
        X_OUT_0_d0 => Loop_L1_proc_U0_X_OUT_0_d0,
        X_MAT_0_address0 => Loop_L1_proc_U0_X_MAT_0_address0,
        X_MAT_0_ce0 => Loop_L1_proc_U0_X_MAT_0_ce0,
        X_MAT_0_q0 => X_MAT_0_t_q0);

    Loop_3_proc_U0 : component Loop_3_proc
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => Loop_3_proc_U0_ap_start,
        ap_done => Loop_3_proc_U0_ap_done,
        ap_continue => Loop_3_proc_U0_ap_continue,
        ap_idle => Loop_3_proc_U0_ap_idle,
        ap_ready => Loop_3_proc_U0_ap_ready,
        X_OUT_0_address0 => Loop_3_proc_U0_X_OUT_0_address0,
        X_OUT_0_ce0 => Loop_3_proc_U0_X_OUT_0_ce0,
        X_OUT_0_q0 => X_OUT_0_t_q0,
        out_stream_TDATA => Loop_3_proc_U0_out_stream_TDATA,
        out_stream_TVALID => Loop_3_proc_U0_out_stream_TVALID,
        out_stream_TREADY => out_stream_TREADY,
        out_stream_TKEEP => Loop_3_proc_U0_out_stream_TKEEP,
        out_stream_TSTRB => Loop_3_proc_U0_out_stream_TSTRB,
        out_stream_TUSER => Loop_3_proc_U0_out_stream_TUSER,
        out_stream_TLAST => Loop_3_proc_U0_out_stream_TLAST,
        out_stream_TID => Loop_3_proc_U0_out_stream_TID,
        out_stream_TDEST => Loop_3_proc_U0_out_stream_TDEST);




    Block_preheader117_U0_X_MAT_0_full_n <= X_MAT_0_i_full_n;
    Block_preheader117_U0_ap_continue <= X_MAT_0_i_full_n;
    Block_preheader117_U0_ap_start <= dato_V_t_empty_n;
    Block_preheader117_U0_start_full_n <= ap_const_logic_0;
    Block_preheader117_U0_start_write <= ap_const_logic_0;
    Loop_3_proc_U0_ap_continue <= ap_const_logic_1;
    Loop_3_proc_U0_ap_start <= X_OUT_0_t_empty_n;
    Loop_3_proc_U0_start_full_n <= ap_const_logic_0;
    Loop_3_proc_U0_start_write <= ap_const_logic_0;
    Loop_L1_proc_U0_X_OUT_0_full_n <= X_OUT_0_i_full_n;
    Loop_L1_proc_U0_ap_continue <= X_OUT_0_i_full_n;
    Loop_L1_proc_U0_ap_start <= X_MAT_0_t_empty_n;
    Loop_L1_proc_U0_start_full_n <= ap_const_logic_0;
    Loop_L1_proc_U0_start_write <= ap_const_logic_0;
    ap_channel_done_X_MAT_0 <= Block_preheader117_U0_ap_done;
    ap_channel_done_X_OUT_0 <= Loop_L1_proc_U0_ap_done;
    ap_channel_done_dato_V <= read_data_U0_ap_done;

    ap_rst_n_inv_assign_proc : process(ap_rst_n)
    begin
                ap_rst_n_inv <= not(ap_rst_n);
    end process;

    ap_sync_continue <= ap_const_logic_0;
    in_stream_TREADY <= read_data_U0_in_stream_TREADY;
    out_stream_TDATA <= Loop_3_proc_U0_out_stream_TDATA;
    out_stream_TDEST <= Loop_3_proc_U0_out_stream_TDEST;
    out_stream_TID <= Loop_3_proc_U0_out_stream_TID;
    out_stream_TKEEP <= Loop_3_proc_U0_out_stream_TKEEP;
    out_stream_TLAST <= Loop_3_proc_U0_out_stream_TLAST;
    out_stream_TSTRB <= Loop_3_proc_U0_out_stream_TSTRB;
    out_stream_TUSER <= Loop_3_proc_U0_out_stream_TUSER;
    out_stream_TVALID <= Loop_3_proc_U0_out_stream_TVALID;
    read_data_U0_ap_continue <= dato_V_i_full_n;
    read_data_U0_ap_start <= ap_const_logic_1;
    read_data_U0_buf_V_full_n <= dato_V_i_full_n;
    read_data_U0_start_full_n <= ap_const_logic_0;
    read_data_U0_start_write <= ap_const_logic_0;
end behav;
