// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2017.1
// Copyright (C) 1986-2017 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _Block_preheader117_s_HH_
#define _Block_preheader117_s_HH_

#include "systemc.h"
#include "AESL_pkg.h"

#include "wrapped_mmult_hw_cud.h"
#include "wrapped_mmult_hw_dEe.h"
#include "Block_preheader11bkb.h"

namespace ap_rtl {

struct Block_preheader117_s : public sc_module {
    // Port declarations 19
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst;
    sc_in< sc_logic > ap_start;
    sc_out< sc_logic > ap_done;
    sc_in< sc_logic > ap_continue;
    sc_out< sc_logic > ap_idle;
    sc_out< sc_logic > ap_ready;
    sc_out< sc_lv<2> > dato_V_address0;
    sc_out< sc_logic > dato_V_ce0;
    sc_in< sc_lv<32> > dato_V_q0;
    sc_out< sc_lv<3> > X_MAT_0_address0;
    sc_out< sc_logic > X_MAT_0_ce0;
    sc_out< sc_logic > X_MAT_0_we0;
    sc_out< sc_lv<32> > X_MAT_0_d0;
    sc_in< sc_lv<32> > X_MAT_0_q0;
    sc_out< sc_lv<3> > X_MAT_0_address1;
    sc_out< sc_logic > X_MAT_0_ce1;
    sc_out< sc_logic > X_MAT_0_we1;
    sc_out< sc_lv<32> > X_MAT_0_d1;
    sc_signal< sc_logic > ap_var_for_const0;


    // Module declarations
    Block_preheader117_s(sc_module_name name);
    SC_HAS_PROCESS(Block_preheader117_s);

    ~Block_preheader117_s();

    sc_trace_file* mVcdFile;

    Block_preheader11bkb* vectorMedia1_U;
    wrapped_mmult_hw_cud<1,5,32,32,32>* wrapped_mmult_hw_cud_U8;
    wrapped_mmult_hw_dEe<1,6,32,32>* wrapped_mmult_hw_dEe_U9;
    wrapped_mmult_hw_dEe<1,6,32,32>* wrapped_mmult_hw_dEe_U10;
    sc_signal< sc_logic > ap_done_reg;
    sc_signal< sc_lv<18> > ap_CS_fsm;
    sc_signal< sc_logic > ap_CS_fsm_state1;
    sc_signal< sc_lv<3> > vectorMedia1_address0;
    sc_signal< sc_logic > vectorMedia1_ce0;
    sc_signal< sc_lv<32> > vectorMedia1_q0;
    sc_signal< bool > ap_block_state1;
    sc_signal< sc_lv<32> > temp_V_cast_fu_214_p1;
    sc_signal< sc_logic > ap_CS_fsm_state2;
    sc_signal< sc_lv<32> > temp_V_1_cast_fu_219_p1;
    sc_signal< sc_lv<32> > temp_V_2_cast_fu_228_p1;
    sc_signal< sc_logic > ap_CS_fsm_state3;
    sc_signal< sc_lv<32> > temp_V_3_cast_fu_233_p1;
    sc_signal< sc_lv<32> > temp_V_4_cast_fu_242_p1;
    sc_signal< sc_logic > ap_CS_fsm_state4;
    sc_signal< sc_lv<32> > temp_V_5_cast_fu_247_p1;
    sc_signal< sc_lv<32> > temp_V_6_cast_fu_256_p1;
    sc_signal< sc_logic > ap_CS_fsm_state5;
    sc_signal< sc_lv<32> > temp_V_7_cast_fu_261_p1;
    sc_signal< sc_lv<4> > i_1_fu_278_p2;
    sc_signal< sc_lv<4> > i_1_reg_347;
    sc_signal< sc_logic > ap_CS_fsm_state11;
    sc_signal< sc_lv<1> > exitcond2_fu_272_p2;
    sc_signal< sc_lv<3> > X_MAT_0_addr_8_reg_357;
    sc_signal< sc_lv<32> > X_MAT_0_load_reg_363;
    sc_signal< sc_logic > ap_CS_fsm_state12;
    sc_signal< sc_lv<32> > vectorMedia1_load_reg_368;
    sc_signal< sc_lv<32> > grp_fu_188_p2;
    sc_signal< sc_lv<32> > tmp_reg_373;
    sc_signal< sc_logic > ap_CS_fsm_state17;
    sc_signal< sc_lv<4> > i_reg_177;
    sc_signal< sc_logic > ap_CS_fsm_state18;
    sc_signal< sc_logic > ap_CS_fsm_state10;
    sc_signal< sc_logic > ap_CS_fsm_state7;
    sc_signal< sc_logic > ap_CS_fsm_state8;
    sc_signal< sc_logic > ap_CS_fsm_state9;
    sc_signal< sc_lv<32> > i_cast_fu_266_p1;
    sc_signal< sc_lv<32> > grp_fu_192_p1;
    sc_signal< sc_lv<32> > grp_fu_196_p1;
    sc_signal< sc_logic > ap_CS_fsm_state13;
    sc_signal< sc_lv<32> > grp_fu_192_p0;
    sc_signal< sc_lv<32> > grp_fu_196_p0;
    sc_signal< sc_lv<12> > tmp_1_fu_210_p1;
    sc_signal< sc_lv<12> > grp_fu_200_p4;
    sc_signal< sc_lv<12> > tmp_2_fu_224_p1;
    sc_signal< sc_lv<12> > tmp_3_fu_238_p1;
    sc_signal< sc_lv<12> > tmp_4_fu_252_p1;
    sc_signal< sc_lv<18> > ap_NS_fsm;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<18> ap_ST_fsm_state1;
    static const sc_lv<18> ap_ST_fsm_state2;
    static const sc_lv<18> ap_ST_fsm_state3;
    static const sc_lv<18> ap_ST_fsm_state4;
    static const sc_lv<18> ap_ST_fsm_state5;
    static const sc_lv<18> ap_ST_fsm_state6;
    static const sc_lv<18> ap_ST_fsm_state7;
    static const sc_lv<18> ap_ST_fsm_state8;
    static const sc_lv<18> ap_ST_fsm_state9;
    static const sc_lv<18> ap_ST_fsm_state10;
    static const sc_lv<18> ap_ST_fsm_state11;
    static const sc_lv<18> ap_ST_fsm_state12;
    static const sc_lv<18> ap_ST_fsm_state13;
    static const sc_lv<18> ap_ST_fsm_state14;
    static const sc_lv<18> ap_ST_fsm_state15;
    static const sc_lv<18> ap_ST_fsm_state16;
    static const sc_lv<18> ap_ST_fsm_state17;
    static const sc_lv<18> ap_ST_fsm_state18;
    static const sc_lv<32> ap_const_lv32_0;
    static const sc_lv<32> ap_const_lv32_1;
    static const sc_lv<32> ap_const_lv32_2;
    static const sc_lv<32> ap_const_lv32_3;
    static const sc_lv<32> ap_const_lv32_4;
    static const sc_lv<32> ap_const_lv32_A;
    static const sc_lv<1> ap_const_lv1_0;
    static const sc_lv<32> ap_const_lv32_B;
    static const sc_lv<32> ap_const_lv32_10;
    static const sc_lv<32> ap_const_lv32_11;
    static const sc_lv<4> ap_const_lv4_0;
    static const sc_lv<32> ap_const_lv32_9;
    static const sc_lv<32> ap_const_lv32_6;
    static const sc_lv<32> ap_const_lv32_7;
    static const sc_lv<32> ap_const_lv32_8;
    static const sc_lv<32> ap_const_lv32_5;
    static const sc_lv<32> ap_const_lv32_C;
    static const sc_lv<32> ap_const_lv32_17;
    static const sc_lv<4> ap_const_lv4_8;
    static const sc_lv<4> ap_const_lv4_1;
    static const sc_lv<1> ap_const_lv1_1;
    static const bool ap_const_boolean_1;
    // Thread declarations
    void thread_ap_var_for_const0();
    void thread_ap_clk_no_reset_();
    void thread_X_MAT_0_address0();
    void thread_X_MAT_0_address1();
    void thread_X_MAT_0_ce0();
    void thread_X_MAT_0_ce1();
    void thread_X_MAT_0_d0();
    void thread_X_MAT_0_d1();
    void thread_X_MAT_0_we0();
    void thread_X_MAT_0_we1();
    void thread_ap_CS_fsm_state1();
    void thread_ap_CS_fsm_state10();
    void thread_ap_CS_fsm_state11();
    void thread_ap_CS_fsm_state12();
    void thread_ap_CS_fsm_state13();
    void thread_ap_CS_fsm_state17();
    void thread_ap_CS_fsm_state18();
    void thread_ap_CS_fsm_state2();
    void thread_ap_CS_fsm_state3();
    void thread_ap_CS_fsm_state4();
    void thread_ap_CS_fsm_state5();
    void thread_ap_CS_fsm_state7();
    void thread_ap_CS_fsm_state8();
    void thread_ap_CS_fsm_state9();
    void thread_ap_block_state1();
    void thread_ap_done();
    void thread_ap_idle();
    void thread_ap_ready();
    void thread_dato_V_address0();
    void thread_dato_V_ce0();
    void thread_exitcond2_fu_272_p2();
    void thread_grp_fu_192_p0();
    void thread_grp_fu_196_p0();
    void thread_grp_fu_200_p4();
    void thread_i_1_fu_278_p2();
    void thread_i_cast_fu_266_p1();
    void thread_temp_V_1_cast_fu_219_p1();
    void thread_temp_V_2_cast_fu_228_p1();
    void thread_temp_V_3_cast_fu_233_p1();
    void thread_temp_V_4_cast_fu_242_p1();
    void thread_temp_V_5_cast_fu_247_p1();
    void thread_temp_V_6_cast_fu_256_p1();
    void thread_temp_V_7_cast_fu_261_p1();
    void thread_temp_V_cast_fu_214_p1();
    void thread_tmp_1_fu_210_p1();
    void thread_tmp_2_fu_224_p1();
    void thread_tmp_3_fu_238_p1();
    void thread_tmp_4_fu_252_p1();
    void thread_vectorMedia1_address0();
    void thread_vectorMedia1_ce0();
    void thread_ap_NS_fsm();
};

}

using namespace ap_rtl;

#endif
