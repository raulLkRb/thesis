// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2017.1
// Copyright (C) 1986-2017 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _wrapped_mmult_hw_HH_
#define _wrapped_mmult_hw_HH_

#include "systemc.h"
#include "AESL_pkg.h"

#include "read_data.h"
#include "Block_preheader117_s.h"
#include "Loop_L1_proc.h"
#include "Loop_3_proc.h"
#include "wrapped_mmult_hw_g8j.h"
#include "wrapped_mmult_hw_hbi.h"
#include "wrapped_mmult_hw_ibs.h"

namespace ap_rtl {

struct wrapped_mmult_hw : public sc_module {
    // Port declarations 20
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst_n;
    sc_in< sc_lv<32> > in_stream_TDATA;
    sc_in< sc_lv<4> > in_stream_TKEEP;
    sc_in< sc_lv<4> > in_stream_TSTRB;
    sc_in< sc_lv<4> > in_stream_TUSER;
    sc_in< sc_lv<1> > in_stream_TLAST;
    sc_in< sc_lv<5> > in_stream_TID;
    sc_in< sc_lv<5> > in_stream_TDEST;
    sc_out< sc_lv<32> > out_stream_TDATA;
    sc_out< sc_lv<4> > out_stream_TKEEP;
    sc_out< sc_lv<4> > out_stream_TSTRB;
    sc_out< sc_lv<4> > out_stream_TUSER;
    sc_out< sc_lv<1> > out_stream_TLAST;
    sc_out< sc_lv<5> > out_stream_TID;
    sc_out< sc_lv<5> > out_stream_TDEST;
    sc_in< sc_logic > in_stream_TVALID;
    sc_out< sc_logic > in_stream_TREADY;
    sc_out< sc_logic > out_stream_TVALID;
    sc_in< sc_logic > out_stream_TREADY;
    sc_signal< sc_logic > ap_var_for_const2;
    sc_signal< sc_lv<32> > ap_var_for_const1;
    sc_signal< sc_logic > ap_var_for_const0;
    sc_signal< sc_lv<3> > ap_var_for_const3;


    // Module declarations
    wrapped_mmult_hw(sc_module_name name);
    SC_HAS_PROCESS(wrapped_mmult_hw);

    ~wrapped_mmult_hw();

    sc_trace_file* mVcdFile;

    ofstream mHdltvinHandle;
    ofstream mHdltvoutHandle;
    wrapped_mmult_hw_g8j* dato_V_U;
    wrapped_mmult_hw_hbi* X_MAT_0_U;
    wrapped_mmult_hw_ibs* X_OUT_0_U;
    read_data* read_data_U0;
    Block_preheader117_s* Block_preheader117_U0;
    Loop_L1_proc* Loop_L1_proc_U0;
    Loop_3_proc* Loop_3_proc_U0;
    sc_signal< sc_logic > ap_rst_n_inv;
    sc_signal< sc_lv<32> > dato_V_i_q0;
    sc_signal< sc_lv<32> > dato_V_t_q0;
    sc_signal< sc_lv<32> > X_MAT_0_i_q0;
    sc_signal< sc_lv<32> > X_MAT_0_t_q0;
    sc_signal< sc_lv<32> > X_OUT_0_i_q0;
    sc_signal< sc_lv<32> > X_OUT_0_t_q0;
    sc_signal< sc_logic > read_data_U0_ap_start;
    sc_signal< sc_logic > read_data_U0_ap_done;
    sc_signal< sc_logic > read_data_U0_ap_continue;
    sc_signal< sc_logic > read_data_U0_ap_idle;
    sc_signal< sc_logic > read_data_U0_ap_ready;
    sc_signal< sc_logic > read_data_U0_in_stream_TREADY;
    sc_signal< sc_lv<2> > read_data_U0_buf_V_address0;
    sc_signal< sc_logic > read_data_U0_buf_V_ce0;
    sc_signal< sc_logic > read_data_U0_buf_V_we0;
    sc_signal< sc_lv<32> > read_data_U0_buf_V_d0;
    sc_signal< sc_logic > ap_channel_done_dato_V;
    sc_signal< sc_logic > read_data_U0_buf_V_full_n;
    sc_signal< sc_logic > Block_preheader117_U0_ap_start;
    sc_signal< sc_logic > Block_preheader117_U0_ap_done;
    sc_signal< sc_logic > Block_preheader117_U0_ap_continue;
    sc_signal< sc_logic > Block_preheader117_U0_ap_idle;
    sc_signal< sc_logic > Block_preheader117_U0_ap_ready;
    sc_signal< sc_lv<2> > Block_preheader117_U0_dato_V_address0;
    sc_signal< sc_logic > Block_preheader117_U0_dato_V_ce0;
    sc_signal< sc_lv<3> > Block_preheader117_U0_X_MAT_0_address0;
    sc_signal< sc_logic > Block_preheader117_U0_X_MAT_0_ce0;
    sc_signal< sc_logic > Block_preheader117_U0_X_MAT_0_we0;
    sc_signal< sc_lv<32> > Block_preheader117_U0_X_MAT_0_d0;
    sc_signal< sc_lv<3> > Block_preheader117_U0_X_MAT_0_address1;
    sc_signal< sc_logic > Block_preheader117_U0_X_MAT_0_ce1;
    sc_signal< sc_logic > Block_preheader117_U0_X_MAT_0_we1;
    sc_signal< sc_lv<32> > Block_preheader117_U0_X_MAT_0_d1;
    sc_signal< sc_logic > ap_channel_done_X_MAT_0;
    sc_signal< sc_logic > Block_preheader117_U0_X_MAT_0_full_n;
    sc_signal< sc_logic > Loop_L1_proc_U0_ap_start;
    sc_signal< sc_logic > Loop_L1_proc_U0_ap_done;
    sc_signal< sc_logic > Loop_L1_proc_U0_ap_continue;
    sc_signal< sc_logic > Loop_L1_proc_U0_ap_idle;
    sc_signal< sc_logic > Loop_L1_proc_U0_ap_ready;
    sc_signal< sc_lv<2> > Loop_L1_proc_U0_X_OUT_0_address0;
    sc_signal< sc_logic > Loop_L1_proc_U0_X_OUT_0_ce0;
    sc_signal< sc_logic > Loop_L1_proc_U0_X_OUT_0_we0;
    sc_signal< sc_lv<32> > Loop_L1_proc_U0_X_OUT_0_d0;
    sc_signal< sc_lv<3> > Loop_L1_proc_U0_X_MAT_0_address0;
    sc_signal< sc_logic > Loop_L1_proc_U0_X_MAT_0_ce0;
    sc_signal< sc_logic > ap_channel_done_X_OUT_0;
    sc_signal< sc_logic > Loop_L1_proc_U0_X_OUT_0_full_n;
    sc_signal< sc_logic > Loop_3_proc_U0_ap_start;
    sc_signal< sc_logic > Loop_3_proc_U0_ap_done;
    sc_signal< sc_logic > Loop_3_proc_U0_ap_continue;
    sc_signal< sc_logic > Loop_3_proc_U0_ap_idle;
    sc_signal< sc_logic > Loop_3_proc_U0_ap_ready;
    sc_signal< sc_lv<2> > Loop_3_proc_U0_X_OUT_0_address0;
    sc_signal< sc_logic > Loop_3_proc_U0_X_OUT_0_ce0;
    sc_signal< sc_lv<32> > Loop_3_proc_U0_out_stream_TDATA;
    sc_signal< sc_logic > Loop_3_proc_U0_out_stream_TVALID;
    sc_signal< sc_lv<4> > Loop_3_proc_U0_out_stream_TKEEP;
    sc_signal< sc_lv<4> > Loop_3_proc_U0_out_stream_TSTRB;
    sc_signal< sc_lv<4> > Loop_3_proc_U0_out_stream_TUSER;
    sc_signal< sc_lv<1> > Loop_3_proc_U0_out_stream_TLAST;
    sc_signal< sc_lv<5> > Loop_3_proc_U0_out_stream_TID;
    sc_signal< sc_lv<5> > Loop_3_proc_U0_out_stream_TDEST;
    sc_signal< sc_logic > ap_sync_continue;
    sc_signal< sc_logic > dato_V_i_full_n;
    sc_signal< sc_logic > dato_V_t_empty_n;
    sc_signal< sc_logic > X_MAT_0_i_full_n;
    sc_signal< sc_logic > X_MAT_0_t_empty_n;
    sc_signal< sc_logic > X_OUT_0_i_full_n;
    sc_signal< sc_logic > X_OUT_0_t_empty_n;
    sc_signal< sc_logic > read_data_U0_start_full_n;
    sc_signal< sc_logic > read_data_U0_start_write;
    sc_signal< sc_logic > Block_preheader117_U0_start_full_n;
    sc_signal< sc_logic > Block_preheader117_U0_start_write;
    sc_signal< sc_logic > Loop_L1_proc_U0_start_full_n;
    sc_signal< sc_logic > Loop_L1_proc_U0_start_write;
    sc_signal< sc_logic > Loop_3_proc_U0_start_full_n;
    sc_signal< sc_logic > Loop_3_proc_U0_start_write;
    static const sc_logic ap_const_logic_1;
    static const sc_lv<32> ap_const_lv32_0;
    static const sc_lv<4> ap_const_lv4_0;
    static const sc_lv<1> ap_const_lv1_0;
    static const sc_lv<5> ap_const_lv5_0;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<3> ap_const_lv3_0;
    static const sc_lv<3> ap_const_lv3_1;
    static const sc_lv<32> ap_const_lv32_1;
    // Thread declarations
    void thread_ap_var_for_const2();
    void thread_ap_var_for_const1();
    void thread_ap_var_for_const0();
    void thread_ap_var_for_const3();
    void thread_Block_preheader117_U0_X_MAT_0_full_n();
    void thread_Block_preheader117_U0_ap_continue();
    void thread_Block_preheader117_U0_ap_start();
    void thread_Block_preheader117_U0_start_full_n();
    void thread_Block_preheader117_U0_start_write();
    void thread_Loop_3_proc_U0_ap_continue();
    void thread_Loop_3_proc_U0_ap_start();
    void thread_Loop_3_proc_U0_start_full_n();
    void thread_Loop_3_proc_U0_start_write();
    void thread_Loop_L1_proc_U0_X_OUT_0_full_n();
    void thread_Loop_L1_proc_U0_ap_continue();
    void thread_Loop_L1_proc_U0_ap_start();
    void thread_Loop_L1_proc_U0_start_full_n();
    void thread_Loop_L1_proc_U0_start_write();
    void thread_ap_channel_done_X_MAT_0();
    void thread_ap_channel_done_X_OUT_0();
    void thread_ap_channel_done_dato_V();
    void thread_ap_rst_n_inv();
    void thread_ap_sync_continue();
    void thread_in_stream_TREADY();
    void thread_out_stream_TDATA();
    void thread_out_stream_TDEST();
    void thread_out_stream_TID();
    void thread_out_stream_TKEEP();
    void thread_out_stream_TLAST();
    void thread_out_stream_TSTRB();
    void thread_out_stream_TUSER();
    void thread_out_stream_TVALID();
    void thread_read_data_U0_ap_continue();
    void thread_read_data_U0_ap_start();
    void thread_read_data_U0_buf_V_full_n();
    void thread_read_data_U0_start_full_n();
    void thread_read_data_U0_start_write();
    void thread_hdltv_gen();
};

}

using namespace ap_rtl;

#endif
