// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2017.1
// Copyright (C) 1986-2017 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#include "Block_preheader117_s.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic Block_preheader117_s::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic Block_preheader117_s::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<18> Block_preheader117_s::ap_ST_fsm_state1 = "1";
const sc_lv<18> Block_preheader117_s::ap_ST_fsm_state2 = "10";
const sc_lv<18> Block_preheader117_s::ap_ST_fsm_state3 = "100";
const sc_lv<18> Block_preheader117_s::ap_ST_fsm_state4 = "1000";
const sc_lv<18> Block_preheader117_s::ap_ST_fsm_state5 = "10000";
const sc_lv<18> Block_preheader117_s::ap_ST_fsm_state6 = "100000";
const sc_lv<18> Block_preheader117_s::ap_ST_fsm_state7 = "1000000";
const sc_lv<18> Block_preheader117_s::ap_ST_fsm_state8 = "10000000";
const sc_lv<18> Block_preheader117_s::ap_ST_fsm_state9 = "100000000";
const sc_lv<18> Block_preheader117_s::ap_ST_fsm_state10 = "1000000000";
const sc_lv<18> Block_preheader117_s::ap_ST_fsm_state11 = "10000000000";
const sc_lv<18> Block_preheader117_s::ap_ST_fsm_state12 = "100000000000";
const sc_lv<18> Block_preheader117_s::ap_ST_fsm_state13 = "1000000000000";
const sc_lv<18> Block_preheader117_s::ap_ST_fsm_state14 = "10000000000000";
const sc_lv<18> Block_preheader117_s::ap_ST_fsm_state15 = "100000000000000";
const sc_lv<18> Block_preheader117_s::ap_ST_fsm_state16 = "1000000000000000";
const sc_lv<18> Block_preheader117_s::ap_ST_fsm_state17 = "10000000000000000";
const sc_lv<18> Block_preheader117_s::ap_ST_fsm_state18 = "100000000000000000";
const sc_lv<32> Block_preheader117_s::ap_const_lv32_0 = "00000000000000000000000000000000";
const sc_lv<32> Block_preheader117_s::ap_const_lv32_1 = "1";
const sc_lv<32> Block_preheader117_s::ap_const_lv32_2 = "10";
const sc_lv<32> Block_preheader117_s::ap_const_lv32_3 = "11";
const sc_lv<32> Block_preheader117_s::ap_const_lv32_4 = "100";
const sc_lv<32> Block_preheader117_s::ap_const_lv32_A = "1010";
const sc_lv<1> Block_preheader117_s::ap_const_lv1_0 = "0";
const sc_lv<32> Block_preheader117_s::ap_const_lv32_B = "1011";
const sc_lv<32> Block_preheader117_s::ap_const_lv32_10 = "10000";
const sc_lv<32> Block_preheader117_s::ap_const_lv32_11 = "10001";
const sc_lv<4> Block_preheader117_s::ap_const_lv4_0 = "0000";
const sc_lv<32> Block_preheader117_s::ap_const_lv32_9 = "1001";
const sc_lv<32> Block_preheader117_s::ap_const_lv32_6 = "110";
const sc_lv<32> Block_preheader117_s::ap_const_lv32_7 = "111";
const sc_lv<32> Block_preheader117_s::ap_const_lv32_8 = "1000";
const sc_lv<32> Block_preheader117_s::ap_const_lv32_5 = "101";
const sc_lv<32> Block_preheader117_s::ap_const_lv32_C = "1100";
const sc_lv<32> Block_preheader117_s::ap_const_lv32_17 = "10111";
const sc_lv<4> Block_preheader117_s::ap_const_lv4_8 = "1000";
const sc_lv<4> Block_preheader117_s::ap_const_lv4_1 = "1";
const sc_lv<1> Block_preheader117_s::ap_const_lv1_1 = "1";
const bool Block_preheader117_s::ap_const_boolean_1 = true;

Block_preheader117_s::Block_preheader117_s(sc_module_name name) : sc_module(name), mVcdFile(0) {
    vectorMedia1_U = new Block_preheader11bkb("vectorMedia1_U");
    vectorMedia1_U->clk(ap_clk);
    vectorMedia1_U->reset(ap_rst);
    vectorMedia1_U->address0(vectorMedia1_address0);
    vectorMedia1_U->ce0(vectorMedia1_ce0);
    vectorMedia1_U->q0(vectorMedia1_q0);
    wrapped_mmult_hw_cud_U8 = new wrapped_mmult_hw_cud<1,5,32,32,32>("wrapped_mmult_hw_cud_U8");
    wrapped_mmult_hw_cud_U8->clk(ap_clk);
    wrapped_mmult_hw_cud_U8->reset(ap_rst);
    wrapped_mmult_hw_cud_U8->din0(X_MAT_0_load_reg_363);
    wrapped_mmult_hw_cud_U8->din1(vectorMedia1_load_reg_368);
    wrapped_mmult_hw_cud_U8->ce(ap_var_for_const0);
    wrapped_mmult_hw_cud_U8->dout(grp_fu_188_p2);
    wrapped_mmult_hw_dEe_U9 = new wrapped_mmult_hw_dEe<1,6,32,32>("wrapped_mmult_hw_dEe_U9");
    wrapped_mmult_hw_dEe_U9->clk(ap_clk);
    wrapped_mmult_hw_dEe_U9->reset(ap_rst);
    wrapped_mmult_hw_dEe_U9->din0(grp_fu_192_p0);
    wrapped_mmult_hw_dEe_U9->ce(ap_var_for_const0);
    wrapped_mmult_hw_dEe_U9->dout(grp_fu_192_p1);
    wrapped_mmult_hw_dEe_U10 = new wrapped_mmult_hw_dEe<1,6,32,32>("wrapped_mmult_hw_dEe_U10");
    wrapped_mmult_hw_dEe_U10->clk(ap_clk);
    wrapped_mmult_hw_dEe_U10->reset(ap_rst);
    wrapped_mmult_hw_dEe_U10->din0(grp_fu_196_p0);
    wrapped_mmult_hw_dEe_U10->ce(ap_var_for_const0);
    wrapped_mmult_hw_dEe_U10->dout(grp_fu_196_p1);

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_X_MAT_0_address0);
    sensitive << ( ap_CS_fsm_state11 );
    sensitive << ( ap_CS_fsm_state10 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( ap_CS_fsm_state9 );
    sensitive << ( i_cast_fu_266_p1 );

    SC_METHOD(thread_X_MAT_0_address1);
    sensitive << ( X_MAT_0_addr_8_reg_357 );
    sensitive << ( ap_CS_fsm_state18 );
    sensitive << ( ap_CS_fsm_state10 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( ap_CS_fsm_state9 );

    SC_METHOD(thread_X_MAT_0_ce0);
    sensitive << ( ap_CS_fsm_state11 );
    sensitive << ( ap_CS_fsm_state10 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( ap_CS_fsm_state9 );

    SC_METHOD(thread_X_MAT_0_ce1);
    sensitive << ( ap_CS_fsm_state18 );
    sensitive << ( ap_CS_fsm_state10 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( ap_CS_fsm_state9 );

    SC_METHOD(thread_X_MAT_0_d0);
    sensitive << ( ap_CS_fsm_state10 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( ap_CS_fsm_state9 );
    sensitive << ( grp_fu_192_p1 );

    SC_METHOD(thread_X_MAT_0_d1);
    sensitive << ( tmp_reg_373 );
    sensitive << ( ap_CS_fsm_state18 );
    sensitive << ( ap_CS_fsm_state10 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( ap_CS_fsm_state9 );
    sensitive << ( grp_fu_196_p1 );

    SC_METHOD(thread_X_MAT_0_we0);
    sensitive << ( ap_CS_fsm_state10 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( ap_CS_fsm_state9 );

    SC_METHOD(thread_X_MAT_0_we1);
    sensitive << ( ap_CS_fsm_state18 );
    sensitive << ( ap_CS_fsm_state10 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( ap_CS_fsm_state9 );

    SC_METHOD(thread_ap_CS_fsm_state1);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state10);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state11);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state12);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state13);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state17);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state18);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state2);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state3);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state4);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state5);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state7);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state8);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state9);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_block_state1);
    sensitive << ( ap_start );
    sensitive << ( ap_done_reg );

    SC_METHOD(thread_ap_done);
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state11 );
    sensitive << ( exitcond2_fu_272_p2 );

    SC_METHOD(thread_ap_idle);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );

    SC_METHOD(thread_ap_ready);
    sensitive << ( ap_CS_fsm_state11 );
    sensitive << ( exitcond2_fu_272_p2 );

    SC_METHOD(thread_dato_V_address0);
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_CS_fsm_state4 );

    SC_METHOD(thread_dato_V_ce0);
    sensitive << ( ap_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_CS_fsm_state4 );

    SC_METHOD(thread_exitcond2_fu_272_p2);
    sensitive << ( ap_CS_fsm_state11 );
    sensitive << ( i_reg_177 );

    SC_METHOD(thread_grp_fu_192_p0);
    sensitive << ( temp_V_cast_fu_214_p1 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( temp_V_2_cast_fu_228_p1 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( temp_V_4_cast_fu_242_p1 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( temp_V_6_cast_fu_256_p1 );
    sensitive << ( ap_CS_fsm_state5 );

    SC_METHOD(thread_grp_fu_196_p0);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( temp_V_1_cast_fu_219_p1 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( temp_V_3_cast_fu_233_p1 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( temp_V_5_cast_fu_247_p1 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( temp_V_7_cast_fu_261_p1 );

    SC_METHOD(thread_grp_fu_200_p4);
    sensitive << ( dato_V_q0 );

    SC_METHOD(thread_i_1_fu_278_p2);
    sensitive << ( i_reg_177 );

    SC_METHOD(thread_i_cast_fu_266_p1);
    sensitive << ( i_reg_177 );

    SC_METHOD(thread_temp_V_1_cast_fu_219_p1);
    sensitive << ( grp_fu_200_p4 );

    SC_METHOD(thread_temp_V_2_cast_fu_228_p1);
    sensitive << ( tmp_2_fu_224_p1 );

    SC_METHOD(thread_temp_V_3_cast_fu_233_p1);
    sensitive << ( grp_fu_200_p4 );

    SC_METHOD(thread_temp_V_4_cast_fu_242_p1);
    sensitive << ( tmp_3_fu_238_p1 );

    SC_METHOD(thread_temp_V_5_cast_fu_247_p1);
    sensitive << ( grp_fu_200_p4 );

    SC_METHOD(thread_temp_V_6_cast_fu_256_p1);
    sensitive << ( tmp_4_fu_252_p1 );

    SC_METHOD(thread_temp_V_7_cast_fu_261_p1);
    sensitive << ( grp_fu_200_p4 );

    SC_METHOD(thread_temp_V_cast_fu_214_p1);
    sensitive << ( tmp_1_fu_210_p1 );

    SC_METHOD(thread_tmp_1_fu_210_p1);
    sensitive << ( dato_V_q0 );

    SC_METHOD(thread_tmp_2_fu_224_p1);
    sensitive << ( dato_V_q0 );

    SC_METHOD(thread_tmp_3_fu_238_p1);
    sensitive << ( dato_V_q0 );

    SC_METHOD(thread_tmp_4_fu_252_p1);
    sensitive << ( dato_V_q0 );

    SC_METHOD(thread_vectorMedia1_address0);
    sensitive << ( ap_CS_fsm_state11 );
    sensitive << ( i_cast_fu_266_p1 );

    SC_METHOD(thread_vectorMedia1_ce0);
    sensitive << ( ap_CS_fsm_state11 );

    SC_METHOD(thread_ap_NS_fsm);
    sensitive << ( ap_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_CS_fsm_state11 );
    sensitive << ( exitcond2_fu_272_p2 );

    SC_THREAD(thread_ap_var_for_const0);

    ap_done_reg = SC_LOGIC_0;
    ap_CS_fsm = "000000000000000001";
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "Block_preheader117_s_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT_HIER__
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst, "(port)ap_rst");
    sc_trace(mVcdFile, ap_start, "(port)ap_start");
    sc_trace(mVcdFile, ap_done, "(port)ap_done");
    sc_trace(mVcdFile, ap_continue, "(port)ap_continue");
    sc_trace(mVcdFile, ap_idle, "(port)ap_idle");
    sc_trace(mVcdFile, ap_ready, "(port)ap_ready");
    sc_trace(mVcdFile, dato_V_address0, "(port)dato_V_address0");
    sc_trace(mVcdFile, dato_V_ce0, "(port)dato_V_ce0");
    sc_trace(mVcdFile, dato_V_q0, "(port)dato_V_q0");
    sc_trace(mVcdFile, X_MAT_0_address0, "(port)X_MAT_0_address0");
    sc_trace(mVcdFile, X_MAT_0_ce0, "(port)X_MAT_0_ce0");
    sc_trace(mVcdFile, X_MAT_0_we0, "(port)X_MAT_0_we0");
    sc_trace(mVcdFile, X_MAT_0_d0, "(port)X_MAT_0_d0");
    sc_trace(mVcdFile, X_MAT_0_q0, "(port)X_MAT_0_q0");
    sc_trace(mVcdFile, X_MAT_0_address1, "(port)X_MAT_0_address1");
    sc_trace(mVcdFile, X_MAT_0_ce1, "(port)X_MAT_0_ce1");
    sc_trace(mVcdFile, X_MAT_0_we1, "(port)X_MAT_0_we1");
    sc_trace(mVcdFile, X_MAT_0_d1, "(port)X_MAT_0_d1");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, ap_done_reg, "ap_done_reg");
    sc_trace(mVcdFile, ap_CS_fsm, "ap_CS_fsm");
    sc_trace(mVcdFile, ap_CS_fsm_state1, "ap_CS_fsm_state1");
    sc_trace(mVcdFile, vectorMedia1_address0, "vectorMedia1_address0");
    sc_trace(mVcdFile, vectorMedia1_ce0, "vectorMedia1_ce0");
    sc_trace(mVcdFile, vectorMedia1_q0, "vectorMedia1_q0");
    sc_trace(mVcdFile, ap_block_state1, "ap_block_state1");
    sc_trace(mVcdFile, temp_V_cast_fu_214_p1, "temp_V_cast_fu_214_p1");
    sc_trace(mVcdFile, ap_CS_fsm_state2, "ap_CS_fsm_state2");
    sc_trace(mVcdFile, temp_V_1_cast_fu_219_p1, "temp_V_1_cast_fu_219_p1");
    sc_trace(mVcdFile, temp_V_2_cast_fu_228_p1, "temp_V_2_cast_fu_228_p1");
    sc_trace(mVcdFile, ap_CS_fsm_state3, "ap_CS_fsm_state3");
    sc_trace(mVcdFile, temp_V_3_cast_fu_233_p1, "temp_V_3_cast_fu_233_p1");
    sc_trace(mVcdFile, temp_V_4_cast_fu_242_p1, "temp_V_4_cast_fu_242_p1");
    sc_trace(mVcdFile, ap_CS_fsm_state4, "ap_CS_fsm_state4");
    sc_trace(mVcdFile, temp_V_5_cast_fu_247_p1, "temp_V_5_cast_fu_247_p1");
    sc_trace(mVcdFile, temp_V_6_cast_fu_256_p1, "temp_V_6_cast_fu_256_p1");
    sc_trace(mVcdFile, ap_CS_fsm_state5, "ap_CS_fsm_state5");
    sc_trace(mVcdFile, temp_V_7_cast_fu_261_p1, "temp_V_7_cast_fu_261_p1");
    sc_trace(mVcdFile, i_1_fu_278_p2, "i_1_fu_278_p2");
    sc_trace(mVcdFile, i_1_reg_347, "i_1_reg_347");
    sc_trace(mVcdFile, ap_CS_fsm_state11, "ap_CS_fsm_state11");
    sc_trace(mVcdFile, exitcond2_fu_272_p2, "exitcond2_fu_272_p2");
    sc_trace(mVcdFile, X_MAT_0_addr_8_reg_357, "X_MAT_0_addr_8_reg_357");
    sc_trace(mVcdFile, X_MAT_0_load_reg_363, "X_MAT_0_load_reg_363");
    sc_trace(mVcdFile, ap_CS_fsm_state12, "ap_CS_fsm_state12");
    sc_trace(mVcdFile, vectorMedia1_load_reg_368, "vectorMedia1_load_reg_368");
    sc_trace(mVcdFile, grp_fu_188_p2, "grp_fu_188_p2");
    sc_trace(mVcdFile, tmp_reg_373, "tmp_reg_373");
    sc_trace(mVcdFile, ap_CS_fsm_state17, "ap_CS_fsm_state17");
    sc_trace(mVcdFile, i_reg_177, "i_reg_177");
    sc_trace(mVcdFile, ap_CS_fsm_state18, "ap_CS_fsm_state18");
    sc_trace(mVcdFile, ap_CS_fsm_state10, "ap_CS_fsm_state10");
    sc_trace(mVcdFile, ap_CS_fsm_state7, "ap_CS_fsm_state7");
    sc_trace(mVcdFile, ap_CS_fsm_state8, "ap_CS_fsm_state8");
    sc_trace(mVcdFile, ap_CS_fsm_state9, "ap_CS_fsm_state9");
    sc_trace(mVcdFile, i_cast_fu_266_p1, "i_cast_fu_266_p1");
    sc_trace(mVcdFile, grp_fu_192_p1, "grp_fu_192_p1");
    sc_trace(mVcdFile, grp_fu_196_p1, "grp_fu_196_p1");
    sc_trace(mVcdFile, ap_CS_fsm_state13, "ap_CS_fsm_state13");
    sc_trace(mVcdFile, grp_fu_192_p0, "grp_fu_192_p0");
    sc_trace(mVcdFile, grp_fu_196_p0, "grp_fu_196_p0");
    sc_trace(mVcdFile, tmp_1_fu_210_p1, "tmp_1_fu_210_p1");
    sc_trace(mVcdFile, grp_fu_200_p4, "grp_fu_200_p4");
    sc_trace(mVcdFile, tmp_2_fu_224_p1, "tmp_2_fu_224_p1");
    sc_trace(mVcdFile, tmp_3_fu_238_p1, "tmp_3_fu_238_p1");
    sc_trace(mVcdFile, tmp_4_fu_252_p1, "tmp_4_fu_252_p1");
    sc_trace(mVcdFile, ap_NS_fsm, "ap_NS_fsm");
#endif

    }
}

Block_preheader117_s::~Block_preheader117_s() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

    delete vectorMedia1_U;
    delete wrapped_mmult_hw_cud_U8;
    delete wrapped_mmult_hw_dEe_U9;
    delete wrapped_mmult_hw_dEe_U10;
}

void Block_preheader117_s::thread_ap_var_for_const0() {
    ap_var_for_const0 = ap_const_logic_1;
}

void Block_preheader117_s::thread_ap_clk_no_reset_() {
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_CS_fsm = ap_ST_fsm_state1;
    } else {
        ap_CS_fsm = ap_NS_fsm.read();
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_done_reg = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_const_logic_1, ap_continue.read())) {
            ap_done_reg = ap_const_logic_0;
        } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read()) && 
                    esl_seteq<1,1,1>(exitcond2_fu_272_p2.read(), ap_const_lv1_1))) {
            ap_done_reg = ap_const_logic_1;
        }
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read())) {
        i_reg_177 = ap_const_lv4_0;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state18.read())) {
        i_reg_177 = i_1_reg_347.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read()) && esl_seteq<1,1,1>(exitcond2_fu_272_p2.read(), ap_const_lv1_0))) {
        X_MAT_0_addr_8_reg_357 =  (sc_lv<3>) (i_cast_fu_266_p1.read());
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read())) {
        X_MAT_0_load_reg_363 = X_MAT_0_q0.read();
        vectorMedia1_load_reg_368 = vectorMedia1_q0.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read())) {
        i_1_reg_347 = i_1_fu_278_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state17.read())) {
        tmp_reg_373 = grp_fu_188_p2.read();
    }
}

void Block_preheader117_s::thread_X_MAT_0_address0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read())) {
        X_MAT_0_address0 =  (sc_lv<3>) (i_cast_fu_266_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read())) {
        X_MAT_0_address0 =  (sc_lv<3>) (ap_const_lv32_6);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read())) {
        X_MAT_0_address0 =  (sc_lv<3>) (ap_const_lv32_4);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read())) {
        X_MAT_0_address0 =  (sc_lv<3>) (ap_const_lv32_2);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read())) {
        X_MAT_0_address0 =  (sc_lv<3>) (ap_const_lv32_0);
    } else {
        X_MAT_0_address0 = "XXX";
    }
}

void Block_preheader117_s::thread_X_MAT_0_address1() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state18.read())) {
        X_MAT_0_address1 = X_MAT_0_addr_8_reg_357.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read())) {
        X_MAT_0_address1 =  (sc_lv<3>) (ap_const_lv32_7);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read())) {
        X_MAT_0_address1 =  (sc_lv<3>) (ap_const_lv32_5);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read())) {
        X_MAT_0_address1 =  (sc_lv<3>) (ap_const_lv32_3);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read())) {
        X_MAT_0_address1 =  (sc_lv<3>) (ap_const_lv32_1);
    } else {
        X_MAT_0_address1 = "XXX";
    }
}

void Block_preheader117_s::thread_X_MAT_0_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read()))) {
        X_MAT_0_ce0 = ap_const_logic_1;
    } else {
        X_MAT_0_ce0 = ap_const_logic_0;
    }
}

void Block_preheader117_s::thread_X_MAT_0_ce1() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state18.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read()))) {
        X_MAT_0_ce1 = ap_const_logic_1;
    } else {
        X_MAT_0_ce1 = ap_const_logic_0;
    }
}

void Block_preheader117_s::thread_X_MAT_0_d0() {
    X_MAT_0_d0 = grp_fu_192_p1.read();
}

void Block_preheader117_s::thread_X_MAT_0_d1() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state18.read())) {
        X_MAT_0_d1 = tmp_reg_373.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read()))) {
        X_MAT_0_d1 = grp_fu_196_p1.read();
    } else {
        X_MAT_0_d1 =  (sc_lv<32>) ("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
    }
}

void Block_preheader117_s::thread_X_MAT_0_we0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read()))) {
        X_MAT_0_we0 = ap_const_logic_1;
    } else {
        X_MAT_0_we0 = ap_const_logic_0;
    }
}

void Block_preheader117_s::thread_X_MAT_0_we1() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state18.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read()))) {
        X_MAT_0_we1 = ap_const_logic_1;
    } else {
        X_MAT_0_we1 = ap_const_logic_0;
    }
}

void Block_preheader117_s::thread_ap_CS_fsm_state1() {
    ap_CS_fsm_state1 = ap_CS_fsm.read()[0];
}

void Block_preheader117_s::thread_ap_CS_fsm_state10() {
    ap_CS_fsm_state10 = ap_CS_fsm.read()[9];
}

void Block_preheader117_s::thread_ap_CS_fsm_state11() {
    ap_CS_fsm_state11 = ap_CS_fsm.read()[10];
}

void Block_preheader117_s::thread_ap_CS_fsm_state12() {
    ap_CS_fsm_state12 = ap_CS_fsm.read()[11];
}

void Block_preheader117_s::thread_ap_CS_fsm_state13() {
    ap_CS_fsm_state13 = ap_CS_fsm.read()[12];
}

void Block_preheader117_s::thread_ap_CS_fsm_state17() {
    ap_CS_fsm_state17 = ap_CS_fsm.read()[16];
}

void Block_preheader117_s::thread_ap_CS_fsm_state18() {
    ap_CS_fsm_state18 = ap_CS_fsm.read()[17];
}

void Block_preheader117_s::thread_ap_CS_fsm_state2() {
    ap_CS_fsm_state2 = ap_CS_fsm.read()[1];
}

void Block_preheader117_s::thread_ap_CS_fsm_state3() {
    ap_CS_fsm_state3 = ap_CS_fsm.read()[2];
}

void Block_preheader117_s::thread_ap_CS_fsm_state4() {
    ap_CS_fsm_state4 = ap_CS_fsm.read()[3];
}

void Block_preheader117_s::thread_ap_CS_fsm_state5() {
    ap_CS_fsm_state5 = ap_CS_fsm.read()[4];
}

void Block_preheader117_s::thread_ap_CS_fsm_state7() {
    ap_CS_fsm_state7 = ap_CS_fsm.read()[6];
}

void Block_preheader117_s::thread_ap_CS_fsm_state8() {
    ap_CS_fsm_state8 = ap_CS_fsm.read()[7];
}

void Block_preheader117_s::thread_ap_CS_fsm_state9() {
    ap_CS_fsm_state9 = ap_CS_fsm.read()[8];
}

void Block_preheader117_s::thread_ap_block_state1() {
    ap_block_state1 = (esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1));
}

void Block_preheader117_s::thread_ap_done() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read()) && 
         esl_seteq<1,1,1>(exitcond2_fu_272_p2.read(), ap_const_lv1_1))) {
        ap_done = ap_const_logic_1;
    } else {
        ap_done = ap_done_reg.read();
    }
}

void Block_preheader117_s::thread_ap_idle() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()))) {
        ap_idle = ap_const_logic_1;
    } else {
        ap_idle = ap_const_logic_0;
    }
}

void Block_preheader117_s::thread_ap_ready() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read()) && 
         esl_seteq<1,1,1>(exitcond2_fu_272_p2.read(), ap_const_lv1_1))) {
        ap_ready = ap_const_logic_1;
    } else {
        ap_ready = ap_const_logic_0;
    }
}

void Block_preheader117_s::thread_dato_V_address0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        dato_V_address0 =  (sc_lv<2>) (ap_const_lv32_3);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        dato_V_address0 =  (sc_lv<2>) (ap_const_lv32_2);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        dato_V_address0 =  (sc_lv<2>) (ap_const_lv32_1);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read())) {
        dato_V_address0 =  (sc_lv<2>) (ap_const_lv32_0);
    } else {
        dato_V_address0 =  (sc_lv<2>) ("XX");
    }
}

void Block_preheader117_s::thread_dato_V_ce0() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
          !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1))) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()))) {
        dato_V_ce0 = ap_const_logic_1;
    } else {
        dato_V_ce0 = ap_const_logic_0;
    }
}

void Block_preheader117_s::thread_exitcond2_fu_272_p2() {
    exitcond2_fu_272_p2 = (!i_reg_177.read().is_01() || !ap_const_lv4_8.is_01())? sc_lv<1>(): sc_lv<1>(i_reg_177.read() == ap_const_lv4_8);
}

void Block_preheader117_s::thread_grp_fu_192_p0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
        grp_fu_192_p0 = temp_V_6_cast_fu_256_p1.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        grp_fu_192_p0 = temp_V_4_cast_fu_242_p1.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        grp_fu_192_p0 = temp_V_2_cast_fu_228_p1.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        grp_fu_192_p0 = temp_V_cast_fu_214_p1.read();
    } else {
        grp_fu_192_p0 =  (sc_lv<32>) ("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
    }
}

void Block_preheader117_s::thread_grp_fu_196_p0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
        grp_fu_196_p0 = temp_V_7_cast_fu_261_p1.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        grp_fu_196_p0 = temp_V_5_cast_fu_247_p1.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        grp_fu_196_p0 = temp_V_3_cast_fu_233_p1.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        grp_fu_196_p0 = temp_V_1_cast_fu_219_p1.read();
    } else {
        grp_fu_196_p0 =  (sc_lv<32>) ("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
    }
}

void Block_preheader117_s::thread_grp_fu_200_p4() {
    grp_fu_200_p4 = dato_V_q0.read().range(23, 12);
}

void Block_preheader117_s::thread_i_1_fu_278_p2() {
    i_1_fu_278_p2 = (!i_reg_177.read().is_01() || !ap_const_lv4_1.is_01())? sc_lv<4>(): (sc_biguint<4>(i_reg_177.read()) + sc_biguint<4>(ap_const_lv4_1));
}

void Block_preheader117_s::thread_i_cast_fu_266_p1() {
    i_cast_fu_266_p1 = esl_zext<32,4>(i_reg_177.read());
}

void Block_preheader117_s::thread_temp_V_1_cast_fu_219_p1() {
    temp_V_1_cast_fu_219_p1 = esl_zext<32,12>(grp_fu_200_p4.read());
}

void Block_preheader117_s::thread_temp_V_2_cast_fu_228_p1() {
    temp_V_2_cast_fu_228_p1 = esl_zext<32,12>(tmp_2_fu_224_p1.read());
}

void Block_preheader117_s::thread_temp_V_3_cast_fu_233_p1() {
    temp_V_3_cast_fu_233_p1 = esl_zext<32,12>(grp_fu_200_p4.read());
}

void Block_preheader117_s::thread_temp_V_4_cast_fu_242_p1() {
    temp_V_4_cast_fu_242_p1 = esl_zext<32,12>(tmp_3_fu_238_p1.read());
}

void Block_preheader117_s::thread_temp_V_5_cast_fu_247_p1() {
    temp_V_5_cast_fu_247_p1 = esl_zext<32,12>(grp_fu_200_p4.read());
}

void Block_preheader117_s::thread_temp_V_6_cast_fu_256_p1() {
    temp_V_6_cast_fu_256_p1 = esl_zext<32,12>(tmp_4_fu_252_p1.read());
}

void Block_preheader117_s::thread_temp_V_7_cast_fu_261_p1() {
    temp_V_7_cast_fu_261_p1 = esl_zext<32,12>(grp_fu_200_p4.read());
}

void Block_preheader117_s::thread_temp_V_cast_fu_214_p1() {
    temp_V_cast_fu_214_p1 = esl_zext<32,12>(tmp_1_fu_210_p1.read());
}

void Block_preheader117_s::thread_tmp_1_fu_210_p1() {
    tmp_1_fu_210_p1 = dato_V_q0.read().range(12-1, 0);
}

void Block_preheader117_s::thread_tmp_2_fu_224_p1() {
    tmp_2_fu_224_p1 = dato_V_q0.read().range(12-1, 0);
}

void Block_preheader117_s::thread_tmp_3_fu_238_p1() {
    tmp_3_fu_238_p1 = dato_V_q0.read().range(12-1, 0);
}

void Block_preheader117_s::thread_tmp_4_fu_252_p1() {
    tmp_4_fu_252_p1 = dato_V_q0.read().range(12-1, 0);
}

void Block_preheader117_s::thread_vectorMedia1_address0() {
    vectorMedia1_address0 =  (sc_lv<3>) (i_cast_fu_266_p1.read());
}

void Block_preheader117_s::thread_vectorMedia1_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read())) {
        vectorMedia1_ce0 = ap_const_logic_1;
    } else {
        vectorMedia1_ce0 = ap_const_logic_0;
    }
}

void Block_preheader117_s::thread_ap_NS_fsm() {
    switch (ap_CS_fsm.read().to_uint64()) {
        case 1 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)))) {
                ap_NS_fsm = ap_ST_fsm_state2;
            } else {
                ap_NS_fsm = ap_ST_fsm_state1;
            }
            break;
        case 2 : 
            ap_NS_fsm = ap_ST_fsm_state3;
            break;
        case 4 : 
            ap_NS_fsm = ap_ST_fsm_state4;
            break;
        case 8 : 
            ap_NS_fsm = ap_ST_fsm_state5;
            break;
        case 16 : 
            ap_NS_fsm = ap_ST_fsm_state6;
            break;
        case 32 : 
            ap_NS_fsm = ap_ST_fsm_state7;
            break;
        case 64 : 
            ap_NS_fsm = ap_ST_fsm_state8;
            break;
        case 128 : 
            ap_NS_fsm = ap_ST_fsm_state9;
            break;
        case 256 : 
            ap_NS_fsm = ap_ST_fsm_state10;
            break;
        case 512 : 
            ap_NS_fsm = ap_ST_fsm_state11;
            break;
        case 1024 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read()) && esl_seteq<1,1,1>(exitcond2_fu_272_p2.read(), ap_const_lv1_1))) {
                ap_NS_fsm = ap_ST_fsm_state1;
            } else {
                ap_NS_fsm = ap_ST_fsm_state12;
            }
            break;
        case 2048 : 
            ap_NS_fsm = ap_ST_fsm_state13;
            break;
        case 4096 : 
            ap_NS_fsm = ap_ST_fsm_state14;
            break;
        case 8192 : 
            ap_NS_fsm = ap_ST_fsm_state15;
            break;
        case 16384 : 
            ap_NS_fsm = ap_ST_fsm_state16;
            break;
        case 32768 : 
            ap_NS_fsm = ap_ST_fsm_state17;
            break;
        case 65536 : 
            ap_NS_fsm = ap_ST_fsm_state18;
            break;
        case 131072 : 
            ap_NS_fsm = ap_ST_fsm_state11;
            break;
        default : 
            ap_NS_fsm =  (sc_lv<18>) ("XXXXXXXXXXXXXXXXXX");
            break;
    }
}

}

