// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2017.1
// Copyright (C) 1986-2017 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _axi_algorithm_HH_
#define _axi_algorithm_HH_

#include "systemc.h"
#include "AESL_pkg.h"

#include "sweep_algorithm_DECM.h"
#include "write_data.h"
#include "read_data.h"

namespace ap_rtl {

struct axi_algorithm : public sc_module {
    // Port declarations 21
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst_n;
    sc_in< sc_lv<32> > input_AX_ALG_TDATA;
    sc_in< sc_logic > input_AX_ALG_TVALID;
    sc_out< sc_logic > input_AX_ALG_TREADY;
    sc_in< sc_lv<4> > input_AX_ALG_TKEEP;
    sc_in< sc_lv<4> > input_AX_ALG_TSTRB;
    sc_in< sc_lv<4> > input_AX_ALG_TUSER;
    sc_in< sc_lv<1> > input_AX_ALG_TLAST;
    sc_in< sc_lv<5> > input_AX_ALG_TID;
    sc_in< sc_lv<5> > input_AX_ALG_TDEST;
    sc_out< sc_lv<32> > output_AX_ALG_TDATA;
    sc_out< sc_logic > output_AX_ALG_TVALID;
    sc_in< sc_logic > output_AX_ALG_TREADY;
    sc_out< sc_lv<4> > output_AX_ALG_TKEEP;
    sc_out< sc_lv<4> > output_AX_ALG_TSTRB;
    sc_out< sc_lv<4> > output_AX_ALG_TUSER;
    sc_out< sc_lv<1> > output_AX_ALG_TLAST;
    sc_out< sc_lv<5> > output_AX_ALG_TID;
    sc_out< sc_lv<5> > output_AX_ALG_TDEST;
    sc_in< sc_lv<32> > full_fifo;
    sc_signal< sc_lv<1> > ap_var_for_const0;


    // Module declarations
    axi_algorithm(sc_module_name name);
    SC_HAS_PROCESS(axi_algorithm);

    ~axi_algorithm();

    sc_trace_file* mVcdFile;

    ofstream mHdltvinHandle;
    ofstream mHdltvoutHandle;
    sweep_algorithm_DECM* grp_sweep_algorithm_DECM_fu_76;
    write_data* grp_write_data_fu_89;
    read_data* buf_Tj_in_0_V_read_data_fu_109;
    sc_signal< sc_logic > ap_rst_n_inv;
    sc_signal< sc_lv<32> > input_AX_ALG_data_V_0_data_out;
    sc_signal< sc_logic > input_AX_ALG_data_V_0_vld_in;
    sc_signal< sc_logic > input_AX_ALG_data_V_0_vld_out;
    sc_signal< sc_logic > input_AX_ALG_data_V_0_ack_in;
    sc_signal< sc_logic > input_AX_ALG_data_V_0_ack_out;
    sc_signal< sc_lv<32> > input_AX_ALG_data_V_0_payload_A;
    sc_signal< sc_lv<32> > input_AX_ALG_data_V_0_payload_B;
    sc_signal< sc_logic > input_AX_ALG_data_V_0_sel_rd;
    sc_signal< sc_logic > input_AX_ALG_data_V_0_sel_wr;
    sc_signal< sc_logic > input_AX_ALG_data_V_0_sel;
    sc_signal< sc_logic > input_AX_ALG_data_V_0_load_A;
    sc_signal< sc_logic > input_AX_ALG_data_V_0_load_B;
    sc_signal< sc_lv<2> > input_AX_ALG_data_V_0_state;
    sc_signal< sc_logic > input_AX_ALG_data_V_0_state_cmp_full;
    sc_signal< sc_lv<4> > input_AX_ALG_keep_V_0_data_out;
    sc_signal< sc_logic > input_AX_ALG_keep_V_0_vld_in;
    sc_signal< sc_logic > input_AX_ALG_keep_V_0_vld_out;
    sc_signal< sc_logic > input_AX_ALG_keep_V_0_ack_in;
    sc_signal< sc_logic > input_AX_ALG_keep_V_0_ack_out;
    sc_signal< sc_lv<4> > input_AX_ALG_keep_V_0_payload_A;
    sc_signal< sc_lv<4> > input_AX_ALG_keep_V_0_payload_B;
    sc_signal< sc_logic > input_AX_ALG_keep_V_0_sel_rd;
    sc_signal< sc_logic > input_AX_ALG_keep_V_0_sel_wr;
    sc_signal< sc_logic > input_AX_ALG_keep_V_0_sel;
    sc_signal< sc_logic > input_AX_ALG_keep_V_0_load_A;
    sc_signal< sc_logic > input_AX_ALG_keep_V_0_load_B;
    sc_signal< sc_lv<2> > input_AX_ALG_keep_V_0_state;
    sc_signal< sc_logic > input_AX_ALG_keep_V_0_state_cmp_full;
    sc_signal< sc_lv<4> > input_AX_ALG_strb_V_0_data_out;
    sc_signal< sc_logic > input_AX_ALG_strb_V_0_vld_in;
    sc_signal< sc_logic > input_AX_ALG_strb_V_0_vld_out;
    sc_signal< sc_logic > input_AX_ALG_strb_V_0_ack_in;
    sc_signal< sc_logic > input_AX_ALG_strb_V_0_ack_out;
    sc_signal< sc_lv<4> > input_AX_ALG_strb_V_0_payload_A;
    sc_signal< sc_lv<4> > input_AX_ALG_strb_V_0_payload_B;
    sc_signal< sc_logic > input_AX_ALG_strb_V_0_sel_rd;
    sc_signal< sc_logic > input_AX_ALG_strb_V_0_sel_wr;
    sc_signal< sc_logic > input_AX_ALG_strb_V_0_sel;
    sc_signal< sc_logic > input_AX_ALG_strb_V_0_load_A;
    sc_signal< sc_logic > input_AX_ALG_strb_V_0_load_B;
    sc_signal< sc_lv<2> > input_AX_ALG_strb_V_0_state;
    sc_signal< sc_logic > input_AX_ALG_strb_V_0_state_cmp_full;
    sc_signal< sc_lv<4> > input_AX_ALG_user_V_0_data_out;
    sc_signal< sc_logic > input_AX_ALG_user_V_0_vld_in;
    sc_signal< sc_logic > input_AX_ALG_user_V_0_vld_out;
    sc_signal< sc_logic > input_AX_ALG_user_V_0_ack_in;
    sc_signal< sc_logic > input_AX_ALG_user_V_0_ack_out;
    sc_signal< sc_lv<4> > input_AX_ALG_user_V_0_payload_A;
    sc_signal< sc_lv<4> > input_AX_ALG_user_V_0_payload_B;
    sc_signal< sc_logic > input_AX_ALG_user_V_0_sel_rd;
    sc_signal< sc_logic > input_AX_ALG_user_V_0_sel_wr;
    sc_signal< sc_logic > input_AX_ALG_user_V_0_sel;
    sc_signal< sc_logic > input_AX_ALG_user_V_0_load_A;
    sc_signal< sc_logic > input_AX_ALG_user_V_0_load_B;
    sc_signal< sc_lv<2> > input_AX_ALG_user_V_0_state;
    sc_signal< sc_logic > input_AX_ALG_user_V_0_state_cmp_full;
    sc_signal< sc_lv<1> > input_AX_ALG_last_V_0_data_out;
    sc_signal< sc_logic > input_AX_ALG_last_V_0_vld_in;
    sc_signal< sc_logic > input_AX_ALG_last_V_0_vld_out;
    sc_signal< sc_logic > input_AX_ALG_last_V_0_ack_in;
    sc_signal< sc_logic > input_AX_ALG_last_V_0_ack_out;
    sc_signal< sc_lv<1> > input_AX_ALG_last_V_0_payload_A;
    sc_signal< sc_lv<1> > input_AX_ALG_last_V_0_payload_B;
    sc_signal< sc_logic > input_AX_ALG_last_V_0_sel_rd;
    sc_signal< sc_logic > input_AX_ALG_last_V_0_sel_wr;
    sc_signal< sc_logic > input_AX_ALG_last_V_0_sel;
    sc_signal< sc_logic > input_AX_ALG_last_V_0_load_A;
    sc_signal< sc_logic > input_AX_ALG_last_V_0_load_B;
    sc_signal< sc_lv<2> > input_AX_ALG_last_V_0_state;
    sc_signal< sc_logic > input_AX_ALG_last_V_0_state_cmp_full;
    sc_signal< sc_lv<5> > input_AX_ALG_id_V_0_data_out;
    sc_signal< sc_logic > input_AX_ALG_id_V_0_vld_in;
    sc_signal< sc_logic > input_AX_ALG_id_V_0_vld_out;
    sc_signal< sc_logic > input_AX_ALG_id_V_0_ack_in;
    sc_signal< sc_logic > input_AX_ALG_id_V_0_ack_out;
    sc_signal< sc_lv<5> > input_AX_ALG_id_V_0_payload_A;
    sc_signal< sc_lv<5> > input_AX_ALG_id_V_0_payload_B;
    sc_signal< sc_logic > input_AX_ALG_id_V_0_sel_rd;
    sc_signal< sc_logic > input_AX_ALG_id_V_0_sel_wr;
    sc_signal< sc_logic > input_AX_ALG_id_V_0_sel;
    sc_signal< sc_logic > input_AX_ALG_id_V_0_load_A;
    sc_signal< sc_logic > input_AX_ALG_id_V_0_load_B;
    sc_signal< sc_lv<2> > input_AX_ALG_id_V_0_state;
    sc_signal< sc_logic > input_AX_ALG_id_V_0_state_cmp_full;
    sc_signal< sc_lv<5> > input_AX_ALG_dest_V_0_data_out;
    sc_signal< sc_logic > input_AX_ALG_dest_V_0_vld_in;
    sc_signal< sc_logic > input_AX_ALG_dest_V_0_vld_out;
    sc_signal< sc_logic > input_AX_ALG_dest_V_0_ack_in;
    sc_signal< sc_logic > input_AX_ALG_dest_V_0_ack_out;
    sc_signal< sc_lv<5> > input_AX_ALG_dest_V_0_payload_A;
    sc_signal< sc_lv<5> > input_AX_ALG_dest_V_0_payload_B;
    sc_signal< sc_logic > input_AX_ALG_dest_V_0_sel_rd;
    sc_signal< sc_logic > input_AX_ALG_dest_V_0_sel_wr;
    sc_signal< sc_logic > input_AX_ALG_dest_V_0_sel;
    sc_signal< sc_logic > input_AX_ALG_dest_V_0_load_A;
    sc_signal< sc_logic > input_AX_ALG_dest_V_0_load_B;
    sc_signal< sc_lv<2> > input_AX_ALG_dest_V_0_state;
    sc_signal< sc_logic > input_AX_ALG_dest_V_0_state_cmp_full;
    sc_signal< sc_lv<32> > output_AX_ALG_data_V_1_data_out;
    sc_signal< sc_logic > output_AX_ALG_data_V_1_vld_in;
    sc_signal< sc_logic > output_AX_ALG_data_V_1_vld_out;
    sc_signal< sc_logic > output_AX_ALG_data_V_1_ack_in;
    sc_signal< sc_logic > output_AX_ALG_data_V_1_ack_out;
    sc_signal< sc_lv<32> > output_AX_ALG_data_V_1_payload_A;
    sc_signal< sc_lv<32> > output_AX_ALG_data_V_1_payload_B;
    sc_signal< sc_logic > output_AX_ALG_data_V_1_sel_rd;
    sc_signal< sc_logic > output_AX_ALG_data_V_1_sel_wr;
    sc_signal< sc_logic > output_AX_ALG_data_V_1_sel;
    sc_signal< sc_logic > output_AX_ALG_data_V_1_load_A;
    sc_signal< sc_logic > output_AX_ALG_data_V_1_load_B;
    sc_signal< sc_lv<2> > output_AX_ALG_data_V_1_state;
    sc_signal< sc_logic > output_AX_ALG_data_V_1_state_cmp_full;
    sc_signal< sc_lv<4> > output_AX_ALG_keep_V_1_data_out;
    sc_signal< sc_logic > output_AX_ALG_keep_V_1_vld_in;
    sc_signal< sc_logic > output_AX_ALG_keep_V_1_vld_out;
    sc_signal< sc_logic > output_AX_ALG_keep_V_1_ack_in;
    sc_signal< sc_logic > output_AX_ALG_keep_V_1_ack_out;
    sc_signal< sc_lv<4> > output_AX_ALG_keep_V_1_payload_A;
    sc_signal< sc_lv<4> > output_AX_ALG_keep_V_1_payload_B;
    sc_signal< sc_logic > output_AX_ALG_keep_V_1_sel_rd;
    sc_signal< sc_logic > output_AX_ALG_keep_V_1_sel_wr;
    sc_signal< sc_logic > output_AX_ALG_keep_V_1_sel;
    sc_signal< sc_logic > output_AX_ALG_keep_V_1_load_A;
    sc_signal< sc_logic > output_AX_ALG_keep_V_1_load_B;
    sc_signal< sc_lv<2> > output_AX_ALG_keep_V_1_state;
    sc_signal< sc_logic > output_AX_ALG_keep_V_1_state_cmp_full;
    sc_signal< sc_lv<4> > output_AX_ALG_strb_V_1_data_out;
    sc_signal< sc_logic > output_AX_ALG_strb_V_1_vld_in;
    sc_signal< sc_logic > output_AX_ALG_strb_V_1_vld_out;
    sc_signal< sc_logic > output_AX_ALG_strb_V_1_ack_in;
    sc_signal< sc_logic > output_AX_ALG_strb_V_1_ack_out;
    sc_signal< sc_lv<4> > output_AX_ALG_strb_V_1_payload_A;
    sc_signal< sc_lv<4> > output_AX_ALG_strb_V_1_payload_B;
    sc_signal< sc_logic > output_AX_ALG_strb_V_1_sel_rd;
    sc_signal< sc_logic > output_AX_ALG_strb_V_1_sel_wr;
    sc_signal< sc_logic > output_AX_ALG_strb_V_1_sel;
    sc_signal< sc_logic > output_AX_ALG_strb_V_1_load_A;
    sc_signal< sc_logic > output_AX_ALG_strb_V_1_load_B;
    sc_signal< sc_lv<2> > output_AX_ALG_strb_V_1_state;
    sc_signal< sc_logic > output_AX_ALG_strb_V_1_state_cmp_full;
    sc_signal< sc_lv<4> > output_AX_ALG_user_V_1_data_out;
    sc_signal< sc_logic > output_AX_ALG_user_V_1_vld_in;
    sc_signal< sc_logic > output_AX_ALG_user_V_1_vld_out;
    sc_signal< sc_logic > output_AX_ALG_user_V_1_ack_in;
    sc_signal< sc_logic > output_AX_ALG_user_V_1_ack_out;
    sc_signal< sc_lv<4> > output_AX_ALG_user_V_1_payload_A;
    sc_signal< sc_lv<4> > output_AX_ALG_user_V_1_payload_B;
    sc_signal< sc_logic > output_AX_ALG_user_V_1_sel_rd;
    sc_signal< sc_logic > output_AX_ALG_user_V_1_sel_wr;
    sc_signal< sc_logic > output_AX_ALG_user_V_1_sel;
    sc_signal< sc_logic > output_AX_ALG_user_V_1_load_A;
    sc_signal< sc_logic > output_AX_ALG_user_V_1_load_B;
    sc_signal< sc_lv<2> > output_AX_ALG_user_V_1_state;
    sc_signal< sc_logic > output_AX_ALG_user_V_1_state_cmp_full;
    sc_signal< sc_lv<1> > output_AX_ALG_last_V_1_data_out;
    sc_signal< sc_logic > output_AX_ALG_last_V_1_vld_in;
    sc_signal< sc_logic > output_AX_ALG_last_V_1_vld_out;
    sc_signal< sc_logic > output_AX_ALG_last_V_1_ack_in;
    sc_signal< sc_logic > output_AX_ALG_last_V_1_ack_out;
    sc_signal< sc_lv<1> > output_AX_ALG_last_V_1_payload_A;
    sc_signal< sc_lv<1> > output_AX_ALG_last_V_1_payload_B;
    sc_signal< sc_logic > output_AX_ALG_last_V_1_sel_rd;
    sc_signal< sc_logic > output_AX_ALG_last_V_1_sel_wr;
    sc_signal< sc_logic > output_AX_ALG_last_V_1_sel;
    sc_signal< sc_logic > output_AX_ALG_last_V_1_load_A;
    sc_signal< sc_logic > output_AX_ALG_last_V_1_load_B;
    sc_signal< sc_lv<2> > output_AX_ALG_last_V_1_state;
    sc_signal< sc_logic > output_AX_ALG_last_V_1_state_cmp_full;
    sc_signal< sc_lv<5> > output_AX_ALG_id_V_1_data_out;
    sc_signal< sc_logic > output_AX_ALG_id_V_1_vld_in;
    sc_signal< sc_logic > output_AX_ALG_id_V_1_vld_out;
    sc_signal< sc_logic > output_AX_ALG_id_V_1_ack_in;
    sc_signal< sc_logic > output_AX_ALG_id_V_1_ack_out;
    sc_signal< sc_lv<5> > output_AX_ALG_id_V_1_payload_A;
    sc_signal< sc_lv<5> > output_AX_ALG_id_V_1_payload_B;
    sc_signal< sc_logic > output_AX_ALG_id_V_1_sel_rd;
    sc_signal< sc_logic > output_AX_ALG_id_V_1_sel_wr;
    sc_signal< sc_logic > output_AX_ALG_id_V_1_sel;
    sc_signal< sc_logic > output_AX_ALG_id_V_1_load_A;
    sc_signal< sc_logic > output_AX_ALG_id_V_1_load_B;
    sc_signal< sc_lv<2> > output_AX_ALG_id_V_1_state;
    sc_signal< sc_logic > output_AX_ALG_id_V_1_state_cmp_full;
    sc_signal< sc_lv<5> > output_AX_ALG_dest_V_1_data_out;
    sc_signal< sc_logic > output_AX_ALG_dest_V_1_vld_in;
    sc_signal< sc_logic > output_AX_ALG_dest_V_1_vld_out;
    sc_signal< sc_logic > output_AX_ALG_dest_V_1_ack_in;
    sc_signal< sc_logic > output_AX_ALG_dest_V_1_ack_out;
    sc_signal< sc_lv<5> > output_AX_ALG_dest_V_1_payload_A;
    sc_signal< sc_lv<5> > output_AX_ALG_dest_V_1_payload_B;
    sc_signal< sc_logic > output_AX_ALG_dest_V_1_sel_rd;
    sc_signal< sc_logic > output_AX_ALG_dest_V_1_sel_wr;
    sc_signal< sc_logic > output_AX_ALG_dest_V_1_sel;
    sc_signal< sc_logic > output_AX_ALG_dest_V_1_load_A;
    sc_signal< sc_logic > output_AX_ALG_dest_V_1_load_B;
    sc_signal< sc_lv<2> > output_AX_ALG_dest_V_1_state;
    sc_signal< sc_logic > output_AX_ALG_dest_V_1_state_cmp_full;
    sc_signal< sc_logic > buf_Tj_in_0_V_read_data_fu_109_input_AX_ALG_TDATA_blk_n;
    sc_signal< sc_logic > input_AX_ALG_TDATA_blk_n;
    sc_signal< sc_lv<5> > ap_CS_fsm;
    sc_signal< sc_logic > ap_CS_fsm_state2;
    sc_signal< sc_lv<24> > p_Val2_1_fu_127_p1;
    sc_signal< sc_lv<24> > p_Val2_1_reg_138;
    sc_signal< sc_logic > grp_sweep_algorithm_DECM_fu_76_ap_start;
    sc_signal< sc_logic > grp_sweep_algorithm_DECM_fu_76_ap_done;
    sc_signal< sc_logic > grp_sweep_algorithm_DECM_fu_76_ap_idle;
    sc_signal< sc_logic > grp_sweep_algorithm_DECM_fu_76_ap_ready;
    sc_signal< sc_logic > grp_write_data_fu_89_ap_start;
    sc_signal< sc_logic > grp_write_data_fu_89_ap_done;
    sc_signal< sc_logic > grp_write_data_fu_89_ap_idle;
    sc_signal< sc_logic > grp_write_data_fu_89_ap_ready;
    sc_signal< sc_lv<32> > grp_write_data_fu_89_output_AX_ALG_TDATA;
    sc_signal< sc_logic > grp_write_data_fu_89_output_AX_ALG_TVALID;
    sc_signal< sc_logic > grp_write_data_fu_89_output_AX_ALG_TREADY;
    sc_signal< sc_lv<4> > grp_write_data_fu_89_output_AX_ALG_TKEEP;
    sc_signal< sc_lv<4> > grp_write_data_fu_89_output_AX_ALG_TSTRB;
    sc_signal< sc_lv<4> > grp_write_data_fu_89_output_AX_ALG_TUSER;
    sc_signal< sc_lv<1> > grp_write_data_fu_89_output_AX_ALG_TLAST;
    sc_signal< sc_lv<5> > grp_write_data_fu_89_output_AX_ALG_TID;
    sc_signal< sc_lv<5> > grp_write_data_fu_89_output_AX_ALG_TDEST;
    sc_signal< sc_logic > buf_Tj_in_0_V_read_data_fu_109_ap_start;
    sc_signal< sc_logic > buf_Tj_in_0_V_read_data_fu_109_ap_done;
    sc_signal< sc_logic > buf_Tj_in_0_V_read_data_fu_109_ap_idle;
    sc_signal< sc_logic > buf_Tj_in_0_V_read_data_fu_109_ap_ready;
    sc_signal< sc_logic > buf_Tj_in_0_V_read_data_fu_109_input_AX_ALG_TVALID;
    sc_signal< sc_logic > buf_Tj_in_0_V_read_data_fu_109_input_AX_ALG_TREADY;
    sc_signal< sc_lv<32> > buf_Tj_in_0_V_read_data_fu_109_ap_return;
    sc_signal< sc_logic > ap_reg_grp_sweep_algorithm_DECM_fu_76_ap_start;
    sc_signal< sc_logic > ap_CS_fsm_state3;
    sc_signal< sc_logic > ap_reg_grp_write_data_fu_89_ap_start;
    sc_signal< sc_lv<1> > tmp_s_fu_132_p2;
    sc_signal< sc_logic > ap_CS_fsm_state4;
    sc_signal< sc_lv<5> > ap_NS_fsm;
    sc_signal< sc_logic > ap_CS_fsm_state5;
    sc_signal< bool > ap_block_state5;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<5> ap_ST_fsm_state1;
    static const sc_lv<5> ap_ST_fsm_state2;
    static const sc_lv<5> ap_ST_fsm_state3;
    static const sc_lv<5> ap_ST_fsm_state4;
    static const sc_lv<5> ap_ST_fsm_state5;
    static const sc_lv<1> ap_const_lv1_0;
    static const sc_lv<1> ap_const_lv1_1;
    static const sc_lv<2> ap_const_lv2_0;
    static const sc_lv<2> ap_const_lv2_2;
    static const sc_lv<2> ap_const_lv2_3;
    static const sc_lv<2> ap_const_lv2_1;
    static const sc_lv<32> ap_const_lv32_1;
    static const sc_lv<32> ap_const_lv32_2;
    static const sc_lv<32> ap_const_lv32_3;
    static const sc_lv<32> ap_const_lv32_0;
    static const sc_lv<32> ap_const_lv32_4;
    static const bool ap_const_boolean_1;
    // Thread declarations
    void thread_ap_var_for_const0();
    void thread_ap_clk_no_reset_();
    void thread_ap_CS_fsm_state2();
    void thread_ap_CS_fsm_state3();
    void thread_ap_CS_fsm_state4();
    void thread_ap_CS_fsm_state5();
    void thread_ap_block_state5();
    void thread_ap_rst_n_inv();
    void thread_buf_Tj_in_0_V_read_data_fu_109_ap_start();
    void thread_buf_Tj_in_0_V_read_data_fu_109_input_AX_ALG_TVALID();
    void thread_grp_sweep_algorithm_DECM_fu_76_ap_start();
    void thread_grp_write_data_fu_89_ap_start();
    void thread_grp_write_data_fu_89_output_AX_ALG_TREADY();
    void thread_input_AX_ALG_TDATA_blk_n();
    void thread_input_AX_ALG_TREADY();
    void thread_input_AX_ALG_data_V_0_ack_in();
    void thread_input_AX_ALG_data_V_0_ack_out();
    void thread_input_AX_ALG_data_V_0_data_out();
    void thread_input_AX_ALG_data_V_0_load_A();
    void thread_input_AX_ALG_data_V_0_load_B();
    void thread_input_AX_ALG_data_V_0_sel();
    void thread_input_AX_ALG_data_V_0_state_cmp_full();
    void thread_input_AX_ALG_data_V_0_vld_in();
    void thread_input_AX_ALG_data_V_0_vld_out();
    void thread_input_AX_ALG_dest_V_0_ack_in();
    void thread_input_AX_ALG_dest_V_0_ack_out();
    void thread_input_AX_ALG_dest_V_0_data_out();
    void thread_input_AX_ALG_dest_V_0_load_A();
    void thread_input_AX_ALG_dest_V_0_load_B();
    void thread_input_AX_ALG_dest_V_0_sel();
    void thread_input_AX_ALG_dest_V_0_state_cmp_full();
    void thread_input_AX_ALG_dest_V_0_vld_in();
    void thread_input_AX_ALG_dest_V_0_vld_out();
    void thread_input_AX_ALG_id_V_0_ack_in();
    void thread_input_AX_ALG_id_V_0_ack_out();
    void thread_input_AX_ALG_id_V_0_data_out();
    void thread_input_AX_ALG_id_V_0_load_A();
    void thread_input_AX_ALG_id_V_0_load_B();
    void thread_input_AX_ALG_id_V_0_sel();
    void thread_input_AX_ALG_id_V_0_state_cmp_full();
    void thread_input_AX_ALG_id_V_0_vld_in();
    void thread_input_AX_ALG_id_V_0_vld_out();
    void thread_input_AX_ALG_keep_V_0_ack_in();
    void thread_input_AX_ALG_keep_V_0_ack_out();
    void thread_input_AX_ALG_keep_V_0_data_out();
    void thread_input_AX_ALG_keep_V_0_load_A();
    void thread_input_AX_ALG_keep_V_0_load_B();
    void thread_input_AX_ALG_keep_V_0_sel();
    void thread_input_AX_ALG_keep_V_0_state_cmp_full();
    void thread_input_AX_ALG_keep_V_0_vld_in();
    void thread_input_AX_ALG_keep_V_0_vld_out();
    void thread_input_AX_ALG_last_V_0_ack_in();
    void thread_input_AX_ALG_last_V_0_ack_out();
    void thread_input_AX_ALG_last_V_0_data_out();
    void thread_input_AX_ALG_last_V_0_load_A();
    void thread_input_AX_ALG_last_V_0_load_B();
    void thread_input_AX_ALG_last_V_0_sel();
    void thread_input_AX_ALG_last_V_0_state_cmp_full();
    void thread_input_AX_ALG_last_V_0_vld_in();
    void thread_input_AX_ALG_last_V_0_vld_out();
    void thread_input_AX_ALG_strb_V_0_ack_in();
    void thread_input_AX_ALG_strb_V_0_ack_out();
    void thread_input_AX_ALG_strb_V_0_data_out();
    void thread_input_AX_ALG_strb_V_0_load_A();
    void thread_input_AX_ALG_strb_V_0_load_B();
    void thread_input_AX_ALG_strb_V_0_sel();
    void thread_input_AX_ALG_strb_V_0_state_cmp_full();
    void thread_input_AX_ALG_strb_V_0_vld_in();
    void thread_input_AX_ALG_strb_V_0_vld_out();
    void thread_input_AX_ALG_user_V_0_ack_in();
    void thread_input_AX_ALG_user_V_0_ack_out();
    void thread_input_AX_ALG_user_V_0_data_out();
    void thread_input_AX_ALG_user_V_0_load_A();
    void thread_input_AX_ALG_user_V_0_load_B();
    void thread_input_AX_ALG_user_V_0_sel();
    void thread_input_AX_ALG_user_V_0_state_cmp_full();
    void thread_input_AX_ALG_user_V_0_vld_in();
    void thread_input_AX_ALG_user_V_0_vld_out();
    void thread_output_AX_ALG_TDATA();
    void thread_output_AX_ALG_TDEST();
    void thread_output_AX_ALG_TID();
    void thread_output_AX_ALG_TKEEP();
    void thread_output_AX_ALG_TLAST();
    void thread_output_AX_ALG_TSTRB();
    void thread_output_AX_ALG_TUSER();
    void thread_output_AX_ALG_TVALID();
    void thread_output_AX_ALG_data_V_1_ack_in();
    void thread_output_AX_ALG_data_V_1_ack_out();
    void thread_output_AX_ALG_data_V_1_data_out();
    void thread_output_AX_ALG_data_V_1_load_A();
    void thread_output_AX_ALG_data_V_1_load_B();
    void thread_output_AX_ALG_data_V_1_sel();
    void thread_output_AX_ALG_data_V_1_state_cmp_full();
    void thread_output_AX_ALG_data_V_1_vld_in();
    void thread_output_AX_ALG_data_V_1_vld_out();
    void thread_output_AX_ALG_dest_V_1_ack_in();
    void thread_output_AX_ALG_dest_V_1_ack_out();
    void thread_output_AX_ALG_dest_V_1_data_out();
    void thread_output_AX_ALG_dest_V_1_load_A();
    void thread_output_AX_ALG_dest_V_1_load_B();
    void thread_output_AX_ALG_dest_V_1_sel();
    void thread_output_AX_ALG_dest_V_1_state_cmp_full();
    void thread_output_AX_ALG_dest_V_1_vld_in();
    void thread_output_AX_ALG_dest_V_1_vld_out();
    void thread_output_AX_ALG_id_V_1_ack_in();
    void thread_output_AX_ALG_id_V_1_ack_out();
    void thread_output_AX_ALG_id_V_1_data_out();
    void thread_output_AX_ALG_id_V_1_load_A();
    void thread_output_AX_ALG_id_V_1_load_B();
    void thread_output_AX_ALG_id_V_1_sel();
    void thread_output_AX_ALG_id_V_1_state_cmp_full();
    void thread_output_AX_ALG_id_V_1_vld_in();
    void thread_output_AX_ALG_id_V_1_vld_out();
    void thread_output_AX_ALG_keep_V_1_ack_in();
    void thread_output_AX_ALG_keep_V_1_ack_out();
    void thread_output_AX_ALG_keep_V_1_data_out();
    void thread_output_AX_ALG_keep_V_1_load_A();
    void thread_output_AX_ALG_keep_V_1_load_B();
    void thread_output_AX_ALG_keep_V_1_sel();
    void thread_output_AX_ALG_keep_V_1_state_cmp_full();
    void thread_output_AX_ALG_keep_V_1_vld_in();
    void thread_output_AX_ALG_keep_V_1_vld_out();
    void thread_output_AX_ALG_last_V_1_ack_in();
    void thread_output_AX_ALG_last_V_1_ack_out();
    void thread_output_AX_ALG_last_V_1_data_out();
    void thread_output_AX_ALG_last_V_1_load_A();
    void thread_output_AX_ALG_last_V_1_load_B();
    void thread_output_AX_ALG_last_V_1_sel();
    void thread_output_AX_ALG_last_V_1_state_cmp_full();
    void thread_output_AX_ALG_last_V_1_vld_in();
    void thread_output_AX_ALG_last_V_1_vld_out();
    void thread_output_AX_ALG_strb_V_1_ack_in();
    void thread_output_AX_ALG_strb_V_1_ack_out();
    void thread_output_AX_ALG_strb_V_1_data_out();
    void thread_output_AX_ALG_strb_V_1_load_A();
    void thread_output_AX_ALG_strb_V_1_load_B();
    void thread_output_AX_ALG_strb_V_1_sel();
    void thread_output_AX_ALG_strb_V_1_state_cmp_full();
    void thread_output_AX_ALG_strb_V_1_vld_in();
    void thread_output_AX_ALG_strb_V_1_vld_out();
    void thread_output_AX_ALG_user_V_1_ack_in();
    void thread_output_AX_ALG_user_V_1_ack_out();
    void thread_output_AX_ALG_user_V_1_data_out();
    void thread_output_AX_ALG_user_V_1_load_A();
    void thread_output_AX_ALG_user_V_1_load_B();
    void thread_output_AX_ALG_user_V_1_sel();
    void thread_output_AX_ALG_user_V_1_state_cmp_full();
    void thread_output_AX_ALG_user_V_1_vld_in();
    void thread_output_AX_ALG_user_V_1_vld_out();
    void thread_p_Val2_1_fu_127_p1();
    void thread_tmp_s_fu_132_p2();
    void thread_ap_NS_fsm();
    void thread_hdltv_gen();
};

}

using namespace ap_rtl;

#endif
