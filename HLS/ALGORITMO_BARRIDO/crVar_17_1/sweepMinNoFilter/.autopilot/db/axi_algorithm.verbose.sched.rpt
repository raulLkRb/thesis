

================================================================
== Vivado HLS Report for 'axi_algorithm'
================================================================
* Date:           Thu Mar 23 12:03:21 2023

* Version:        2017.1 (Build 1846317 on Fri Apr 14 19:19:38 MDT 2017)
* Project:        crVar_17_1
* Solution:       sweepMinNoFilter
* Product family: zynq
* Target device:  xc7z020clg484-1


================================================================
== Performance Estimates
================================================================
+ Timing (ns): 
    * Summary: 
    +--------+-------+----------+------------+
    |  Clock | Target| Estimated| Uncertainty|
    +--------+-------+----------+------------+
    |ap_clk  |  10.00|     11.11|        1.25|
    +--------+-------+----------+------------+

+ Latency (clock cycles): 
    * Summary: 
    +-------+-------+-------+-------+---------+
    |    Latency    |    Interval   | Pipeline|
    |  min  |  max  |  min  |  max  |   Type  |
    +-------+-------+-------+-------+---------+
    |  14345|  25620|  14346|  25621|   none  |
    +-------+-------+-------+-------+---------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        N/A

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 1
ResetActiveHigh: 1
IsCombinational: 0
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 0
HasVarLatency: 1
IsPipeline: 0
IsRtlPipelined: 0
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states: 5
* Pipeline: 0
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 
	2  / true
2 --> 
	3  / true
3 --> 
	4  / (tmp_s)
	5  / (!tmp_s)
4 --> 
	5  / true
5 --> 
* FSM state operations: 

 <State 1>: 0.00ns

 <State 2>: 0.00ns
ST_2: buf_Tj_in_0_V (40)  [1/1] 0.00ns  loc: axi_algorithm.cpp:23
arrayctor.loop1.preheader:20  %buf_Tj_in_0_V = call fastcc i32 @read_data(i32* %input_AX_ALG_data_V, i4* %input_AX_ALG_keep_V, i4* %input_AX_ALG_strb_V, i4* %input_AX_ALG_user_V, i1* %input_AX_ALG_last_V, i5* %input_AX_ALG_id_V, i5* %input_AX_ALG_dest_V)

ST_2: p_Val2_1 (41)  [1/1] 0.00ns  loc: axi_algorithm.cpp:23
arrayctor.loop1.preheader:21  %p_Val2_1 = trunc i32 %buf_Tj_in_0_V to i24

ST_2: StgValue_8 (42)  [2/2] 0.00ns  loc: axi_algorithm.cpp:31
arrayctor.loop1.preheader:22  call fastcc void @sweep_algorithm_DECM(i24 %p_Val2_1)


 <State 3>: 3.26ns
ST_3: StgValue_9 (20)  [1/1] 0.00ns
arrayctor.loop1.preheader:0  call void (...)* @_ssdm_op_SpecBitsMap(i32* %input_AX_ALG_data_V), !map !114

ST_3: StgValue_10 (21)  [1/1] 0.00ns
arrayctor.loop1.preheader:1  call void (...)* @_ssdm_op_SpecBitsMap(i4* %input_AX_ALG_keep_V), !map !118

ST_3: StgValue_11 (22)  [1/1] 0.00ns
arrayctor.loop1.preheader:2  call void (...)* @_ssdm_op_SpecBitsMap(i4* %input_AX_ALG_strb_V), !map !122

ST_3: StgValue_12 (23)  [1/1] 0.00ns
arrayctor.loop1.preheader:3  call void (...)* @_ssdm_op_SpecBitsMap(i4* %input_AX_ALG_user_V), !map !126

ST_3: StgValue_13 (24)  [1/1] 0.00ns
arrayctor.loop1.preheader:4  call void (...)* @_ssdm_op_SpecBitsMap(i1* %input_AX_ALG_last_V), !map !130

ST_3: StgValue_14 (25)  [1/1] 0.00ns
arrayctor.loop1.preheader:5  call void (...)* @_ssdm_op_SpecBitsMap(i5* %input_AX_ALG_id_V), !map !134

ST_3: StgValue_15 (26)  [1/1] 0.00ns
arrayctor.loop1.preheader:6  call void (...)* @_ssdm_op_SpecBitsMap(i5* %input_AX_ALG_dest_V), !map !138

ST_3: StgValue_16 (27)  [1/1] 0.00ns
arrayctor.loop1.preheader:7  call void (...)* @_ssdm_op_SpecBitsMap(i32* %output_AX_ALG_data_V), !map !142

ST_3: StgValue_17 (28)  [1/1] 0.00ns
arrayctor.loop1.preheader:8  call void (...)* @_ssdm_op_SpecBitsMap(i4* %output_AX_ALG_keep_V), !map !148

ST_3: StgValue_18 (29)  [1/1] 0.00ns
arrayctor.loop1.preheader:9  call void (...)* @_ssdm_op_SpecBitsMap(i4* %output_AX_ALG_strb_V), !map !152

ST_3: StgValue_19 (30)  [1/1] 0.00ns
arrayctor.loop1.preheader:10  call void (...)* @_ssdm_op_SpecBitsMap(i4* %output_AX_ALG_user_V), !map !156

ST_3: StgValue_20 (31)  [1/1] 0.00ns
arrayctor.loop1.preheader:11  call void (...)* @_ssdm_op_SpecBitsMap(i1* %output_AX_ALG_last_V), !map !160

ST_3: StgValue_21 (32)  [1/1] 0.00ns
arrayctor.loop1.preheader:12  call void (...)* @_ssdm_op_SpecBitsMap(i5* %output_AX_ALG_id_V), !map !164

ST_3: StgValue_22 (33)  [1/1] 0.00ns
arrayctor.loop1.preheader:13  call void (...)* @_ssdm_op_SpecBitsMap(i5* %output_AX_ALG_dest_V), !map !168

ST_3: StgValue_23 (34)  [1/1] 0.00ns
arrayctor.loop1.preheader:14  call void (...)* @_ssdm_op_SpecBitsMap(i32 %full_fifo), !map !172

ST_3: StgValue_24 (35)  [1/1] 0.00ns
arrayctor.loop1.preheader:15  call void (...)* @_ssdm_op_SpecTopModule([14 x i8]* @axi_algorithm_str) nounwind

ST_3: full_fifo_read (36)  [1/1] 0.00ns
arrayctor.loop1.preheader:16  %full_fifo_read = call i32 @_ssdm_op_Read.ap_auto.i32(i32 %full_fifo)

ST_3: StgValue_26 (37)  [1/1] 0.00ns  loc: axi_algorithm.cpp:9
arrayctor.loop1.preheader:17  call void (...)* @_ssdm_op_SpecInterface(i32 0, [13 x i8]* @p_str, i32 0, i32 0, [1 x i8]* @p_str1, i32 0, i32 0, [12 x i8]* @p_str2, [1 x i8]* @p_str1, [1 x i8]* @p_str1, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @p_str1, [1 x i8]* @p_str1) nounwind

ST_3: StgValue_27 (38)  [1/1] 0.00ns
arrayctor.loop1.preheader:18  call void (...)* @_ssdm_op_SpecInterface(i32* %input_AX_ALG_data_V, i4* %input_AX_ALG_keep_V, i4* %input_AX_ALG_strb_V, i4* %input_AX_ALG_user_V, i1* %input_AX_ALG_last_V, i5* %input_AX_ALG_id_V, i5* %input_AX_ALG_dest_V, [5 x i8]* @p_str3, i32 1, i32 1, [5 x i8]* @p_str4, i32 0, i32 0, [1 x i8]* @p_str1, [1 x i8]* @p_str1, [1 x i8]* @p_str1, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @p_str1, [1 x i8]* @p_str1)

ST_3: StgValue_28 (39)  [1/1] 0.00ns
arrayctor.loop1.preheader:19  call void (...)* @_ssdm_op_SpecInterface(i32* %output_AX_ALG_data_V, i4* %output_AX_ALG_keep_V, i4* %output_AX_ALG_strb_V, i4* %output_AX_ALG_user_V, i1* %output_AX_ALG_last_V, i5* %output_AX_ALG_id_V, i5* %output_AX_ALG_dest_V, [5 x i8]* @p_str3, i32 1, i32 1, [5 x i8]* @p_str4, i32 0, i32 0, [1 x i8]* @p_str1, [1 x i8]* @p_str1, [1 x i8]* @p_str1, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @p_str1, [1 x i8]* @p_str1)

ST_3: StgValue_29 (42)  [1/2] 0.00ns  loc: axi_algorithm.cpp:31
arrayctor.loop1.preheader:22  call fastcc void @sweep_algorithm_DECM(i24 %p_Val2_1)

ST_3: tmp_s (43)  [1/1] 3.26ns  loc: axi_algorithm.cpp:37
arrayctor.loop1.preheader:23  %tmp_s = icmp eq i32 %full_fifo_read, 0

ST_3: StgValue_31 (44)  [1/1] 0.00ns  loc: axi_algorithm.cpp:37
arrayctor.loop1.preheader:24  br i1 %tmp_s, label %0, label %._crit_edge

ST_3: StgValue_32 (46)  [2/2] 0.00ns  loc: axi_algorithm.cpp:41
:0  call fastcc void @write_data(i1 undef, i32* %output_AX_ALG_data_V, i4* %output_AX_ALG_keep_V, i4* %output_AX_ALG_strb_V, i4* %output_AX_ALG_user_V, i1* %output_AX_ALG_last_V, i5* %output_AX_ALG_id_V, i5* %output_AX_ALG_dest_V)


 <State 4>: 1.96ns
ST_4: StgValue_33 (46)  [1/2] 1.96ns  loc: axi_algorithm.cpp:41
:0  call fastcc void @write_data(i1 undef, i32* %output_AX_ALG_data_V, i4* %output_AX_ALG_keep_V, i4* %output_AX_ALG_strb_V, i4* %output_AX_ALG_user_V, i1* %output_AX_ALG_last_V, i5* %output_AX_ALG_id_V, i5* %output_AX_ALG_dest_V)

ST_4: StgValue_34 (47)  [1/1] 0.00ns  loc: axi_algorithm.cpp:42
:1  br label %._crit_edge


 <State 5>: 0.00ns
ST_5: StgValue_35 (49)  [1/1] 0.00ns  loc: axi_algorithm.cpp:44
._crit_edge:0  ret void



============================================================
+ Verbose Summary: Timing violations
============================================================
Target clock period: 10ns, clock uncertainty: 1.25ns.

 <State 1>: 0ns
The critical path consists of the following:

 <State 2>: 0ns
The critical path consists of the following:

 <State 3>: 3.26ns
The critical path consists of the following:
	wire read on port 'full_fifo' [36]  (0 ns)
	'icmp' operation ('tmp_s', axi_algorithm.cpp:37) [43]  (3.26 ns)

 <State 4>: 1.96ns
The critical path consists of the following:
	'call' operation (axi_algorithm.cpp:41) to 'write_data' [46]  (1.96 ns)

 <State 5>: 0ns
The critical path consists of the following:


============================================================
+ Verbose Summary: Binding
============================================================
N/A
* FSMD analyzer results:
  - Output states:
 - Input state : 
  - Chain level:
	State 1
	State 2
	State 3
	State 4
	State 5


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================
N/A
