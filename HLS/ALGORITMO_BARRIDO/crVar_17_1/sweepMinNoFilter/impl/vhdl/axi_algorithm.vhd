-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
-- Version: 2017.1
-- Copyright (C) 1986-2017 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity axi_algorithm is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst_n : IN STD_LOGIC;
    input_AX_ALG_TDATA : IN STD_LOGIC_VECTOR (31 downto 0);
    input_AX_ALG_TKEEP : IN STD_LOGIC_VECTOR (3 downto 0);
    input_AX_ALG_TSTRB : IN STD_LOGIC_VECTOR (3 downto 0);
    input_AX_ALG_TUSER : IN STD_LOGIC_VECTOR (3 downto 0);
    input_AX_ALG_TLAST : IN STD_LOGIC_VECTOR (0 downto 0);
    input_AX_ALG_TID : IN STD_LOGIC_VECTOR (4 downto 0);
    input_AX_ALG_TDEST : IN STD_LOGIC_VECTOR (4 downto 0);
    output_AX_ALG_TDATA : OUT STD_LOGIC_VECTOR (31 downto 0);
    output_AX_ALG_TKEEP : OUT STD_LOGIC_VECTOR (3 downto 0);
    output_AX_ALG_TSTRB : OUT STD_LOGIC_VECTOR (3 downto 0);
    output_AX_ALG_TUSER : OUT STD_LOGIC_VECTOR (3 downto 0);
    output_AX_ALG_TLAST : OUT STD_LOGIC_VECTOR (0 downto 0);
    output_AX_ALG_TID : OUT STD_LOGIC_VECTOR (4 downto 0);
    output_AX_ALG_TDEST : OUT STD_LOGIC_VECTOR (4 downto 0);
    full_fifo : IN STD_LOGIC_VECTOR (31 downto 0);
    input_AX_ALG_TVALID : IN STD_LOGIC;
    input_AX_ALG_TREADY : OUT STD_LOGIC;
    output_AX_ALG_TVALID : OUT STD_LOGIC;
    output_AX_ALG_TREADY : IN STD_LOGIC );
end;


architecture behav of axi_algorithm is 
    attribute CORE_GENERATION_INFO : STRING;
    attribute CORE_GENERATION_INFO of behav : architecture is
    "axi_algorithm,hls_ip_2017_1,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xc7z020clg484-1,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=dataflow,HLS_SYN_CLOCK=9.816500,HLS_SYN_LAT=7696,HLS_SYN_TPT=7691,HLS_SYN_MEM=9,HLS_SYN_DSP=2,HLS_SYN_FF=1009,HLS_SYN_LUT=1610}";
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv4_0 : STD_LOGIC_VECTOR (3 downto 0) := "0000";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv5_0 : STD_LOGIC_VECTOR (4 downto 0) := "00000";
    constant ap_const_logic_0 : STD_LOGIC := '0';

    signal ap_rst_n_inv : STD_LOGIC;
    signal buf_DISTANCEX_out_V_i_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal buf_DISTANCEX_out_V_t_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal read_data49_U0_ap_start : STD_LOGIC;
    signal read_data49_U0_ap_done : STD_LOGIC;
    signal read_data49_U0_ap_continue : STD_LOGIC;
    signal read_data49_U0_ap_idle : STD_LOGIC;
    signal read_data49_U0_ap_ready : STD_LOGIC;
    signal read_data49_U0_full_fifo_out_din : STD_LOGIC_VECTOR (31 downto 0);
    signal read_data49_U0_full_fifo_out_write : STD_LOGIC;
    signal read_data49_U0_input_AX_ALG_TREADY : STD_LOGIC;
    signal read_data49_U0_ap_return : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_channel_done_buf_Tj_in_0_V : STD_LOGIC;
    signal buf_Tj_in_0_V_full_n : STD_LOGIC;
    signal Block_arrayctor_loop_1_U0_ap_start : STD_LOGIC;
    signal Block_arrayctor_loop_1_U0_ap_done : STD_LOGIC;
    signal Block_arrayctor_loop_1_U0_ap_continue : STD_LOGIC;
    signal Block_arrayctor_loop_1_U0_ap_idle : STD_LOGIC;
    signal Block_arrayctor_loop_1_U0_ap_ready : STD_LOGIC;
    signal Block_arrayctor_loop_1_U0_ap_return : STD_LOGIC_VECTOR (23 downto 0);
    signal ap_channel_done_p_Val2_cast_loc_ch : STD_LOGIC;
    signal p_Val2_cast_loc_ch_full_n : STD_LOGIC;
    signal sweep_algorithm_DECM_U0_ap_start : STD_LOGIC;
    signal sweep_algorithm_DECM_U0_ap_done : STD_LOGIC;
    signal sweep_algorithm_DECM_U0_ap_continue : STD_LOGIC;
    signal sweep_algorithm_DECM_U0_ap_idle : STD_LOGIC;
    signal sweep_algorithm_DECM_U0_ap_ready : STD_LOGIC;
    signal sweep_algorithm_DECM_U0_currentGroupX_OUT_V_address0 : STD_LOGIC_VECTOR (1 downto 0);
    signal sweep_algorithm_DECM_U0_currentGroupX_OUT_V_ce0 : STD_LOGIC;
    signal sweep_algorithm_DECM_U0_currentGroupX_OUT_V_we0 : STD_LOGIC;
    signal sweep_algorithm_DECM_U0_currentGroupX_OUT_V_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_channel_done_buf_DISTANCEX_out_V : STD_LOGIC;
    signal sweep_algorithm_DECM_U0_currentGroupX_OUT_V_full_n : STD_LOGIC;
    signal Block_arrayctor_loop_U0_ap_start : STD_LOGIC;
    signal Block_arrayctor_loop_U0_ap_done : STD_LOGIC;
    signal Block_arrayctor_loop_U0_ap_continue : STD_LOGIC;
    signal Block_arrayctor_loop_U0_ap_idle : STD_LOGIC;
    signal Block_arrayctor_loop_U0_ap_ready : STD_LOGIC;
    signal Block_arrayctor_loop_U0_full_fifo_read : STD_LOGIC;
    signal Block_arrayctor_loop_U0_buf_DISTANCEX_out_V_address0 : STD_LOGIC_VECTOR (1 downto 0);
    signal Block_arrayctor_loop_U0_buf_DISTANCEX_out_V_ce0 : STD_LOGIC;
    signal Block_arrayctor_loop_U0_output_AX_ALG_TDATA : STD_LOGIC_VECTOR (31 downto 0);
    signal Block_arrayctor_loop_U0_output_AX_ALG_TVALID : STD_LOGIC;
    signal Block_arrayctor_loop_U0_output_AX_ALG_TKEEP : STD_LOGIC_VECTOR (3 downto 0);
    signal Block_arrayctor_loop_U0_output_AX_ALG_TSTRB : STD_LOGIC_VECTOR (3 downto 0);
    signal Block_arrayctor_loop_U0_output_AX_ALG_TUSER : STD_LOGIC_VECTOR (3 downto 0);
    signal Block_arrayctor_loop_U0_output_AX_ALG_TLAST : STD_LOGIC_VECTOR (0 downto 0);
    signal Block_arrayctor_loop_U0_output_AX_ALG_TID : STD_LOGIC_VECTOR (4 downto 0);
    signal Block_arrayctor_loop_U0_output_AX_ALG_TDEST : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_sync_continue : STD_LOGIC;
    signal buf_DISTANCEX_out_V_i_full_n : STD_LOGIC;
    signal buf_DISTANCEX_out_V_t_empty_n : STD_LOGIC;
    signal full_fifo_channel_full_n : STD_LOGIC;
    signal full_fifo_channel_dout : STD_LOGIC_VECTOR (31 downto 0);
    signal full_fifo_channel_empty_n : STD_LOGIC;
    signal buf_Tj_in_0_V_dout : STD_LOGIC_VECTOR (31 downto 0);
    signal buf_Tj_in_0_V_empty_n : STD_LOGIC;
    signal p_Val2_cast_loc_ch_dout : STD_LOGIC_VECTOR (23 downto 0);
    signal p_Val2_cast_loc_ch_empty_n : STD_LOGIC;
    signal read_data49_U0_start_full_n : STD_LOGIC;
    signal read_data49_U0_start_write : STD_LOGIC;
    signal Block_arrayctor_loop_1_U0_start_full_n : STD_LOGIC;
    signal Block_arrayctor_loop_1_U0_start_write : STD_LOGIC;
    signal sweep_algorithm_DECM_U0_start_full_n : STD_LOGIC;
    signal sweep_algorithm_DECM_U0_start_write : STD_LOGIC;
    signal Block_arrayctor_loop_U0_start_full_n : STD_LOGIC;
    signal Block_arrayctor_loop_U0_start_write : STD_LOGIC;

    component read_data49 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        full_fifo_out_din : OUT STD_LOGIC_VECTOR (31 downto 0);
        full_fifo_out_full_n : IN STD_LOGIC;
        full_fifo_out_write : OUT STD_LOGIC;
        input_AX_ALG_TDATA : IN STD_LOGIC_VECTOR (31 downto 0);
        input_AX_ALG_TVALID : IN STD_LOGIC;
        input_AX_ALG_TREADY : OUT STD_LOGIC;
        input_AX_ALG_TKEEP : IN STD_LOGIC_VECTOR (3 downto 0);
        input_AX_ALG_TSTRB : IN STD_LOGIC_VECTOR (3 downto 0);
        input_AX_ALG_TUSER : IN STD_LOGIC_VECTOR (3 downto 0);
        input_AX_ALG_TLAST : IN STD_LOGIC_VECTOR (0 downto 0);
        input_AX_ALG_TID : IN STD_LOGIC_VECTOR (4 downto 0);
        input_AX_ALG_TDEST : IN STD_LOGIC_VECTOR (4 downto 0);
        full_fifo : IN STD_LOGIC_VECTOR (31 downto 0);
        ap_return : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component Block_arrayctor_loop_1 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        p_read : IN STD_LOGIC_VECTOR (31 downto 0);
        ap_return : OUT STD_LOGIC_VECTOR (23 downto 0) );
    end component;


    component sweep_algorithm_DECM IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        p_read : IN STD_LOGIC_VECTOR (23 downto 0);
        currentGroupX_OUT_V_address0 : OUT STD_LOGIC_VECTOR (1 downto 0);
        currentGroupX_OUT_V_ce0 : OUT STD_LOGIC;
        currentGroupX_OUT_V_we0 : OUT STD_LOGIC;
        currentGroupX_OUT_V_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        currentGroupX_OUT_V_q0 : IN STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component Block_arrayctor_loop IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        full_fifo_dout : IN STD_LOGIC_VECTOR (31 downto 0);
        full_fifo_empty_n : IN STD_LOGIC;
        full_fifo_read : OUT STD_LOGIC;
        buf_DISTANCEX_out_V_address0 : OUT STD_LOGIC_VECTOR (1 downto 0);
        buf_DISTANCEX_out_V_ce0 : OUT STD_LOGIC;
        buf_DISTANCEX_out_V_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        output_AX_ALG_TDATA : OUT STD_LOGIC_VECTOR (31 downto 0);
        output_AX_ALG_TVALID : OUT STD_LOGIC;
        output_AX_ALG_TREADY : IN STD_LOGIC;
        output_AX_ALG_TKEEP : OUT STD_LOGIC_VECTOR (3 downto 0);
        output_AX_ALG_TSTRB : OUT STD_LOGIC_VECTOR (3 downto 0);
        output_AX_ALG_TUSER : OUT STD_LOGIC_VECTOR (3 downto 0);
        output_AX_ALG_TLAST : OUT STD_LOGIC_VECTOR (0 downto 0);
        output_AX_ALG_TID : OUT STD_LOGIC_VECTOR (4 downto 0);
        output_AX_ALG_TDEST : OUT STD_LOGIC_VECTOR (4 downto 0) );
    end component;


    component axi_algorithm_buffYi IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        i_address0 : IN STD_LOGIC_VECTOR (1 downto 0);
        i_ce0 : IN STD_LOGIC;
        i_we0 : IN STD_LOGIC;
        i_d0 : IN STD_LOGIC_VECTOR (31 downto 0);
        i_q0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        t_address0 : IN STD_LOGIC_VECTOR (1 downto 0);
        t_ce0 : IN STD_LOGIC;
        t_we0 : IN STD_LOGIC;
        t_d0 : IN STD_LOGIC_VECTOR (31 downto 0);
        t_q0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        i_ce : IN STD_LOGIC;
        t_ce : IN STD_LOGIC;
        i_full_n : OUT STD_LOGIC;
        i_write : IN STD_LOGIC;
        t_empty_n : OUT STD_LOGIC;
        t_read : IN STD_LOGIC );
    end component;


    component fifo_w32_d3_A IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (31 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (31 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component fifo_w32_d2_A IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (31 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (31 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component fifo_w24_d2_A IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (23 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (23 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;



begin
    buf_DISTANCEX_out_V_U : component axi_algorithm_buffYi
    generic map (
        DataWidth => 32,
        AddressRange => 4,
        AddressWidth => 2)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        i_address0 => sweep_algorithm_DECM_U0_currentGroupX_OUT_V_address0,
        i_ce0 => sweep_algorithm_DECM_U0_currentGroupX_OUT_V_ce0,
        i_we0 => sweep_algorithm_DECM_U0_currentGroupX_OUT_V_we0,
        i_d0 => sweep_algorithm_DECM_U0_currentGroupX_OUT_V_d0,
        i_q0 => buf_DISTANCEX_out_V_i_q0,
        t_address0 => Block_arrayctor_loop_U0_buf_DISTANCEX_out_V_address0,
        t_ce0 => Block_arrayctor_loop_U0_buf_DISTANCEX_out_V_ce0,
        t_we0 => ap_const_logic_0,
        t_d0 => ap_const_lv32_0,
        t_q0 => buf_DISTANCEX_out_V_t_q0,
        i_ce => ap_const_logic_1,
        t_ce => ap_const_logic_1,
        i_full_n => buf_DISTANCEX_out_V_i_full_n,
        i_write => sweep_algorithm_DECM_U0_ap_done,
        t_empty_n => buf_DISTANCEX_out_V_t_empty_n,
        t_read => Block_arrayctor_loop_U0_ap_ready);

    read_data49_U0 : component read_data49
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => read_data49_U0_ap_start,
        ap_done => read_data49_U0_ap_done,
        ap_continue => read_data49_U0_ap_continue,
        ap_idle => read_data49_U0_ap_idle,
        ap_ready => read_data49_U0_ap_ready,
        full_fifo_out_din => read_data49_U0_full_fifo_out_din,
        full_fifo_out_full_n => full_fifo_channel_full_n,
        full_fifo_out_write => read_data49_U0_full_fifo_out_write,
        input_AX_ALG_TDATA => input_AX_ALG_TDATA,
        input_AX_ALG_TVALID => input_AX_ALG_TVALID,
        input_AX_ALG_TREADY => read_data49_U0_input_AX_ALG_TREADY,
        input_AX_ALG_TKEEP => input_AX_ALG_TKEEP,
        input_AX_ALG_TSTRB => input_AX_ALG_TSTRB,
        input_AX_ALG_TUSER => input_AX_ALG_TUSER,
        input_AX_ALG_TLAST => input_AX_ALG_TLAST,
        input_AX_ALG_TID => input_AX_ALG_TID,
        input_AX_ALG_TDEST => input_AX_ALG_TDEST,
        full_fifo => full_fifo,
        ap_return => read_data49_U0_ap_return);

    Block_arrayctor_loop_1_U0 : component Block_arrayctor_loop_1
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => Block_arrayctor_loop_1_U0_ap_start,
        ap_done => Block_arrayctor_loop_1_U0_ap_done,
        ap_continue => Block_arrayctor_loop_1_U0_ap_continue,
        ap_idle => Block_arrayctor_loop_1_U0_ap_idle,
        ap_ready => Block_arrayctor_loop_1_U0_ap_ready,
        p_read => buf_Tj_in_0_V_dout,
        ap_return => Block_arrayctor_loop_1_U0_ap_return);

    sweep_algorithm_DECM_U0 : component sweep_algorithm_DECM
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => sweep_algorithm_DECM_U0_ap_start,
        ap_done => sweep_algorithm_DECM_U0_ap_done,
        ap_continue => sweep_algorithm_DECM_U0_ap_continue,
        ap_idle => sweep_algorithm_DECM_U0_ap_idle,
        ap_ready => sweep_algorithm_DECM_U0_ap_ready,
        p_read => p_Val2_cast_loc_ch_dout,
        currentGroupX_OUT_V_address0 => sweep_algorithm_DECM_U0_currentGroupX_OUT_V_address0,
        currentGroupX_OUT_V_ce0 => sweep_algorithm_DECM_U0_currentGroupX_OUT_V_ce0,
        currentGroupX_OUT_V_we0 => sweep_algorithm_DECM_U0_currentGroupX_OUT_V_we0,
        currentGroupX_OUT_V_d0 => sweep_algorithm_DECM_U0_currentGroupX_OUT_V_d0,
        currentGroupX_OUT_V_q0 => buf_DISTANCEX_out_V_i_q0);

    Block_arrayctor_loop_U0 : component Block_arrayctor_loop
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => Block_arrayctor_loop_U0_ap_start,
        ap_done => Block_arrayctor_loop_U0_ap_done,
        ap_continue => Block_arrayctor_loop_U0_ap_continue,
        ap_idle => Block_arrayctor_loop_U0_ap_idle,
        ap_ready => Block_arrayctor_loop_U0_ap_ready,
        full_fifo_dout => full_fifo_channel_dout,
        full_fifo_empty_n => full_fifo_channel_empty_n,
        full_fifo_read => Block_arrayctor_loop_U0_full_fifo_read,
        buf_DISTANCEX_out_V_address0 => Block_arrayctor_loop_U0_buf_DISTANCEX_out_V_address0,
        buf_DISTANCEX_out_V_ce0 => Block_arrayctor_loop_U0_buf_DISTANCEX_out_V_ce0,
        buf_DISTANCEX_out_V_q0 => buf_DISTANCEX_out_V_t_q0,
        output_AX_ALG_TDATA => Block_arrayctor_loop_U0_output_AX_ALG_TDATA,
        output_AX_ALG_TVALID => Block_arrayctor_loop_U0_output_AX_ALG_TVALID,
        output_AX_ALG_TREADY => output_AX_ALG_TREADY,
        output_AX_ALG_TKEEP => Block_arrayctor_loop_U0_output_AX_ALG_TKEEP,
        output_AX_ALG_TSTRB => Block_arrayctor_loop_U0_output_AX_ALG_TSTRB,
        output_AX_ALG_TUSER => Block_arrayctor_loop_U0_output_AX_ALG_TUSER,
        output_AX_ALG_TLAST => Block_arrayctor_loop_U0_output_AX_ALG_TLAST,
        output_AX_ALG_TID => Block_arrayctor_loop_U0_output_AX_ALG_TID,
        output_AX_ALG_TDEST => Block_arrayctor_loop_U0_output_AX_ALG_TDEST);

    full_fifo_channel_U : component fifo_w32_d3_A
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => read_data49_U0_full_fifo_out_din,
        if_full_n => full_fifo_channel_full_n,
        if_write => read_data49_U0_full_fifo_out_write,
        if_dout => full_fifo_channel_dout,
        if_empty_n => full_fifo_channel_empty_n,
        if_read => Block_arrayctor_loop_U0_full_fifo_read);

    buf_Tj_in_0_V_U : component fifo_w32_d2_A
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => read_data49_U0_ap_return,
        if_full_n => buf_Tj_in_0_V_full_n,
        if_write => read_data49_U0_ap_done,
        if_dout => buf_Tj_in_0_V_dout,
        if_empty_n => buf_Tj_in_0_V_empty_n,
        if_read => Block_arrayctor_loop_1_U0_ap_ready);

    p_Val2_cast_loc_ch_U : component fifo_w24_d2_A
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => Block_arrayctor_loop_1_U0_ap_return,
        if_full_n => p_Val2_cast_loc_ch_full_n,
        if_write => Block_arrayctor_loop_1_U0_ap_done,
        if_dout => p_Val2_cast_loc_ch_dout,
        if_empty_n => p_Val2_cast_loc_ch_empty_n,
        if_read => sweep_algorithm_DECM_U0_ap_ready);




    Block_arrayctor_loop_1_U0_ap_continue <= p_Val2_cast_loc_ch_full_n;
    Block_arrayctor_loop_1_U0_ap_start <= buf_Tj_in_0_V_empty_n;
    Block_arrayctor_loop_1_U0_start_full_n <= ap_const_logic_0;
    Block_arrayctor_loop_1_U0_start_write <= ap_const_logic_0;
    Block_arrayctor_loop_U0_ap_continue <= ap_const_logic_1;
    Block_arrayctor_loop_U0_ap_start <= buf_DISTANCEX_out_V_t_empty_n;
    Block_arrayctor_loop_U0_start_full_n <= ap_const_logic_0;
    Block_arrayctor_loop_U0_start_write <= ap_const_logic_0;
    ap_channel_done_buf_DISTANCEX_out_V <= sweep_algorithm_DECM_U0_ap_done;
    ap_channel_done_buf_Tj_in_0_V <= read_data49_U0_ap_done;
    ap_channel_done_p_Val2_cast_loc_ch <= Block_arrayctor_loop_1_U0_ap_done;

    ap_rst_n_inv_assign_proc : process(ap_rst_n)
    begin
                ap_rst_n_inv <= not(ap_rst_n);
    end process;

    ap_sync_continue <= ap_const_logic_0;
    input_AX_ALG_TREADY <= read_data49_U0_input_AX_ALG_TREADY;
    output_AX_ALG_TDATA <= Block_arrayctor_loop_U0_output_AX_ALG_TDATA;
    output_AX_ALG_TDEST <= Block_arrayctor_loop_U0_output_AX_ALG_TDEST;
    output_AX_ALG_TID <= Block_arrayctor_loop_U0_output_AX_ALG_TID;
    output_AX_ALG_TKEEP <= Block_arrayctor_loop_U0_output_AX_ALG_TKEEP;
    output_AX_ALG_TLAST <= Block_arrayctor_loop_U0_output_AX_ALG_TLAST;
    output_AX_ALG_TSTRB <= Block_arrayctor_loop_U0_output_AX_ALG_TSTRB;
    output_AX_ALG_TUSER <= Block_arrayctor_loop_U0_output_AX_ALG_TUSER;
    output_AX_ALG_TVALID <= Block_arrayctor_loop_U0_output_AX_ALG_TVALID;
    read_data49_U0_ap_continue <= buf_Tj_in_0_V_full_n;
    read_data49_U0_ap_start <= ap_const_logic_1;
    read_data49_U0_start_full_n <= ap_const_logic_0;
    read_data49_U0_start_write <= ap_const_logic_0;
    sweep_algorithm_DECM_U0_ap_continue <= buf_DISTANCEX_out_V_i_full_n;
    sweep_algorithm_DECM_U0_ap_start <= p_Val2_cast_loc_ch_empty_n;
    sweep_algorithm_DECM_U0_currentGroupX_OUT_V_full_n <= buf_DISTANCEX_out_V_i_full_n;
    sweep_algorithm_DECM_U0_start_full_n <= ap_const_logic_0;
    sweep_algorithm_DECM_U0_start_write <= ap_const_logic_0;
end behav;
