// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2017.1
// Copyright (C) 1986-2017 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _axi_algorithm_HH_
#define _axi_algorithm_HH_

#include "systemc.h"
#include "AESL_pkg.h"

#include "read_data.h"
#include "Block_arrayctor_loop.h"
#include "sweep_algorithm_DECM.h"
#include "write_data.h"
#include "axi_algorithm_bufg8j.h"
#include "fifo_w32_d2_A.h"
#include "fifo_w24_d2_A.h"

namespace ap_rtl {

struct axi_algorithm : public sc_module {
    // Port declarations 20
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst_n;
    sc_in< sc_lv<32> > input_AX_ALG_TDATA;
    sc_in< sc_lv<4> > input_AX_ALG_TKEEP;
    sc_in< sc_lv<4> > input_AX_ALG_TSTRB;
    sc_in< sc_lv<4> > input_AX_ALG_TUSER;
    sc_in< sc_lv<1> > input_AX_ALG_TLAST;
    sc_in< sc_lv<5> > input_AX_ALG_TID;
    sc_in< sc_lv<5> > input_AX_ALG_TDEST;
    sc_out< sc_lv<32> > output_AX_ALG_TDATA;
    sc_out< sc_lv<4> > output_AX_ALG_TKEEP;
    sc_out< sc_lv<4> > output_AX_ALG_TSTRB;
    sc_out< sc_lv<4> > output_AX_ALG_TUSER;
    sc_out< sc_lv<1> > output_AX_ALG_TLAST;
    sc_out< sc_lv<5> > output_AX_ALG_TID;
    sc_out< sc_lv<5> > output_AX_ALG_TDEST;
    sc_in< sc_logic > input_AX_ALG_TVALID;
    sc_out< sc_logic > input_AX_ALG_TREADY;
    sc_out< sc_logic > output_AX_ALG_TVALID;
    sc_in< sc_logic > output_AX_ALG_TREADY;
    sc_signal< sc_logic > ap_var_for_const2;
    sc_signal< sc_lv<32> > ap_var_for_const1;
    sc_signal< sc_logic > ap_var_for_const0;


    // Module declarations
    axi_algorithm(sc_module_name name);
    SC_HAS_PROCESS(axi_algorithm);

    ~axi_algorithm();

    sc_trace_file* mVcdFile;

    ofstream mHdltvinHandle;
    ofstream mHdltvoutHandle;
    axi_algorithm_bufg8j* buf_DISTANCEX_out_V_U;
    read_data* read_data_U0;
    Block_arrayctor_loop* Block_arrayctor_loop_U0;
    sweep_algorithm_DECM* sweep_algorithm_DECM_U0;
    write_data* write_data_U0;
    fifo_w32_d2_A* buf_Tj_in_0_V_U;
    fifo_w24_d2_A* p_Val2_cast_loc_ch_U;
    sc_signal< sc_logic > ap_rst_n_inv;
    sc_signal< sc_lv<32> > buf_DISTANCEX_out_V_i_q0;
    sc_signal< sc_lv<32> > buf_DISTANCEX_out_V_t_q0;
    sc_signal< sc_logic > read_data_U0_ap_start;
    sc_signal< sc_logic > read_data_U0_ap_done;
    sc_signal< sc_logic > read_data_U0_ap_continue;
    sc_signal< sc_logic > read_data_U0_ap_idle;
    sc_signal< sc_logic > read_data_U0_ap_ready;
    sc_signal< sc_logic > read_data_U0_input_AX_ALG_TREADY;
    sc_signal< sc_lv<32> > read_data_U0_ap_return;
    sc_signal< sc_logic > ap_channel_done_buf_Tj_in_0_V;
    sc_signal< sc_logic > buf_Tj_in_0_V_full_n;
    sc_signal< sc_logic > Block_arrayctor_loop_U0_ap_start;
    sc_signal< sc_logic > Block_arrayctor_loop_U0_ap_done;
    sc_signal< sc_logic > Block_arrayctor_loop_U0_ap_continue;
    sc_signal< sc_logic > Block_arrayctor_loop_U0_ap_idle;
    sc_signal< sc_logic > Block_arrayctor_loop_U0_ap_ready;
    sc_signal< sc_lv<24> > Block_arrayctor_loop_U0_ap_return;
    sc_signal< sc_logic > ap_channel_done_p_Val2_cast_loc_ch;
    sc_signal< sc_logic > p_Val2_cast_loc_ch_full_n;
    sc_signal< sc_logic > sweep_algorithm_DECM_U0_ap_start;
    sc_signal< sc_logic > sweep_algorithm_DECM_U0_ap_done;
    sc_signal< sc_logic > sweep_algorithm_DECM_U0_ap_continue;
    sc_signal< sc_logic > sweep_algorithm_DECM_U0_ap_idle;
    sc_signal< sc_logic > sweep_algorithm_DECM_U0_ap_ready;
    sc_signal< sc_lv<2> > sweep_algorithm_DECM_U0_currentGroupX_OUT_V_address0;
    sc_signal< sc_logic > sweep_algorithm_DECM_U0_currentGroupX_OUT_V_ce0;
    sc_signal< sc_logic > sweep_algorithm_DECM_U0_currentGroupX_OUT_V_we0;
    sc_signal< sc_lv<32> > sweep_algorithm_DECM_U0_currentGroupX_OUT_V_d0;
    sc_signal< sc_logic > ap_channel_done_buf_DISTANCEX_out_V;
    sc_signal< sc_logic > sweep_algorithm_DECM_U0_currentGroupX_OUT_V_full_n;
    sc_signal< sc_logic > write_data_U0_ap_start;
    sc_signal< sc_logic > write_data_U0_ap_done;
    sc_signal< sc_logic > write_data_U0_ap_continue;
    sc_signal< sc_logic > write_data_U0_ap_idle;
    sc_signal< sc_logic > write_data_U0_ap_ready;
    sc_signal< sc_lv<2> > write_data_U0_buf_V_address0;
    sc_signal< sc_logic > write_data_U0_buf_V_ce0;
    sc_signal< sc_lv<32> > write_data_U0_output_AX_ALG_TDATA;
    sc_signal< sc_logic > write_data_U0_output_AX_ALG_TVALID;
    sc_signal< sc_lv<4> > write_data_U0_output_AX_ALG_TKEEP;
    sc_signal< sc_lv<4> > write_data_U0_output_AX_ALG_TSTRB;
    sc_signal< sc_lv<4> > write_data_U0_output_AX_ALG_TUSER;
    sc_signal< sc_lv<1> > write_data_U0_output_AX_ALG_TLAST;
    sc_signal< sc_lv<5> > write_data_U0_output_AX_ALG_TID;
    sc_signal< sc_lv<5> > write_data_U0_output_AX_ALG_TDEST;
    sc_signal< sc_logic > ap_sync_continue;
    sc_signal< sc_logic > buf_DISTANCEX_out_V_i_full_n;
    sc_signal< sc_logic > buf_DISTANCEX_out_V_t_empty_n;
    sc_signal< sc_lv<32> > buf_Tj_in_0_V_dout;
    sc_signal< sc_logic > buf_Tj_in_0_V_empty_n;
    sc_signal< sc_lv<24> > p_Val2_cast_loc_ch_dout;
    sc_signal< sc_logic > p_Val2_cast_loc_ch_empty_n;
    sc_signal< sc_logic > read_data_U0_start_full_n;
    sc_signal< sc_logic > read_data_U0_start_write;
    sc_signal< sc_logic > Block_arrayctor_loop_U0_start_full_n;
    sc_signal< sc_logic > Block_arrayctor_loop_U0_start_write;
    sc_signal< sc_logic > sweep_algorithm_DECM_U0_start_full_n;
    sc_signal< sc_logic > sweep_algorithm_DECM_U0_start_write;
    sc_signal< sc_logic > write_data_U0_start_full_n;
    sc_signal< sc_logic > write_data_U0_start_write;
    static const sc_logic ap_const_logic_1;
    static const sc_lv<32> ap_const_lv32_0;
    static const sc_lv<4> ap_const_lv4_0;
    static const sc_lv<1> ap_const_lv1_0;
    static const sc_lv<5> ap_const_lv5_0;
    static const sc_logic ap_const_logic_0;
    // Thread declarations
    void thread_ap_var_for_const2();
    void thread_ap_var_for_const1();
    void thread_ap_var_for_const0();
    void thread_Block_arrayctor_loop_U0_ap_continue();
    void thread_Block_arrayctor_loop_U0_ap_start();
    void thread_Block_arrayctor_loop_U0_start_full_n();
    void thread_Block_arrayctor_loop_U0_start_write();
    void thread_ap_channel_done_buf_DISTANCEX_out_V();
    void thread_ap_channel_done_buf_Tj_in_0_V();
    void thread_ap_channel_done_p_Val2_cast_loc_ch();
    void thread_ap_rst_n_inv();
    void thread_ap_sync_continue();
    void thread_input_AX_ALG_TREADY();
    void thread_output_AX_ALG_TDATA();
    void thread_output_AX_ALG_TDEST();
    void thread_output_AX_ALG_TID();
    void thread_output_AX_ALG_TKEEP();
    void thread_output_AX_ALG_TLAST();
    void thread_output_AX_ALG_TSTRB();
    void thread_output_AX_ALG_TUSER();
    void thread_output_AX_ALG_TVALID();
    void thread_read_data_U0_ap_continue();
    void thread_read_data_U0_ap_start();
    void thread_read_data_U0_start_full_n();
    void thread_read_data_U0_start_write();
    void thread_sweep_algorithm_DECM_U0_ap_continue();
    void thread_sweep_algorithm_DECM_U0_ap_start();
    void thread_sweep_algorithm_DECM_U0_currentGroupX_OUT_V_full_n();
    void thread_sweep_algorithm_DECM_U0_start_full_n();
    void thread_sweep_algorithm_DECM_U0_start_write();
    void thread_write_data_U0_ap_continue();
    void thread_write_data_U0_ap_start();
    void thread_write_data_U0_start_full_n();
    void thread_write_data_U0_start_write();
    void thread_hdltv_gen();
};

}

using namespace ap_rtl;

#endif
