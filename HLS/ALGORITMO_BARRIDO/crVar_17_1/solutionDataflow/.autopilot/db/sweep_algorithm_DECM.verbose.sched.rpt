

================================================================
== Vivado HLS Report for 'sweep_algorithm_DECM'
================================================================
* Date:           Thu Jun 15 12:11:15 2023

* Version:        2017.1 (Build 1846317 on Fri Apr 14 19:19:38 MDT 2017)
* Project:        crVar_17_1
* Solution:       solutionDataflow
* Product family: zynq
* Target device:  xc7z020clg484-1


================================================================
== Performance Estimates
================================================================
+ Timing (ns): 
    * Summary: 
    +--------+-------+----------+------------+
    |  Clock | Target| Estimated| Uncertainty|
    +--------+-------+----------+------------+
    |ap_clk  |  10.00|      9.63|        1.25|
    +--------+-------+----------+------------+

+ Latency (clock cycles): 
    * Summary: 
    +-------+-------+-------+-------+---------+
    |    Latency    |    Interval   | Pipeline|
    |  min  |  max  |  min  |  max  |   Type  |
    +-------+-------+-------+-------+---------+
    |  16394|  19523|  16394|  19523|   none  |
    +-------+-------+-------+-------+---------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        +----------+-------+-------+----------+-----------+-----------+------+----------+
        |          |    Latency    | Iteration|  Initiation Interval  | Trip |          |
        | Loop Name|  min  |  max  |  Latency |  achieved |   target  | Count| Pipelined|
        +----------+-------+-------+----------+-----------+-----------+------+----------+
        |- lp3     |   2048|   2048|         2|          1|          1|  2048|    yes   |
        |- lp4     |  14341|  14341|        34|         28|          1|   512|    yes   |
        |- Loop 3  |   1051|   1051|         1|          1|          1|  1024|    yes   |
        |- Loop 4  |   2074|   2074|         1|          1|          1|  2049|    yes   |
        +----------+-------+-------+----------+-----------+-----------+------+----------+

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 0
ResetActiveHigh: 1
IsCombinational: 2
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 0
HasVarLatency: 1
IsPipeline: 0
IsRtlPipelined: 0
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0

+ Individual pipeline summary: 
  * Pipeline-0: initiation interval (II) = 1, depth = 2
  * Pipeline-1: initiation interval (II) = 28, depth = 34
  * Pipeline-2: initiation interval (II) = 1, depth = 1
  * Pipeline-3: initiation interval (II) = 1, depth = 1


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states: 44
* Pipeline: 4
  Pipeline-0: II = 1, D = 2, States = { 2 3 }
  Pipeline-1: II = 28, D = 34, States = { 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 }
  Pipeline-2: II = 1, D = 1, States = { 40 }
  Pipeline-3: II = 1, D = 1, States = { 42 }
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 
	2  / true
2 --> 
	4  / (tmp_5_i)
	3  / (!tmp_5_i)
3 --> 
	2  / true
4 --> 
	5  / true
5 --> 
	6  / true
6 --> 
	7  / true
7 --> 
	8  / true
8 --> 
	9  / true
9 --> 
	10  / true
10 --> 
	11  / true
11 --> 
	12  / true
12 --> 
	13  / true
13 --> 
	14  / true
14 --> 
	15  / true
15 --> 
	16  / true
16 --> 
	17  / true
17 --> 
	18  / true
18 --> 
	19  / true
19 --> 
	20  / true
20 --> 
	21  / true
21 --> 
	22  / true
22 --> 
	23  / true
23 --> 
	24  / true
24 --> 
	25  / true
25 --> 
	26  / true
26 --> 
	27  / true
27 --> 
	28  / true
28 --> 
	29  / true
29 --> 
	30  / true
30 --> 
	31  / true
31 --> 
	32  / true
32 --> 
	33  / true
33 --> 
	34  / true
34 --> 
	35  / true
35 --> 
	36  / true
36 --> 
	37  / true
37 --> 
	38  / true
38 --> 
	39  / (tmp_7_i)
	5  / (!tmp_7_i)
39 --> 
	44  / (!tmp_9_i)
	40  / (tmp_9_i)
40 --> 
	40  / true
41 --> 
	42  / true
42 --> 
	42  / true
43 --> 
	44  / true
44 --> 
* FSM state operations: 

 <State 1>: 1.77ns
ST_1: StgValue_45 (9)  [1/1] 0.00ns
entry:0  call void (...)* @_ssdm_op_SpecMemCore([8 x i32]* @aux_array_V, [1 x i8]* @p_str, [12 x i8]* @p_str9, [1 x i8]* @p_str, i32 -1, [1 x i8]* @p_str, [1 x i8]* @p_str, [1 x i8]* @p_str, [1 x i8]* @p_str, [1 x i8]* @p_str)

ST_1: p_read_1 (10)  [1/1] 0.00ns
entry:1  %p_read_1 = call i24 @_ssdm_op_Read.ap_auto.i24(i24 %p_read)

ST_1: StgValue_47 (11)  [1/1] 1.77ns  loc: axi_algorithm.cpp:73->axi_algorithm.cpp:30
entry:2  br label %0


 <State 2>: 6.13ns
ST_2: i_i (13)  [1/1] 0.00ns
:0  %i_i = phi i12 [ 0, %entry ], [ %i, %1 ]

ST_2: tmp_5_i (14)  [1/1] 2.94ns  loc: axi_algorithm.cpp:73->axi_algorithm.cpp:30
:1  %tmp_5_i = icmp eq i12 %i_i, -2048

ST_2: i (15)  [1/1] 2.88ns  loc: axi_algorithm.cpp:76->axi_algorithm.cpp:30
:2  %i = add i12 %i_i, 1

ST_2: StgValue_51 (16)  [1/1] 0.00ns  loc: axi_algorithm.cpp:73->axi_algorithm.cpp:30
:3  br i1 %tmp_5_i, label %2, label %1

ST_2: i_4_cast_i (23)  [1/1] 0.00ns  loc: axi_algorithm.cpp:76->axi_algorithm.cpp:30
:5  %i_4_cast_i = zext i12 %i to i32

ST_2: aux_array_V_1_addr (24)  [1/1] 0.00ns  loc: axi_algorithm.cpp:76->axi_algorithm.cpp:30
:6  %aux_array_V_1_addr = getelementptr [2049 x i24]* @aux_array_V_1, i32 0, i32 %i_4_cast_i

ST_2: aux_array_V_1_load (25)  [2/2] 3.25ns  loc: axi_algorithm.cpp:76->axi_algorithm.cpp:30
:7  %aux_array_V_1_load = load i24* %aux_array_V_1_addr, align 4


 <State 3>: 6.51ns
ST_3: i_cast36_i (18)  [1/1] 0.00ns  loc: axi_algorithm.cpp:73->axi_algorithm.cpp:30
:0  %i_cast36_i = zext i12 %i_i to i32

ST_3: empty (19)  [1/1] 0.00ns
:1  %empty = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 2048, i64 2048, i64 2048)

ST_3: StgValue_57 (20)  [1/1] 0.00ns  loc: axi_algorithm.cpp:74->axi_algorithm.cpp:30
:2  call void (...)* @_ssdm_op_SpecLoopName([4 x i8]* @p_str5) nounwind

ST_3: tmp_i (21)  [1/1] 0.00ns  loc: axi_algorithm.cpp:74->axi_algorithm.cpp:30
:3  %tmp_i = call i32 (...)* @_ssdm_op_SpecRegionBegin([4 x i8]* @p_str5)

ST_3: StgValue_59 (22)  [1/1] 0.00ns  loc: axi_algorithm.cpp:75->axi_algorithm.cpp:30
:4  call void (...)* @_ssdm_op_SpecPipeline(i32 1, i32 1, i32 1, i32 0, [1 x i8]* @p_str) nounwind

ST_3: aux_array_V_1_load (25)  [1/2] 3.25ns  loc: axi_algorithm.cpp:76->axi_algorithm.cpp:30
:7  %aux_array_V_1_load = load i24* %aux_array_V_1_addr, align 4

ST_3: aux_array_V_1_addr_1 (26)  [1/1] 0.00ns  loc: axi_algorithm.cpp:76->axi_algorithm.cpp:30
:8  %aux_array_V_1_addr_1 = getelementptr [2049 x i24]* @aux_array_V_1, i32 0, i32 %i_cast36_i

ST_3: StgValue_62 (27)  [1/1] 3.25ns  loc: axi_algorithm.cpp:76->axi_algorithm.cpp:30
:9  store i24 %aux_array_V_1_load, i24* %aux_array_V_1_addr_1, align 4

ST_3: empty_10 (28)  [1/1] 0.00ns  loc: axi_algorithm.cpp:77->axi_algorithm.cpp:30
:10  %empty_10 = call i32 (...)* @_ssdm_op_SpecRegionEnd([4 x i8]* @p_str5, i32 %tmp_i)

ST_3: StgValue_64 (29)  [1/1] 0.00ns  loc: axi_algorithm.cpp:73->axi_algorithm.cpp:30
:11  br label %0


 <State 4>: 3.25ns
ST_4: StgValue_65 (31)  [1/1] 3.25ns  loc: axi_algorithm.cpp:78->axi_algorithm.cpp:30
:0  store i24 %p_read_1, i24* getelementptr inbounds ([2049 x i24]* @aux_array_V_1, i32 0, i32 2048), align 16

ST_4: StgValue_66 (32)  [1/1] 1.77ns  loc: axi_algorithm.cpp:81->axi_algorithm.cpp:30
:1  br label %5


 <State 5>: 6.11ns
ST_5: ind_i (34)  [1/1] 0.00ns  loc: axi_algorithm.cpp:118->axi_algorithm.cpp:30
:0  %ind_i = phi i32 [ 0, %2 ], [ %ind_i_be, %.backedge.i.backedge ]

ST_5: i_1_i (35)  [1/1] 0.00ns  loc: axi_algorithm.cpp:89->axi_algorithm.cpp:30
:1  %i_1_i = phi i10 [ 0, %2 ], [ %tmp_12, %.backedge.i.backedge ]

ST_5: contNuevo_i (37)  [1/1] 0.00ns  loc: axi_algorithm.cpp:126->axi_algorithm.cpp:30
:3  %contNuevo_i = phi i32 [ 0, %2 ], [ %contNuevo_i_be, %.backedge.i.backedge ]

ST_5: cont_i (38)  [1/1] 0.00ns  loc: axi_algorithm.cpp:118->axi_algorithm.cpp:30
:4  %cont_i = phi i32 [ 0, %2 ], [ %cont_i_be, %.backedge.i.backedge ]

ST_5: i_1_i119_cast (40)  [1/1] 0.00ns  loc: axi_algorithm.cpp:89->axi_algorithm.cpp:30
:6  %i_1_i119_cast = zext i10 %i_1_i to i11

ST_5: i_1_i_cast (41)  [1/1] 0.00ns  loc: axi_algorithm.cpp:89->axi_algorithm.cpp:30
:7  %i_1_i_cast = zext i10 %i_1_i to i32

ST_5: tmp_i_13 (47)  [1/1] 2.86ns  loc: axi_algorithm.cpp:88->axi_algorithm.cpp:30
:13  %tmp_i_13 = add i11 -1023, %i_1_i119_cast

ST_5: tmp_cast_i (48)  [1/1] 0.00ns  loc: axi_algorithm.cpp:88->axi_algorithm.cpp:30
:14  %tmp_cast_i = zext i11 %tmp_i_13 to i32

ST_5: aux_array_V_1_load_1 (49)  [2/2] 3.25ns
:15  %aux_array_V_1_load_1 = load i24* getelementptr inbounds ([2049 x i24]* @aux_array_V_1, i32 0, i32 1024), align 16

ST_5: aux_array_V_1_addr_2 (51)  [1/1] 0.00ns  loc: axi_algorithm.cpp:88->axi_algorithm.cpp:30
:17  %aux_array_V_1_addr_2 = getelementptr [2049 x i24]* @aux_array_V_1, i32 0, i32 %tmp_cast_i

ST_5: aux_array_V_1_load_2 (52)  [2/2] 3.25ns  loc: axi_algorithm.cpp:88->axi_algorithm.cpp:30
:18  %aux_array_V_1_load_2 = load i24* %aux_array_V_1_addr_2, align 4

ST_5: i_5_i (57)  [1/1] 0.00ns  loc: axi_algorithm.cpp:89->axi_algorithm.cpp:30
:23  %i_5_i = or i10 %i_1_i, 1

ST_5: i_5_cast_i (58)  [1/1] 0.00ns  loc: axi_algorithm.cpp:89->axi_algorithm.cpp:30
:24  %i_5_cast_i = zext i10 %i_5_i to i32

ST_5: sum_V_addr (67)  [1/1] 0.00ns  loc: axi_algorithm.cpp:90->axi_algorithm.cpp:30
:33  %sum_V_addr = getelementptr [1024 x i42]* @sum_V, i32 0, i32 %i_1_i_cast

ST_5: sum_V_load (68)  [2/2] 3.25ns  loc: axi_algorithm.cpp:90->axi_algorithm.cpp:30
:34  %sum_V_load = load i42* %sum_V_addr, align 16

ST_5: reset_assign (75)  [1/1] 3.02ns  loc: axi_algorithm.cpp:95->axi_algorithm.cpp:30
:41  %reset_assign = icmp eq i10 %i_1_i, 0

ST_5: tmp_19_i (78)  [1/1] 3.26ns  loc: axi_algorithm.cpp:111->axi_algorithm.cpp:30
:44  %tmp_19_i = icmp eq i32 %contNuevo_i, 0

ST_5: StgValue_84 (79)  [1/1] 0.00ns  loc: axi_algorithm.cpp:111->axi_algorithm.cpp:30
:45  br i1 %tmp_19_i, label %4, label %6

ST_5: currentGroupX_OUT_V_s (99)  [1/1] 0.00ns  loc: axi_algorithm.cpp:115->axi_algorithm.cpp:30
:13  %currentGroupX_OUT_V_s = getelementptr [4 x i32]* %currentGroupX_OUT_V, i32 0, i32 %ind_i

ST_5: currentGroupX_OUT_V_1 (100)  [2/2] 2.32ns  loc: axi_algorithm.cpp:115->axi_algorithm.cpp:30
:14  %currentGroupX_OUT_V_1 = load i32* %currentGroupX_OUT_V_s, align 4

ST_5: cont32_i (103)  [1/1] 3.44ns  loc: axi_algorithm.cpp:117->axi_algorithm.cpp:30
:17  %cont32_i = add i32 1, %cont_i

ST_5: sum_V_addr_1 (147)  [1/1] 0.00ns  loc: axi_algorithm.cpp:90->axi_algorithm.cpp:30
:28  %sum_V_addr_1 = getelementptr [1024 x i42]* @sum_V, i32 0, i32 %i_5_cast_i

ST_5: sum_V_load_1 (148)  [2/2] 3.25ns  loc: axi_algorithm.cpp:90->axi_algorithm.cpp:30
:29  %sum_V_load_1 = load i42* %sum_V_addr_1, align 8


 <State 6>: 7.28ns
ST_6: contNuevoSuma_i (36)  [1/1] 0.00ns  loc: axi_algorithm.cpp:125->axi_algorithm.cpp:30
:2  %contNuevoSuma_i = phi i32 [ 0, %2 ], [ %contNuevoSuma_i_be, %.backedge.i.backedge ]

ST_6: this_assign_0_i (39)  [1/1] 0.00ns  loc: axi_algorithm.cpp:123->axi_algorithm.cpp:30
:5  %this_assign_0_i = phi i32 [ 0, %2 ], [ %this_assign_0_i_be, %.backedge.i.backedge ]

ST_6: aux_array_V_1_load_1 (49)  [1/2] 3.25ns
:15  %aux_array_V_1_load_1 = load i24* getelementptr inbounds ([2049 x i24]* @aux_array_V_1, i32 0, i32 1024), align 16

ST_6: tmp_3 (50)  [1/1] 0.00ns  loc: axi_algorithm.cpp:88->axi_algorithm.cpp:30
:16  %tmp_3 = trunc i24 %aux_array_V_1_load_1 to i16

ST_6: aux_array_V_1_load_2 (52)  [1/2] 3.25ns  loc: axi_algorithm.cpp:88->axi_algorithm.cpp:30
:18  %aux_array_V_1_load_2 = load i24* %aux_array_V_1_addr_2, align 4

ST_6: tmp_4 (53)  [1/1] 0.00ns  loc: axi_algorithm.cpp:88->axi_algorithm.cpp:30
:19  %tmp_4 = trunc i24 %aux_array_V_1_load_2 to i16

ST_6: p_Val2_2_i (54)  [1/1] 2.96ns  loc: axi_algorithm.cpp:88->axi_algorithm.cpp:30
:20  %p_Val2_2_i = sub i16 %tmp_3, %tmp_4

ST_6: aux_array_V_1_load_3 (59)  [2/2] 3.25ns
:25  %aux_array_V_1_load_3 = load i24* getelementptr inbounds ([2049 x i24]* @aux_array_V_1, i32 0, i32 0), align 16

ST_6: aux_array_V_1_addr_3 (61)  [1/1] 0.00ns  loc: axi_algorithm.cpp:89->axi_algorithm.cpp:30
:27  %aux_array_V_1_addr_3 = getelementptr [2049 x i24]* @aux_array_V_1, i32 0, i32 %i_5_cast_i

ST_6: aux_array_V_1_load_4 (62)  [2/2] 3.25ns  loc: axi_algorithm.cpp:89->axi_algorithm.cpp:30
:28  %aux_array_V_1_load_4 = load i24* %aux_array_V_1_addr_3, align 4

ST_6: sum_V_load (68)  [1/2] 3.25ns  loc: axi_algorithm.cpp:90->axi_algorithm.cpp:30
:34  %sum_V_load = load i42* %sum_V_addr, align 16

ST_6: contNuevoSuma_1_i (76)  [1/1] 2.07ns  loc: axi_algorithm.cpp:95->axi_algorithm.cpp:30
:42  %contNuevoSuma_1_i = select i1 %reset_assign, i32 0, i32 %contNuevoSuma_i

ST_6: tmp_22_i (81)  [1/1] 3.26ns  loc: axi_algorithm.cpp:126->axi_algorithm.cpp:30
:0  %tmp_22_i = icmp eq i32 %contNuevo_i, 7

ST_6: contNuevo_0_op_i (82)  [1/1] 3.44ns  loc: axi_algorithm.cpp:126->axi_algorithm.cpp:30
:1  %contNuevo_0_op_i = add i32 %contNuevo_i, 1

ST_6: phitmp_i (83)  [1/1] 2.07ns  loc: axi_algorithm.cpp:126->axi_algorithm.cpp:30
:2  %phitmp_i = select i1 %tmp_22_i, i32 1, i32 %contNuevo_0_op_i

ST_6: StgValue_105 (84)  [1/1] 1.77ns
:3  br label %3

ST_6: currentGroupX_OUT_V_1 (100)  [1/2] 2.32ns  loc: axi_algorithm.cpp:115->axi_algorithm.cpp:30
:14  %currentGroupX_OUT_V_1 = load i32* %currentGroupX_OUT_V_s, align 4

ST_6: tmp_21_i (104)  [1/1] 3.26ns  loc: axi_algorithm.cpp:118->axi_algorithm.cpp:30
:18  %tmp_21_i = icmp eq i32 %cont32_i, 32

ST_6: tmp_8 (105)  [1/1] 0.00ns  loc: axi_algorithm.cpp:118->axi_algorithm.cpp:30
:19  %tmp_8 = trunc i32 %ind_i to i3

ST_6: ind16_i_cast (106)  [1/1] 2.53ns  loc: axi_algorithm.cpp:118->axi_algorithm.cpp:30
:20  %ind16_i_cast = add i3 1, %tmp_8

ST_6: p_i (107)  [1/1] 2.07ns  loc: axi_algorithm.cpp:118->axi_algorithm.cpp:30
:21  %p_i = select i1 %tmp_21_i, i32 0, i32 %cont32_i

ST_6: p_ind_i (108)  [1/1] 2.07ns  loc: axi_algorithm.cpp:118->axi_algorithm.cpp:30
:22  %p_ind_i = select i1 %tmp_21_i, i3 %ind16_i_cast, i3 %tmp_8

ST_6: p_ind_i_cast (109)  [1/1] 0.00ns  loc: axi_algorithm.cpp:118->axi_algorithm.cpp:30
:23  %p_ind_i_cast = zext i3 %p_ind_i to i32

ST_6: indPar_i (110)  [1/1] 3.44ns  loc: axi_algorithm.cpp:123->axi_algorithm.cpp:30
:24  %indPar_i = add i32 1, %this_assign_0_i

ST_6: contNuevoSuma_3_i (116)  [1/1] 3.44ns  loc: axi_algorithm.cpp:125->axi_algorithm.cpp:30
:30  %contNuevoSuma_3_i = add nsw i32 1, %contNuevoSuma_1_i

ST_6: StgValue_115 (117)  [1/1] 1.77ns  loc: axi_algorithm.cpp:126->axi_algorithm.cpp:30
:31  br label %3

ST_6: sum_V_load_1 (148)  [1/2] 3.25ns  loc: axi_algorithm.cpp:90->axi_algorithm.cpp:30
:29  %sum_V_load_1 = load i42* %sum_V_addr_1, align 8


 <State 7>: 6.38ns
ST_7: i_1_cast_i_cast (42)  [1/1] 0.00ns  loc: axi_algorithm.cpp:89->axi_algorithm.cpp:30
:8  %i_1_cast_i_cast = zext i10 %i_1_i to i12

ST_7: OP1_V_i_14 (55)  [1/1] 0.00ns  loc: axi_algorithm.cpp:88->axi_algorithm.cpp:30
:21  %OP1_V_i_14 = sext i16 %p_Val2_2_i to i32

ST_7: p_Val2_3_i (56)  [1/1] 3.36ns  loc: axi_algorithm.cpp:88->axi_algorithm.cpp:30
:22  %p_Val2_3_i = mul nsw i32 %OP1_V_i_14, %OP1_V_i_14

ST_7: aux_array_V_1_load_3 (59)  [1/2] 3.25ns
:25  %aux_array_V_1_load_3 = load i24* getelementptr inbounds ([2049 x i24]* @aux_array_V_1, i32 0, i32 0), align 16

ST_7: tmp_5 (60)  [1/1] 0.00ns  loc: axi_algorithm.cpp:89->axi_algorithm.cpp:30
:26  %tmp_5 = trunc i24 %aux_array_V_1_load_3 to i16

ST_7: aux_array_V_1_load_4 (62)  [1/2] 3.25ns  loc: axi_algorithm.cpp:89->axi_algorithm.cpp:30
:28  %aux_array_V_1_load_4 = load i24* %aux_array_V_1_addr_3, align 4

ST_7: tmp_6 (63)  [1/1] 0.00ns  loc: axi_algorithm.cpp:89->axi_algorithm.cpp:30
:29  %tmp_6 = trunc i24 %aux_array_V_1_load_4 to i16

ST_7: p_Val2_6_i (64)  [1/1] 2.96ns  loc: axi_algorithm.cpp:89->axi_algorithm.cpp:30
:30  %p_Val2_6_i = sub i16 %tmp_5, %tmp_6

ST_7: tmp_13_i (69)  [1/1] 0.00ns  loc: axi_algorithm.cpp:90->axi_algorithm.cpp:30
:35  %tmp_13_i = sext i32 %p_Val2_3_i to i42

ST_7: p_Val2_10_i (70)  [1/1] 3.02ns  loc: axi_algorithm.cpp:90->axi_algorithm.cpp:30
:36  %p_Val2_10_i = add i42 %sum_V_load, %tmp_13_i

ST_7: tmp_4_i_i (93)  [1/1] 3.26ns  loc: axi_algorithm.cpp:222->axi_algorithm.cpp:114->axi_algorithm.cpp:30
:7  %tmp_4_i_i = icmp sgt i32 %this_assign_0_i, 9

ST_7: currentGroupX_OUT_V_2 (111)  [1/1] 0.00ns  loc: axi_algorithm.cpp:124->axi_algorithm.cpp:30
:25  %currentGroupX_OUT_V_2 = getelementptr [4 x i32]* %currentGroupX_OUT_V, i32 0, i32 %contNuevoSuma_1_i

ST_7: indPar_1_i (119)  [1/1] 0.00ns  loc: axi_algorithm.cpp:123->axi_algorithm.cpp:30
:0  %indPar_1_i = phi i32 [ %indPar_i, %4 ], [ %this_assign_0_i, %6 ]

ST_7: cont32_2_i (120)  [1/1] 0.00ns  loc: axi_algorithm.cpp:118->axi_algorithm.cpp:30
:1  %cont32_2_i = phi i32 [ %p_i, %4 ], [ %cont_i, %6 ]

ST_7: contNuevo_1_i (121)  [1/1] 0.00ns  loc: axi_algorithm.cpp:130->axi_algorithm.cpp:30
:2  %contNuevo_1_i = phi i32 [ 1, %4 ], [ %phitmp_i, %6 ]

ST_7: contNuevoSuma_2_i (122)  [1/1] 0.00ns  loc: axi_algorithm.cpp:125->axi_algorithm.cpp:30
:3  %contNuevoSuma_2_i = phi i32 [ %contNuevoSuma_3_i, %4 ], [ %contNuevoSuma_1_i, %6 ]

ST_7: ind16_2_i (123)  [1/1] 0.00ns  loc: axi_algorithm.cpp:118->axi_algorithm.cpp:30
:4  %ind16_2_i = phi i32 [ %p_ind_i_cast, %4 ], [ %ind_i, %6 ]

ST_7: tmp_9 (124)  [1/1] 0.00ns  loc: axi_algorithm.cpp:131->axi_algorithm.cpp:30
:5  %tmp_9 = trunc i32 %ind16_2_i to i3

ST_7: tmp_1_i (126)  [1/1] 2.88ns  loc: axi_algorithm.cpp:88->axi_algorithm.cpp:30
:7  %tmp_1_i = add i12 1026, %i_1_cast_i_cast

ST_7: tmp_1_cast_i (127)  [1/1] 0.00ns  loc: axi_algorithm.cpp:88->axi_algorithm.cpp:30
:8  %tmp_1_cast_i = zext i12 %tmp_1_i to i32

ST_7: aux_array_V_1_load_5 (128)  [2/2] 3.25ns
:9  %aux_array_V_1_load_5 = load i24* getelementptr inbounds ([2049 x i24]* @aux_array_V_1, i32 0, i32 1024), align 16

ST_7: aux_array_V_1_addr_4 (130)  [1/1] 0.00ns  loc: axi_algorithm.cpp:88->axi_algorithm.cpp:30
:11  %aux_array_V_1_addr_4 = getelementptr [2049 x i24]* @aux_array_V_1, i32 0, i32 %tmp_1_cast_i

ST_7: aux_array_V_1_load_6 (131)  [2/2] 3.25ns  loc: axi_algorithm.cpp:88->axi_algorithm.cpp:30
:12  %aux_array_V_1_load_6 = load i24* %aux_array_V_1_addr_4, align 8

ST_7: tmp_19_1_i (156)  [1/1] 3.26ns  loc: axi_algorithm.cpp:111->axi_algorithm.cpp:30
:37  %tmp_19_1_i = icmp eq i32 %contNuevo_1_i, 0

ST_7: StgValue_141 (157)  [1/1] 0.00ns  loc: axi_algorithm.cpp:111->axi_algorithm.cpp:30
:38  br i1 %tmp_19_1_i, label %7, label %8

ST_7: cont32_1_i (178)  [1/1] 3.44ns  loc: axi_algorithm.cpp:117->axi_algorithm.cpp:30
:14  %cont32_1_i = add i32 %cont32_2_i, 1


 <State 8>: 9.63ns
ST_8: OP1_V_1_i (65)  [1/1] 0.00ns  loc: axi_algorithm.cpp:89->axi_algorithm.cpp:30
:31  %OP1_V_1_i = sext i16 %p_Val2_6_i to i32

ST_8: p_Val2_7_i (66)  [1/1] 3.36ns  loc: axi_algorithm.cpp:89->axi_algorithm.cpp:30
:32  %p_Val2_7_i = mul nsw i32 %OP1_V_1_i, %OP1_V_1_i

ST_8: tmp_15_i (71)  [1/1] 0.00ns  loc: axi_algorithm.cpp:90->axi_algorithm.cpp:30
:37  %tmp_15_i = sext i32 %p_Val2_7_i to i42

ST_8: p_Val2_12_i (72)  [1/1] 3.02ns  loc: axi_algorithm.cpp:90->axi_algorithm.cpp:30
:38  %p_Val2_12_i = sub i42 %p_Val2_10_i, %tmp_15_i

ST_8: StgValue_147 (73)  [1/1] 3.25ns  loc: axi_algorithm.cpp:90->axi_algorithm.cpp:30
:39  store i42 %p_Val2_12_i, i42* %sum_V_addr, align 16

ST_8: p_0_i (74)  [1/1] 0.00ns  loc: axi_algorithm.cpp:93->axi_algorithm.cpp:30
:40  %p_0_i = call i32 @_ssdm_op_PartSelect.i32.i42.i32.i32(i42 %p_Val2_12_i, i32 10, i32 41)

ST_8: valorAuxVinout_0_V (77)  [14/14] 1.77ns  loc: axi_algorithm.cpp:104->axi_algorithm.cpp:30
:43  %valorAuxVinout_0_V = call fastcc i32 @meanFilterInTime(i32 %p_0_i, i1 %reset_assign)

ST_8: aux_array_V_1_load_5 (128)  [1/2] 3.25ns
:9  %aux_array_V_1_load_5 = load i24* getelementptr inbounds ([2049 x i24]* @aux_array_V_1, i32 0, i32 1024), align 16

ST_8: tmp_10 (129)  [1/1] 0.00ns  loc: axi_algorithm.cpp:88->axi_algorithm.cpp:30
:10  %tmp_10 = trunc i24 %aux_array_V_1_load_5 to i16

ST_8: aux_array_V_1_load_6 (131)  [1/2] 3.25ns  loc: axi_algorithm.cpp:88->axi_algorithm.cpp:30
:12  %aux_array_V_1_load_6 = load i24* %aux_array_V_1_addr_4, align 8

ST_8: tmp_11 (132)  [1/1] 0.00ns  loc: axi_algorithm.cpp:88->axi_algorithm.cpp:30
:13  %tmp_11 = trunc i24 %aux_array_V_1_load_6 to i16

ST_8: p_Val2_2_1_i (133)  [1/1] 2.96ns  loc: axi_algorithm.cpp:88->axi_algorithm.cpp:30
:14  %p_Val2_2_1_i = sub i16 %tmp_10, %tmp_11

ST_8: i_5_1_i (136)  [1/1] 2.84ns  loc: axi_algorithm.cpp:89->axi_algorithm.cpp:30
:17  %i_5_1_i = add i11 2, %i_1_i119_cast

ST_8: tmp_12 (137)  [1/1] 0.00ns  loc: axi_algorithm.cpp:89->axi_algorithm.cpp:30
:18  %tmp_12 = trunc i11 %i_5_1_i to i10

ST_8: i_5_1_i_cast (138)  [1/1] 0.00ns  loc: axi_algorithm.cpp:89->axi_algorithm.cpp:30
:19  %i_5_1_i_cast = zext i11 %i_5_1_i to i32

ST_8: aux_array_V_1_load_7 (139)  [2/2] 3.25ns
:20  %aux_array_V_1_load_7 = load i24* getelementptr inbounds ([2049 x i24]* @aux_array_V_1, i32 0, i32 0), align 16

ST_8: aux_array_V_1_addr_5 (141)  [1/1] 0.00ns  loc: axi_algorithm.cpp:89->axi_algorithm.cpp:30
:22  %aux_array_V_1_addr_5 = getelementptr [2049 x i24]* @aux_array_V_1, i32 0, i32 %i_5_1_i_cast

ST_8: aux_array_V_1_load_8 (142)  [2/2] 3.25ns  loc: axi_algorithm.cpp:89->axi_algorithm.cpp:30
:23  %aux_array_V_1_load_8 = load i24* %aux_array_V_1_addr_5, align 8

ST_8: tmp_22_1_i (159)  [1/1] 3.26ns  loc: axi_algorithm.cpp:126->axi_algorithm.cpp:30
:0  %tmp_22_1_i = icmp eq i32 %contNuevo_1_i, 7

ST_8: contNuevo_0_op_1_i (160)  [1/1] 3.44ns  loc: axi_algorithm.cpp:130->axi_algorithm.cpp:30
:1  %contNuevo_0_op_1_i = add i32 %contNuevo_1_i, 1

ST_8: phitmp_1_i (161)  [1/1] 2.07ns  loc: axi_algorithm.cpp:126->axi_algorithm.cpp:30
:2  %phitmp_1_i = select i1 %tmp_22_1_i, i32 1, i32 %contNuevo_0_op_1_i

ST_8: StgValue_164 (162)  [1/1] 1.77ns
:3  br label %.backedge.i.backedge

ST_8: tmp_21_1_i (179)  [1/1] 3.26ns  loc: axi_algorithm.cpp:118->axi_algorithm.cpp:30
:15  %tmp_21_1_i = icmp eq i32 %cont32_1_i, 32

ST_8: ind16_1_i_cast (180)  [1/1] 2.53ns  loc: axi_algorithm.cpp:118->axi_algorithm.cpp:30
:16  %ind16_1_i_cast = add i3 %tmp_9, 1

ST_8: p_1_i (181)  [1/1] 2.07ns  loc: axi_algorithm.cpp:118->axi_algorithm.cpp:30
:17  %p_1_i = select i1 %tmp_21_1_i, i32 0, i32 %cont32_1_i

ST_8: p_ind_1_i (182)  [1/1] 2.07ns  loc: axi_algorithm.cpp:118->axi_algorithm.cpp:30
:18  %p_ind_1_i = select i1 %tmp_21_1_i, i3 %ind16_1_i_cast, i3 %tmp_9

ST_8: p_ind_1_i_cast (183)  [1/1] 0.00ns  loc: axi_algorithm.cpp:118->axi_algorithm.cpp:30
:19  %p_ind_1_i_cast = zext i3 %p_ind_1_i to i32

ST_8: indPar_i_15 (184)  [1/1] 3.44ns  loc: axi_algorithm.cpp:123->axi_algorithm.cpp:30
:20  %indPar_i_15 = add i32 %indPar_1_i, 1

ST_8: contNuevoSuma_3_1_i (190)  [1/1] 3.44ns  loc: axi_algorithm.cpp:125->axi_algorithm.cpp:30
:26  %contNuevoSuma_3_1_i = add nsw i32 %contNuevoSuma_2_i, 1

ST_8: StgValue_172 (191)  [1/1] 1.77ns  loc: axi_algorithm.cpp:126->axi_algorithm.cpp:30
:27  br label %.backedge.i.backedge

ST_8: tmp_7_i (198)  [1/1] 2.94ns  loc: axi_algorithm.cpp:81->axi_algorithm.cpp:30
.backedge.i.backedge:5  %tmp_7_i = icmp eq i11 %i_5_1_i, -1024

ST_8: StgValue_174 (199)  [1/1] 0.00ns  loc: axi_algorithm.cpp:81->axi_algorithm.cpp:30
.backedge.i.backedge:6  br i1 %tmp_7_i, label %9, label %5


 <State 9>: 8.75ns
ST_9: valorAuxVinout_0_V (77)  [13/14] 8.75ns  loc: axi_algorithm.cpp:104->axi_algorithm.cpp:30
:43  %valorAuxVinout_0_V = call fastcc i32 @meanFilterInTime(i32 %p_0_i, i1 %reset_assign)

ST_9: OP1_V_i (134)  [1/1] 0.00ns  loc: axi_algorithm.cpp:88->axi_algorithm.cpp:30
:15  %OP1_V_i = sext i16 %p_Val2_2_1_i to i32

ST_9: p_Val2_3_1_i (135)  [1/1] 3.36ns  loc: axi_algorithm.cpp:88->axi_algorithm.cpp:30
:16  %p_Val2_3_1_i = mul nsw i32 %OP1_V_i, %OP1_V_i

ST_9: aux_array_V_1_load_7 (139)  [1/2] 3.25ns
:20  %aux_array_V_1_load_7 = load i24* getelementptr inbounds ([2049 x i24]* @aux_array_V_1, i32 0, i32 0), align 16

ST_9: tmp_13 (140)  [1/1] 0.00ns  loc: axi_algorithm.cpp:89->axi_algorithm.cpp:30
:21  %tmp_13 = trunc i24 %aux_array_V_1_load_7 to i16

ST_9: aux_array_V_1_load_8 (142)  [1/2] 3.25ns  loc: axi_algorithm.cpp:89->axi_algorithm.cpp:30
:23  %aux_array_V_1_load_8 = load i24* %aux_array_V_1_addr_5, align 8

ST_9: tmp_14 (143)  [1/1] 0.00ns  loc: axi_algorithm.cpp:89->axi_algorithm.cpp:30
:24  %tmp_14 = trunc i24 %aux_array_V_1_load_8 to i16

ST_9: p_Val2_6_1_i (144)  [1/1] 2.96ns  loc: axi_algorithm.cpp:89->axi_algorithm.cpp:30
:25  %p_Val2_6_1_i = sub i16 %tmp_13, %tmp_14

ST_9: tmp_13_1_i (149)  [1/1] 0.00ns  loc: axi_algorithm.cpp:90->axi_algorithm.cpp:30
:30  %tmp_13_1_i = sext i32 %p_Val2_3_1_i to i42

ST_9: p_Val2_10_1_i (150)  [1/1] 3.02ns  loc: axi_algorithm.cpp:90->axi_algorithm.cpp:30
:31  %p_Val2_10_1_i = add i42 %sum_V_load_1, %tmp_13_1_i

ST_9: tmp_4_i_i7 (169)  [1/1] 3.26ns  loc: axi_algorithm.cpp:222->axi_algorithm.cpp:114->axi_algorithm.cpp:30
:5  %tmp_4_i_i7 = icmp sgt i32 %indPar_1_i, 9

ST_9: currentGroupX_OUT_V_4 (174)  [1/1] 0.00ns  loc: axi_algorithm.cpp:115->axi_algorithm.cpp:30
:10  %currentGroupX_OUT_V_4 = getelementptr [4 x i32]* %currentGroupX_OUT_V, i32 0, i32 %ind16_2_i

ST_9: currentGroupX_OUT_V_6 (185)  [1/1] 0.00ns  loc: axi_algorithm.cpp:124->axi_algorithm.cpp:30
:21  %currentGroupX_OUT_V_6 = getelementptr [4 x i32]* %currentGroupX_OUT_V, i32 0, i32 %contNuevoSuma_2_i

ST_9: this_assign_0_i_be (193)  [1/1] 0.00ns  loc: axi_algorithm.cpp:123->axi_algorithm.cpp:30
.backedge.i.backedge:0  %this_assign_0_i_be = phi i32 [ %indPar_i_15, %7 ], [ %indPar_1_i, %8 ]

ST_9: cont_i_be (194)  [1/1] 0.00ns  loc: axi_algorithm.cpp:118->axi_algorithm.cpp:30
.backedge.i.backedge:1  %cont_i_be = phi i32 [ %p_1_i, %7 ], [ %cont32_2_i, %8 ]

ST_9: contNuevo_i_be (195)  [1/1] 0.00ns  loc: axi_algorithm.cpp:126->axi_algorithm.cpp:30
.backedge.i.backedge:2  %contNuevo_i_be = phi i32 [ 1, %7 ], [ %phitmp_1_i, %8 ]

ST_9: contNuevoSuma_i_be (196)  [1/1] 0.00ns  loc: axi_algorithm.cpp:125->axi_algorithm.cpp:30
.backedge.i.backedge:3  %contNuevoSuma_i_be = phi i32 [ %contNuevoSuma_3_1_i, %7 ], [ %contNuevoSuma_2_i, %8 ]

ST_9: ind_i_be (197)  [1/1] 0.00ns  loc: axi_algorithm.cpp:118->axi_algorithm.cpp:30
.backedge.i.backedge:4  %ind_i_be = phi i32 [ %p_ind_1_i_cast, %7 ], [ %ind16_2_i, %8 ]


 <State 10>: 9.63ns
ST_10: valorAuxVinout_0_V (77)  [12/14] 8.75ns  loc: axi_algorithm.cpp:104->axi_algorithm.cpp:30
:43  %valorAuxVinout_0_V = call fastcc i32 @meanFilterInTime(i32 %p_0_i, i1 %reset_assign)

ST_10: OP1_V_1_1_i (145)  [1/1] 0.00ns  loc: axi_algorithm.cpp:89->axi_algorithm.cpp:30
:26  %OP1_V_1_1_i = sext i16 %p_Val2_6_1_i to i32

ST_10: p_Val2_7_1_i (146)  [1/1] 3.36ns  loc: axi_algorithm.cpp:89->axi_algorithm.cpp:30
:27  %p_Val2_7_1_i = mul nsw i32 %OP1_V_1_1_i, %OP1_V_1_1_i

ST_10: tmp_15_1_i (151)  [1/1] 0.00ns  loc: axi_algorithm.cpp:90->axi_algorithm.cpp:30
:32  %tmp_15_1_i = sext i32 %p_Val2_7_1_i to i42

ST_10: p_Val2_12_1_i (152)  [1/1] 3.02ns  loc: axi_algorithm.cpp:90->axi_algorithm.cpp:30
:33  %p_Val2_12_1_i = sub i42 %p_Val2_10_1_i, %tmp_15_1_i

ST_10: StgValue_198 (153)  [1/1] 3.25ns  loc: axi_algorithm.cpp:90->axi_algorithm.cpp:30
:34  store i42 %p_Val2_12_1_i, i42* %sum_V_addr_1, align 8

ST_10: p_0_1_i (154)  [1/1] 0.00ns  loc: axi_algorithm.cpp:93->axi_algorithm.cpp:30
:35  %p_0_1_i = call i32 @_ssdm_op_PartSelect.i32.i42.i32.i32(i42 %p_Val2_12_1_i, i32 10, i32 41)


 <State 11>: 8.75ns
ST_11: valorAuxVinout_0_V (77)  [11/14] 8.75ns  loc: axi_algorithm.cpp:104->axi_algorithm.cpp:30
:43  %valorAuxVinout_0_V = call fastcc i32 @meanFilterInTime(i32 %p_0_i, i1 %reset_assign)


 <State 12>: 8.75ns
ST_12: valorAuxVinout_0_V (77)  [10/14] 8.75ns  loc: axi_algorithm.cpp:104->axi_algorithm.cpp:30
:43  %valorAuxVinout_0_V = call fastcc i32 @meanFilterInTime(i32 %p_0_i, i1 %reset_assign)


 <State 13>: 8.75ns
ST_13: valorAuxVinout_0_V (77)  [9/14] 8.75ns  loc: axi_algorithm.cpp:104->axi_algorithm.cpp:30
:43  %valorAuxVinout_0_V = call fastcc i32 @meanFilterInTime(i32 %p_0_i, i1 %reset_assign)


 <State 14>: 8.75ns
ST_14: valorAuxVinout_0_V (77)  [8/14] 8.75ns  loc: axi_algorithm.cpp:104->axi_algorithm.cpp:30
:43  %valorAuxVinout_0_V = call fastcc i32 @meanFilterInTime(i32 %p_0_i, i1 %reset_assign)


 <State 15>: 8.75ns
ST_15: valorAuxVinout_0_V (77)  [7/14] 8.75ns  loc: axi_algorithm.cpp:104->axi_algorithm.cpp:30
:43  %valorAuxVinout_0_V = call fastcc i32 @meanFilterInTime(i32 %p_0_i, i1 %reset_assign)


 <State 16>: 8.75ns
ST_16: valorAuxVinout_0_V (77)  [6/14] 8.75ns  loc: axi_algorithm.cpp:104->axi_algorithm.cpp:30
:43  %valorAuxVinout_0_V = call fastcc i32 @meanFilterInTime(i32 %p_0_i, i1 %reset_assign)


 <State 17>: 8.75ns
ST_17: valorAuxVinout_0_V (77)  [5/14] 8.75ns  loc: axi_algorithm.cpp:104->axi_algorithm.cpp:30
:43  %valorAuxVinout_0_V = call fastcc i32 @meanFilterInTime(i32 %p_0_i, i1 %reset_assign)


 <State 18>: 8.75ns
ST_18: valorAuxVinout_0_V (77)  [4/14] 8.75ns  loc: axi_algorithm.cpp:104->axi_algorithm.cpp:30
:43  %valorAuxVinout_0_V = call fastcc i32 @meanFilterInTime(i32 %p_0_i, i1 %reset_assign)


 <State 19>: 8.75ns
ST_19: valorAuxVinout_0_V (77)  [3/14] 8.75ns  loc: axi_algorithm.cpp:104->axi_algorithm.cpp:30
:43  %valorAuxVinout_0_V = call fastcc i32 @meanFilterInTime(i32 %p_0_i, i1 %reset_assign)


 <State 20>: 8.75ns
ST_20: valorAuxVinout_0_V (77)  [2/14] 8.75ns  loc: axi_algorithm.cpp:104->axi_algorithm.cpp:30
:43  %valorAuxVinout_0_V = call fastcc i32 @meanFilterInTime(i32 %p_0_i, i1 %reset_assign)


 <State 21>: 3.44ns
ST_21: empty_12 (43)  [1/1] 0.00ns
:9  %empty_12 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 512, i64 512, i64 512)

ST_21: StgValue_211 (44)  [1/1] 0.00ns  loc: axi_algorithm.cpp:82->axi_algorithm.cpp:30
:10  call void (...)* @_ssdm_op_SpecLoopName([4 x i8]* @p_str6) nounwind

ST_21: tmp_3_i (45)  [1/1] 0.00ns  loc: axi_algorithm.cpp:82->axi_algorithm.cpp:30
:11  %tmp_3_i = call i32 (...)* @_ssdm_op_SpecRegionBegin([4 x i8]* @p_str6)

ST_21: StgValue_213 (46)  [1/1] 0.00ns  loc: axi_algorithm.cpp:84->axi_algorithm.cpp:30
:12  call void (...)* @_ssdm_op_SpecPipeline(i32 -1, i32 1, i32 1, i32 0, [1 x i8]* @p_str) nounwind

ST_21: valorAuxVinout_0_V (77)  [1/14] 0.00ns  loc: axi_algorithm.cpp:104->axi_algorithm.cpp:30
:43  %valorAuxVinout_0_V = call fastcc i32 @meanFilterInTime(i32 %p_0_i, i1 %reset_assign)

ST_21: vector_V_0_load (86)  [1/1] 0.00ns  loc: axi_algorithm.cpp:217->axi_algorithm.cpp:114->axi_algorithm.cpp:30
:0  %vector_V_0_load = load i32* @vector_V_0, align 4

ST_21: p_Val2_1 (88)  [1/1] 0.00ns  loc: axi_algorithm.cpp:206->axi_algorithm.cpp:114->axi_algorithm.cpp:30 (grouped into LUT with out node p_Val2_i_i)
:2  %p_Val2_1 = select i1 %reset_assign, i32 0, i32 %vector_V_0_load

ST_21: p_Val2_i_i (89)  [1/1] 3.44ns  loc: axi_algorithm.cpp:217->axi_algorithm.cpp:114->axi_algorithm.cpp:30 (out node of the LUT)
:3  %p_Val2_i_i = sub i32 %valorAuxVinout_0_V, %p_Val2_1

ST_21: StgValue_218 (98)  [1/1] 1.77ns  loc: axi_algorithm.cpp:208->axi_algorithm.cpp:114->axi_algorithm.cpp:30
:12  store i32 %valorAuxVinout_0_V, i32* @vector_V_0, align 4


 <State 22>: 7.66ns
ST_22: derivada_V_0_load (87)  [1/1] 0.00ns  loc: axi_algorithm.cpp:220->axi_algorithm.cpp:114->axi_algorithm.cpp:30
:1  %derivada_V_0_load = load i32* @derivada_V_0, align 4

ST_22: tmp_7 (90)  [1/1] 0.00ns  loc: axi_algorithm.cpp:220->axi_algorithm.cpp:114->axi_algorithm.cpp:30 (grouped into LUT with out node minimoX_0)
:4  %tmp_7 = call i1 @_ssdm_op_BitSelect.i1.i32.i32(i32 %derivada_V_0_load, i32 31)

ST_22: not_reset_i (91)  [1/1] 0.00ns  loc: axi_algorithm.cpp:220->axi_algorithm.cpp:114->axi_algorithm.cpp:30 (grouped into LUT with out node minimoX_0)
:5  %not_reset_i = xor i1 %reset_assign, true

ST_22: tmp_3_i_i (92)  [1/1] 3.26ns  loc: axi_algorithm.cpp:220->axi_algorithm.cpp:114->axi_algorithm.cpp:30
:6  %tmp_3_i_i = icmp sgt i32 %p_Val2_i_i, 0

ST_22: tmp (94)  [1/1] 0.00ns  loc: axi_algorithm.cpp:231->axi_algorithm.cpp:114->axi_algorithm.cpp:30 (grouped into LUT with out node minimoX_0)
:8  %tmp = and i1 %tmp_7, %not_reset_i

ST_22: tmp9 (95)  [1/1] 0.00ns  loc: axi_algorithm.cpp:231->axi_algorithm.cpp:114->axi_algorithm.cpp:30 (grouped into LUT with out node minimoX_0)
:9  %tmp9 = and i1 %tmp_3_i_i, %tmp_4_i_i

ST_22: minimoX_0 (96)  [1/1] 2.07ns  loc: axi_algorithm.cpp:231->axi_algorithm.cpp:114->axi_algorithm.cpp:30 (out node of the LUT)
:10  %minimoX_0 = and i1 %tmp9, %tmp

ST_22: StgValue_226 (97)  [1/1] 1.77ns  loc: axi_algorithm.cpp:209->axi_algorithm.cpp:114->axi_algorithm.cpp:30
:11  store i32 %p_Val2_i_i, i32* @derivada_V_0, align 4

ST_22: p_Val2_17_i (101)  [1/1] 0.00ns  loc: axi_algorithm.cpp:115->axi_algorithm.cpp:30
:15  %p_Val2_17_i = call i32 @_ssdm_op_BitSet.i32.i32.i32.i1(i32 %currentGroupX_OUT_V_1, i32 %cont_i, i1 %minimoX_0)

ST_22: StgValue_228 (102)  [1/1] 2.32ns  loc: axi_algorithm.cpp:115->axi_algorithm.cpp:30
:16  store i32 %p_Val2_17_i, i32* %currentGroupX_OUT_V_s, align 4

ST_22: y_inout_0_V (155)  [14/14] 1.77ns  loc: axi_algorithm.cpp:104->axi_algorithm.cpp:30
:36  %y_inout_0_V = call fastcc i32 @meanFilterInTime(i32 %p_0_1_i, i1 false)


 <State 23>: 8.75ns
ST_23: currentGroupX_OUT_V_3 (112)  [2/2] 2.32ns  loc: axi_algorithm.cpp:124->axi_algorithm.cpp:30
:26  %currentGroupX_OUT_V_3 = load i32* %currentGroupX_OUT_V_2, align 4

ST_23: y_inout_0_V (155)  [13/14] 8.75ns  loc: axi_algorithm.cpp:104->axi_algorithm.cpp:30
:36  %y_inout_0_V = call fastcc i32 @meanFilterInTime(i32 %p_0_1_i, i1 false)


 <State 24>: 8.75ns
ST_24: currentGroupX_OUT_V_3 (112)  [1/2] 2.32ns  loc: axi_algorithm.cpp:124->axi_algorithm.cpp:30
:26  %currentGroupX_OUT_V_3 = load i32* %currentGroupX_OUT_V_2, align 4

ST_24: p_Val2_1814_i (113)  [1/1] 0.00ns  loc: axi_algorithm.cpp:124->axi_algorithm.cpp:30
:27  %p_Val2_1814_i = call i31 @_ssdm_op_PartSelect.i31.i32.i32.i32(i32 %currentGroupX_OUT_V_3, i32 1, i32 31)

ST_24: tmp_1 (114)  [1/1] 0.00ns  loc: axi_algorithm.cpp:124->axi_algorithm.cpp:30
:28  %tmp_1 = zext i31 %p_Val2_1814_i to i32

ST_24: StgValue_235 (115)  [1/1] 2.32ns  loc: axi_algorithm.cpp:124->axi_algorithm.cpp:30
:29  store i32 %tmp_1, i32* %currentGroupX_OUT_V_2, align 4

ST_24: y_inout_0_V (155)  [12/14] 8.75ns  loc: axi_algorithm.cpp:104->axi_algorithm.cpp:30
:36  %y_inout_0_V = call fastcc i32 @meanFilterInTime(i32 %p_0_1_i, i1 false)


 <State 25>: 8.75ns
ST_25: y_inout_0_V (155)  [11/14] 8.75ns  loc: axi_algorithm.cpp:104->axi_algorithm.cpp:30
:36  %y_inout_0_V = call fastcc i32 @meanFilterInTime(i32 %p_0_1_i, i1 false)

ST_25: currentGroupX_OUT_V_5 (175)  [2/2] 2.32ns  loc: axi_algorithm.cpp:115->axi_algorithm.cpp:30
:11  %currentGroupX_OUT_V_5 = load i32* %currentGroupX_OUT_V_4, align 4


 <State 26>: 8.75ns
ST_26: y_inout_0_V (155)  [10/14] 8.75ns  loc: axi_algorithm.cpp:104->axi_algorithm.cpp:30
:36  %y_inout_0_V = call fastcc i32 @meanFilterInTime(i32 %p_0_1_i, i1 false)

ST_26: currentGroupX_OUT_V_5 (175)  [1/2] 2.32ns  loc: axi_algorithm.cpp:115->axi_algorithm.cpp:30
:11  %currentGroupX_OUT_V_5 = load i32* %currentGroupX_OUT_V_4, align 4


 <State 27>: 8.75ns
ST_27: y_inout_0_V (155)  [9/14] 8.75ns  loc: axi_algorithm.cpp:104->axi_algorithm.cpp:30
:36  %y_inout_0_V = call fastcc i32 @meanFilterInTime(i32 %p_0_1_i, i1 false)


 <State 28>: 8.75ns
ST_28: y_inout_0_V (155)  [8/14] 8.75ns  loc: axi_algorithm.cpp:104->axi_algorithm.cpp:30
:36  %y_inout_0_V = call fastcc i32 @meanFilterInTime(i32 %p_0_1_i, i1 false)


 <State 29>: 8.75ns
ST_29: y_inout_0_V (155)  [7/14] 8.75ns  loc: axi_algorithm.cpp:104->axi_algorithm.cpp:30
:36  %y_inout_0_V = call fastcc i32 @meanFilterInTime(i32 %p_0_1_i, i1 false)


 <State 30>: 8.75ns
ST_30: y_inout_0_V (155)  [6/14] 8.75ns  loc: axi_algorithm.cpp:104->axi_algorithm.cpp:30
:36  %y_inout_0_V = call fastcc i32 @meanFilterInTime(i32 %p_0_1_i, i1 false)


 <State 31>: 8.75ns
ST_31: y_inout_0_V (155)  [5/14] 8.75ns  loc: axi_algorithm.cpp:104->axi_algorithm.cpp:30
:36  %y_inout_0_V = call fastcc i32 @meanFilterInTime(i32 %p_0_1_i, i1 false)


 <State 32>: 8.75ns
ST_32: y_inout_0_V (155)  [4/14] 8.75ns  loc: axi_algorithm.cpp:104->axi_algorithm.cpp:30
:36  %y_inout_0_V = call fastcc i32 @meanFilterInTime(i32 %p_0_1_i, i1 false)


 <State 33>: 8.75ns
ST_33: y_inout_0_V (155)  [3/14] 8.75ns  loc: axi_algorithm.cpp:104->axi_algorithm.cpp:30
:36  %y_inout_0_V = call fastcc i32 @meanFilterInTime(i32 %p_0_1_i, i1 false)


 <State 34>: 8.75ns
ST_34: y_inout_0_V (155)  [2/14] 8.75ns  loc: axi_algorithm.cpp:104->axi_algorithm.cpp:30
:36  %y_inout_0_V = call fastcc i32 @meanFilterInTime(i32 %p_0_1_i, i1 false)


 <State 35>: 3.44ns
ST_35: empty_11 (125)  [1/1] 0.00ns  loc: axi_algorithm.cpp:131->axi_algorithm.cpp:30
:6  %empty_11 = call i32 (...)* @_ssdm_op_SpecRegionEnd([4 x i8]* @p_str6, i32 %tmp_3_i)

ST_35: y_inout_0_V (155)  [1/14] 0.00ns  loc: axi_algorithm.cpp:104->axi_algorithm.cpp:30
:36  %y_inout_0_V = call fastcc i32 @meanFilterInTime(i32 %p_0_1_i, i1 false)

ST_35: p_Val2_3 (164)  [1/1] 0.00ns  loc: axi_algorithm.cpp:217->axi_algorithm.cpp:114->axi_algorithm.cpp:30
:0  %p_Val2_3 = load i32* @vector_V_0, align 4

ST_35: p_Val2_i_i3 (166)  [1/1] 3.44ns  loc: axi_algorithm.cpp:217->axi_algorithm.cpp:114->axi_algorithm.cpp:30
:2  %p_Val2_i_i3 = sub i32 %y_inout_0_V, %p_Val2_3

ST_35: StgValue_253 (173)  [1/1] 1.77ns  loc: axi_algorithm.cpp:208->axi_algorithm.cpp:114->axi_algorithm.cpp:30
:9  store i32 %y_inout_0_V, i32* @vector_V_0, align 4


 <State 36>: 7.66ns
ST_36: derivada_V_0_load_1 (165)  [1/1] 0.00ns  loc: axi_algorithm.cpp:220->axi_algorithm.cpp:114->axi_algorithm.cpp:30
:1  %derivada_V_0_load_1 = load i32* @derivada_V_0, align 4

ST_36: tmp_15 (167)  [1/1] 0.00ns  loc: axi_algorithm.cpp:220->axi_algorithm.cpp:114->axi_algorithm.cpp:30 (grouped into LUT with out node minimoX_0_1)
:3  %tmp_15 = call i1 @_ssdm_op_BitSelect.i1.i32.i32(i32 %derivada_V_0_load_1, i32 31)

ST_36: tmp_3_i_i5 (168)  [1/1] 3.26ns  loc: axi_algorithm.cpp:220->axi_algorithm.cpp:114->axi_algorithm.cpp:30
:4  %tmp_3_i_i5 = icmp sgt i32 %p_Val2_i_i3, 0

ST_36: tmp2 (170)  [1/1] 0.00ns  loc: axi_algorithm.cpp:231->axi_algorithm.cpp:114->axi_algorithm.cpp:30 (grouped into LUT with out node minimoX_0_1)
:6  %tmp2 = and i1 %tmp_3_i_i5, %tmp_4_i_i7

ST_36: minimoX_0_1 (171)  [1/1] 2.07ns  loc: axi_algorithm.cpp:231->axi_algorithm.cpp:114->axi_algorithm.cpp:30 (out node of the LUT)
:7  %minimoX_0_1 = and i1 %tmp2, %tmp_15

ST_36: StgValue_259 (172)  [1/1] 1.77ns  loc: axi_algorithm.cpp:209->axi_algorithm.cpp:114->axi_algorithm.cpp:30
:8  store i32 %p_Val2_i_i3, i32* @derivada_V_0, align 4

ST_36: p_Val2_17_1_i (176)  [1/1] 0.00ns  loc: axi_algorithm.cpp:115->axi_algorithm.cpp:30
:12  %p_Val2_17_1_i = call i32 @_ssdm_op_BitSet.i32.i32.i32.i1(i32 %currentGroupX_OUT_V_5, i32 %cont32_2_i, i1 %minimoX_0_1)

ST_36: StgValue_261 (177)  [1/1] 2.32ns  loc: axi_algorithm.cpp:115->axi_algorithm.cpp:30
:13  store i32 %p_Val2_17_1_i, i32* %currentGroupX_OUT_V_4, align 4


 <State 37>: 2.32ns
ST_37: currentGroupX_OUT_V_7 (186)  [2/2] 2.32ns  loc: axi_algorithm.cpp:124->axi_algorithm.cpp:30
:22  %currentGroupX_OUT_V_7 = load i32* %currentGroupX_OUT_V_6, align 4


 <State 38>: 4.64ns
ST_38: currentGroupX_OUT_V_7 (186)  [1/2] 2.32ns  loc: axi_algorithm.cpp:124->axi_algorithm.cpp:30
:22  %currentGroupX_OUT_V_7 = load i32* %currentGroupX_OUT_V_6, align 4

ST_38: p_Val2_1814_1_i (187)  [1/1] 0.00ns  loc: axi_algorithm.cpp:124->axi_algorithm.cpp:30
:23  %p_Val2_1814_1_i = call i31 @_ssdm_op_PartSelect.i31.i32.i32.i32(i32 %currentGroupX_OUT_V_7, i32 1, i32 31)

ST_38: tmp_2 (188)  [1/1] 0.00ns  loc: axi_algorithm.cpp:124->axi_algorithm.cpp:30
:24  %tmp_2 = zext i31 %p_Val2_1814_1_i to i32

ST_38: StgValue_266 (189)  [1/1] 2.32ns  loc: axi_algorithm.cpp:124->axi_algorithm.cpp:30
:25  store i32 %tmp_2, i32* %currentGroupX_OUT_V_6, align 4


 <State 39>: 8.47ns
ST_39: contador_load (201)  [1/1] 0.00ns  loc: axi_algorithm.cpp:134->axi_algorithm.cpp:30
:0  %contador_load = load i32* @contador, align 4

ST_39: tmp_8_i (202)  [1/1] 3.44ns  loc: axi_algorithm.cpp:134->axi_algorithm.cpp:30
:1  %tmp_8_i = add nsw i32 %contador_load, 1

ST_39: tmp_9_i (203)  [1/1] 3.26ns  loc: axi_algorithm.cpp:137->axi_algorithm.cpp:30
:2  %tmp_9_i = icmp eq i32 %tmp_8_i, 2049

ST_39: StgValue_270 (204)  [1/1] 1.77ns  loc: axi_algorithm.cpp:137->axi_algorithm.cpp:30
:3  br i1 %tmp_9_i, label %.preheader278.i.preheader, label %sweep_algorithm_DECMINV3.exit

ST_39: StgValue_271 (206)  [1/1] 1.77ns  loc: axi_algorithm.cpp:139->axi_algorithm.cpp:30
.preheader278.i.preheader:0  br label %.preheader278.i


 <State 40>: 3.25ns
ST_40: i_2_i (208)  [1/1] 0.00ns
.preheader278.i:0  %i_2_i = phi i11 [ %i_2, %10 ], [ 0, %.preheader278.i.preheader ]

ST_40: tmp_1_i_16 (209)  [1/1] 2.94ns  loc: axi_algorithm.cpp:139->axi_algorithm.cpp:30
.preheader278.i:1  %tmp_1_i_16 = icmp eq i11 %i_2_i, -1024

ST_40: i_2 (210)  [1/1] 2.86ns  loc: axi_algorithm.cpp:139->axi_algorithm.cpp:30
.preheader278.i:2  %i_2 = add i11 %i_2_i, 1

ST_40: StgValue_275 (211)  [1/1] 0.00ns  loc: axi_algorithm.cpp:139->axi_algorithm.cpp:30
.preheader278.i:3  br i1 %tmp_1_i_16, label %.preheader.i.preheader, label %10

ST_40: i_2_cast35_i (213)  [1/1] 0.00ns  loc: axi_algorithm.cpp:139->axi_algorithm.cpp:30
:0  %i_2_cast35_i = zext i11 %i_2_i to i32

ST_40: empty_17 (214)  [1/1] 0.00ns
:1  %empty_17 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 1024, i64 1024, i64 1024)

ST_40: tmp_6_i (215)  [1/1] 0.00ns  loc: axi_algorithm.cpp:140->axi_algorithm.cpp:30
:2  %tmp_6_i = call i32 (...)* @_ssdm_op_SpecRegionBegin([12 x i8]* @p_str7)

ST_40: StgValue_279 (216)  [1/1] 0.00ns  loc: axi_algorithm.cpp:141->axi_algorithm.cpp:30
:3  call void (...)* @_ssdm_op_SpecPipeline(i32 1, i32 1, i32 1, i32 0, [1 x i8]* @p_str) nounwind

ST_40: sum_V_addr_2 (217)  [1/1] 0.00ns  loc: axi_algorithm.cpp:142->axi_algorithm.cpp:30
:4  %sum_V_addr_2 = getelementptr [1024 x i42]* @sum_V, i32 0, i32 %i_2_cast35_i

ST_40: StgValue_281 (218)  [1/1] 3.25ns  loc: axi_algorithm.cpp:142->axi_algorithm.cpp:30
:5  store i42 0, i42* %sum_V_addr_2, align 8

ST_40: empty_18 (219)  [1/1] 0.00ns  loc: axi_algorithm.cpp:143->axi_algorithm.cpp:30
:6  %empty_18 = call i32 (...)* @_ssdm_op_SpecRegionEnd([12 x i8]* @p_str7, i32 %tmp_6_i)

ST_40: StgValue_283 (220)  [1/1] 0.00ns  loc: axi_algorithm.cpp:139->axi_algorithm.cpp:30
:7  br label %.preheader278.i


 <State 41>: 1.77ns
ST_41: StgValue_284 (222)  [1/1] 1.77ns  loc: axi_algorithm.cpp:144->axi_algorithm.cpp:30
.preheader.i.preheader:0  br label %.preheader.i


 <State 42>: 3.25ns
ST_42: i_3_i (224)  [1/1] 0.00ns
.preheader.i:0  %i_3_i = phi i12 [ %i_3, %11 ], [ 0, %.preheader.i.preheader ]

ST_42: tmp_2_i (225)  [1/1] 2.94ns  loc: axi_algorithm.cpp:144->axi_algorithm.cpp:30
.preheader.i:1  %tmp_2_i = icmp eq i12 %i_3_i, -2047

ST_42: i_3 (226)  [1/1] 2.88ns  loc: axi_algorithm.cpp:144->axi_algorithm.cpp:30
.preheader.i:2  %i_3 = add i12 %i_3_i, 1

ST_42: StgValue_288 (227)  [1/1] 0.00ns  loc: axi_algorithm.cpp:144->axi_algorithm.cpp:30
.preheader.i:3  br i1 %tmp_2_i, label %sweep_algorithm_DECMINV3.exit.loopexit, label %11

ST_42: i_3_cast34_i (229)  [1/1] 0.00ns  loc: axi_algorithm.cpp:144->axi_algorithm.cpp:30
:0  %i_3_cast34_i = zext i12 %i_3_i to i32

ST_42: empty_19 (230)  [1/1] 0.00ns
:1  %empty_19 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 2049, i64 2049, i64 2049)

ST_42: tmp_10_i (231)  [1/1] 0.00ns  loc: axi_algorithm.cpp:145->axi_algorithm.cpp:30
:2  %tmp_10_i = call i32 (...)* @_ssdm_op_SpecRegionBegin([12 x i8]* @p_str8)

ST_42: StgValue_292 (232)  [1/1] 0.00ns  loc: axi_algorithm.cpp:146->axi_algorithm.cpp:30
:3  call void (...)* @_ssdm_op_SpecPipeline(i32 1, i32 1, i32 1, i32 0, [1 x i8]* @p_str) nounwind

ST_42: aux_array_V_1_addr_6 (233)  [1/1] 0.00ns  loc: axi_algorithm.cpp:147->axi_algorithm.cpp:30
:4  %aux_array_V_1_addr_6 = getelementptr [2049 x i24]* @aux_array_V_1, i32 0, i32 %i_3_cast34_i

ST_42: StgValue_294 (234)  [1/1] 3.25ns  loc: axi_algorithm.cpp:147->axi_algorithm.cpp:30
:5  store i24 0, i24* %aux_array_V_1_addr_6, align 4

ST_42: empty_20 (235)  [1/1] 0.00ns  loc: axi_algorithm.cpp:148->axi_algorithm.cpp:30
:6  %empty_20 = call i32 (...)* @_ssdm_op_SpecRegionEnd([12 x i8]* @p_str8, i32 %tmp_10_i)

ST_42: StgValue_296 (236)  [1/1] 0.00ns  loc: axi_algorithm.cpp:144->axi_algorithm.cpp:30
:7  br label %.preheader.i


 <State 43>: 1.77ns
ST_43: StgValue_297 (238)  [1/1] 1.77ns
sweep_algorithm_DECMINV3.exit.loopexit:0  br label %sweep_algorithm_DECMINV3.exit


 <State 44>: 0.00ns
ST_44: contador_new_i (240)  [1/1] 0.00ns  loc: axi_algorithm.cpp:134->axi_algorithm.cpp:30
sweep_algorithm_DECMINV3.exit:0  %contador_new_i = phi i32 [ %tmp_8_i, %9 ], [ 0, %sweep_algorithm_DECMINV3.exit.loopexit ]

ST_44: StgValue_299 (241)  [1/1] 0.00ns  loc: axi_algorithm.cpp:134->axi_algorithm.cpp:30
sweep_algorithm_DECMINV3.exit:1  store i32 %contador_new_i, i32* @contador, align 4

ST_44: StgValue_300 (242)  [1/1] 0.00ns
sweep_algorithm_DECMINV3.exit:2  ret void



============================================================
+ Verbose Summary: Timing violations
============================================================
Target clock period: 10ns, clock uncertainty: 1.25ns.

 <State 1>: 1.77ns
The critical path consists of the following:
	multiplexor before 'phi' operation ('i') with incoming values : ('i', axi_algorithm.cpp:76->axi_algorithm.cpp:30) [13]  (1.77 ns)

 <State 2>: 6.13ns
The critical path consists of the following:
	'phi' operation ('i') with incoming values : ('i', axi_algorithm.cpp:76->axi_algorithm.cpp:30) [13]  (0 ns)
	'add' operation ('i', axi_algorithm.cpp:76->axi_algorithm.cpp:30) [15]  (2.88 ns)
	'getelementptr' operation ('aux_array_V_1_addr', axi_algorithm.cpp:76->axi_algorithm.cpp:30) [24]  (0 ns)
	'load' operation ('aux_array_V_1_load', axi_algorithm.cpp:76->axi_algorithm.cpp:30) on array 'aux_array_V_1' [25]  (3.25 ns)

 <State 3>: 6.51ns
The critical path consists of the following:
	'load' operation ('aux_array_V_1_load', axi_algorithm.cpp:76->axi_algorithm.cpp:30) on array 'aux_array_V_1' [25]  (3.25 ns)
	'store' operation (axi_algorithm.cpp:76->axi_algorithm.cpp:30) of variable 'aux_array_V_1_load', axi_algorithm.cpp:76->axi_algorithm.cpp:30 on array 'aux_array_V_1' [27]  (3.25 ns)

 <State 4>: 3.25ns
The critical path consists of the following:
	'store' operation (axi_algorithm.cpp:78->axi_algorithm.cpp:30) of variable 'p_read_1' on array 'aux_array_V_1' [31]  (3.25 ns)

 <State 5>: 6.11ns
The critical path consists of the following:
	'phi' operation ('i_1_i', axi_algorithm.cpp:89->axi_algorithm.cpp:30) with incoming values : ('tmp_12', axi_algorithm.cpp:89->axi_algorithm.cpp:30) [35]  (0 ns)
	'add' operation ('tmp_i_13', axi_algorithm.cpp:88->axi_algorithm.cpp:30) [47]  (2.86 ns)
	'getelementptr' operation ('aux_array_V_1_addr_2', axi_algorithm.cpp:88->axi_algorithm.cpp:30) [51]  (0 ns)
	'load' operation ('aux_array_V_1_load_2', axi_algorithm.cpp:88->axi_algorithm.cpp:30) on array 'aux_array_V_1' [52]  (3.25 ns)

 <State 6>: 7.28ns
The critical path consists of the following:
	'phi' operation ('contNuevoSuma_i', axi_algorithm.cpp:125->axi_algorithm.cpp:30) with incoming values : ('contNuevoSuma_1_i', axi_algorithm.cpp:95->axi_algorithm.cpp:30) ('contNuevoSuma_3_i', axi_algorithm.cpp:125->axi_algorithm.cpp:30) ('contNuevoSuma_3_1_i', axi_algorithm.cpp:125->axi_algorithm.cpp:30) [36]  (0 ns)
	'select' operation ('contNuevoSuma_1_i', axi_algorithm.cpp:95->axi_algorithm.cpp:30) [76]  (2.07 ns)
	'add' operation ('contNuevoSuma_3_i', axi_algorithm.cpp:125->axi_algorithm.cpp:30) [116]  (3.44 ns)
	multiplexor before 'phi' operation ('indPar_1_i', axi_algorithm.cpp:123->axi_algorithm.cpp:30) with incoming values : ('indPar_i', axi_algorithm.cpp:123->axi_algorithm.cpp:30) ('indPar_i_15', axi_algorithm.cpp:123->axi_algorithm.cpp:30) [119]  (1.77 ns)

 <State 7>: 6.38ns
The critical path consists of the following:
	'mul' operation ('p_Val2_3_i', axi_algorithm.cpp:88->axi_algorithm.cpp:30) [56]  (3.36 ns)
	'add' operation ('p_Val2_10_i', axi_algorithm.cpp:90->axi_algorithm.cpp:30) [70]  (3.02 ns)

 <State 8>: 9.63ns
The critical path consists of the following:
	'mul' operation ('p_Val2_7_i', axi_algorithm.cpp:89->axi_algorithm.cpp:30) [66]  (3.36 ns)
	'sub' operation ('p_Val2_12_i', axi_algorithm.cpp:90->axi_algorithm.cpp:30) [72]  (3.02 ns)
	'store' operation (axi_algorithm.cpp:90->axi_algorithm.cpp:30) of variable 'p_Val2_12_i', axi_algorithm.cpp:90->axi_algorithm.cpp:30 on array 'sum_V' [73]  (3.25 ns)

 <State 9>: 8.75ns
The critical path consists of the following:
	'call' operation ('y_inout[0].V', axi_algorithm.cpp:104->axi_algorithm.cpp:30) to 'meanFilterInTime' [77]  (8.75 ns)

 <State 10>: 9.63ns
The critical path consists of the following:
	'mul' operation ('p_Val2_7_1_i', axi_algorithm.cpp:89->axi_algorithm.cpp:30) [146]  (3.36 ns)
	'sub' operation ('p_Val2_12_1_i', axi_algorithm.cpp:90->axi_algorithm.cpp:30) [152]  (3.02 ns)
	'store' operation (axi_algorithm.cpp:90->axi_algorithm.cpp:30) of variable 'p_Val2_12_1_i', axi_algorithm.cpp:90->axi_algorithm.cpp:30 on array 'sum_V' [153]  (3.25 ns)

 <State 11>: 8.75ns
The critical path consists of the following:
	'call' operation ('y_inout[0].V', axi_algorithm.cpp:104->axi_algorithm.cpp:30) to 'meanFilterInTime' [77]  (8.75 ns)

 <State 12>: 8.75ns
The critical path consists of the following:
	'call' operation ('y_inout[0].V', axi_algorithm.cpp:104->axi_algorithm.cpp:30) to 'meanFilterInTime' [77]  (8.75 ns)

 <State 13>: 8.75ns
The critical path consists of the following:
	'call' operation ('y_inout[0].V', axi_algorithm.cpp:104->axi_algorithm.cpp:30) to 'meanFilterInTime' [77]  (8.75 ns)

 <State 14>: 8.75ns
The critical path consists of the following:
	'call' operation ('y_inout[0].V', axi_algorithm.cpp:104->axi_algorithm.cpp:30) to 'meanFilterInTime' [77]  (8.75 ns)

 <State 15>: 8.75ns
The critical path consists of the following:
	'call' operation ('y_inout[0].V', axi_algorithm.cpp:104->axi_algorithm.cpp:30) to 'meanFilterInTime' [77]  (8.75 ns)

 <State 16>: 8.75ns
The critical path consists of the following:
	'call' operation ('y_inout[0].V', axi_algorithm.cpp:104->axi_algorithm.cpp:30) to 'meanFilterInTime' [77]  (8.75 ns)

 <State 17>: 8.75ns
The critical path consists of the following:
	'call' operation ('y_inout[0].V', axi_algorithm.cpp:104->axi_algorithm.cpp:30) to 'meanFilterInTime' [77]  (8.75 ns)

 <State 18>: 8.75ns
The critical path consists of the following:
	'call' operation ('y_inout[0].V', axi_algorithm.cpp:104->axi_algorithm.cpp:30) to 'meanFilterInTime' [77]  (8.75 ns)

 <State 19>: 8.75ns
The critical path consists of the following:
	'call' operation ('y_inout[0].V', axi_algorithm.cpp:104->axi_algorithm.cpp:30) to 'meanFilterInTime' [77]  (8.75 ns)

 <State 20>: 8.75ns
The critical path consists of the following:
	'call' operation ('y_inout[0].V', axi_algorithm.cpp:104->axi_algorithm.cpp:30) to 'meanFilterInTime' [77]  (8.75 ns)

 <State 21>: 3.44ns
The critical path consists of the following:
	'call' operation ('y_inout[0].V', axi_algorithm.cpp:104->axi_algorithm.cpp:30) to 'meanFilterInTime' [77]  (0 ns)
	'sub' operation ('p_Val2_i_i', axi_algorithm.cpp:217->axi_algorithm.cpp:114->axi_algorithm.cpp:30) [89]  (3.44 ns)

 <State 22>: 7.66ns
The critical path consists of the following:
	'icmp' operation ('tmp_3_i_i', axi_algorithm.cpp:220->axi_algorithm.cpp:114->axi_algorithm.cpp:30) [92]  (3.26 ns)
	'and' operation ('tmp9', axi_algorithm.cpp:231->axi_algorithm.cpp:114->axi_algorithm.cpp:30) [95]  (0 ns)
	'and' operation ('minimoX[0]', axi_algorithm.cpp:231->axi_algorithm.cpp:114->axi_algorithm.cpp:30) [96]  (2.07 ns)
	'store' operation (axi_algorithm.cpp:115->axi_algorithm.cpp:30) of variable 'p_Val2_17_i', axi_algorithm.cpp:115->axi_algorithm.cpp:30 on array 'currentGroupX_OUT_V' [102]  (2.32 ns)

 <State 23>: 8.75ns
The critical path consists of the following:
	'call' operation ('y_inout[0].V', axi_algorithm.cpp:104->axi_algorithm.cpp:30) to 'meanFilterInTime' [155]  (8.75 ns)

 <State 24>: 8.75ns
The critical path consists of the following:
	'call' operation ('y_inout[0].V', axi_algorithm.cpp:104->axi_algorithm.cpp:30) to 'meanFilterInTime' [155]  (8.75 ns)

 <State 25>: 8.75ns
The critical path consists of the following:
	'call' operation ('y_inout[0].V', axi_algorithm.cpp:104->axi_algorithm.cpp:30) to 'meanFilterInTime' [155]  (8.75 ns)

 <State 26>: 8.75ns
The critical path consists of the following:
	'call' operation ('y_inout[0].V', axi_algorithm.cpp:104->axi_algorithm.cpp:30) to 'meanFilterInTime' [155]  (8.75 ns)

 <State 27>: 8.75ns
The critical path consists of the following:
	'call' operation ('y_inout[0].V', axi_algorithm.cpp:104->axi_algorithm.cpp:30) to 'meanFilterInTime' [155]  (8.75 ns)

 <State 28>: 8.75ns
The critical path consists of the following:
	'call' operation ('y_inout[0].V', axi_algorithm.cpp:104->axi_algorithm.cpp:30) to 'meanFilterInTime' [155]  (8.75 ns)

 <State 29>: 8.75ns
The critical path consists of the following:
	'call' operation ('y_inout[0].V', axi_algorithm.cpp:104->axi_algorithm.cpp:30) to 'meanFilterInTime' [155]  (8.75 ns)

 <State 30>: 8.75ns
The critical path consists of the following:
	'call' operation ('y_inout[0].V', axi_algorithm.cpp:104->axi_algorithm.cpp:30) to 'meanFilterInTime' [155]  (8.75 ns)

 <State 31>: 8.75ns
The critical path consists of the following:
	'call' operation ('y_inout[0].V', axi_algorithm.cpp:104->axi_algorithm.cpp:30) to 'meanFilterInTime' [155]  (8.75 ns)

 <State 32>: 8.75ns
The critical path consists of the following:
	'call' operation ('y_inout[0].V', axi_algorithm.cpp:104->axi_algorithm.cpp:30) to 'meanFilterInTime' [155]  (8.75 ns)

 <State 33>: 8.75ns
The critical path consists of the following:
	'call' operation ('y_inout[0].V', axi_algorithm.cpp:104->axi_algorithm.cpp:30) to 'meanFilterInTime' [155]  (8.75 ns)

 <State 34>: 8.75ns
The critical path consists of the following:
	'call' operation ('y_inout[0].V', axi_algorithm.cpp:104->axi_algorithm.cpp:30) to 'meanFilterInTime' [155]  (8.75 ns)

 <State 35>: 3.44ns
The critical path consists of the following:
	'call' operation ('y_inout[0].V', axi_algorithm.cpp:104->axi_algorithm.cpp:30) to 'meanFilterInTime' [155]  (0 ns)
	'sub' operation ('p_Val2_i_i3', axi_algorithm.cpp:217->axi_algorithm.cpp:114->axi_algorithm.cpp:30) [166]  (3.44 ns)

 <State 36>: 7.66ns
The critical path consists of the following:
	'icmp' operation ('tmp_3_i_i5', axi_algorithm.cpp:220->axi_algorithm.cpp:114->axi_algorithm.cpp:30) [168]  (3.26 ns)
	'and' operation ('tmp2', axi_algorithm.cpp:231->axi_algorithm.cpp:114->axi_algorithm.cpp:30) [170]  (0 ns)
	'and' operation ('minimoX[0]', axi_algorithm.cpp:231->axi_algorithm.cpp:114->axi_algorithm.cpp:30) [171]  (2.07 ns)
	'store' operation (axi_algorithm.cpp:115->axi_algorithm.cpp:30) of variable 'p_Val2_17_1_i', axi_algorithm.cpp:115->axi_algorithm.cpp:30 on array 'currentGroupX_OUT_V' [177]  (2.32 ns)

 <State 37>: 2.32ns
The critical path consists of the following:
	'load' operation ('currentGroupX_OUT_V_7', axi_algorithm.cpp:124->axi_algorithm.cpp:30) on array 'currentGroupX_OUT_V' [186]  (2.32 ns)

 <State 38>: 4.64ns
The critical path consists of the following:
	'load' operation ('currentGroupX_OUT_V_7', axi_algorithm.cpp:124->axi_algorithm.cpp:30) on array 'currentGroupX_OUT_V' [186]  (2.32 ns)
	'store' operation (axi_algorithm.cpp:124->axi_algorithm.cpp:30) of variable 'tmp_2', axi_algorithm.cpp:124->axi_algorithm.cpp:30 on array 'currentGroupX_OUT_V' [189]  (2.32 ns)

 <State 39>: 8.47ns
The critical path consists of the following:
	'load' operation ('contador_load', axi_algorithm.cpp:134->axi_algorithm.cpp:30) on static variable 'contador' [201]  (0 ns)
	'add' operation ('tmp_8_i', axi_algorithm.cpp:134->axi_algorithm.cpp:30) [202]  (3.44 ns)
	'icmp' operation ('tmp_9_i', axi_algorithm.cpp:137->axi_algorithm.cpp:30) [203]  (3.26 ns)
	multiplexor before 'phi' operation ('contador_new_i', axi_algorithm.cpp:134->axi_algorithm.cpp:30) with incoming values : ('tmp_8_i', axi_algorithm.cpp:134->axi_algorithm.cpp:30) [240]  (1.77 ns)

 <State 40>: 3.25ns
The critical path consists of the following:
	'phi' operation ('i') with incoming values : ('i', axi_algorithm.cpp:139->axi_algorithm.cpp:30) [208]  (0 ns)
	'getelementptr' operation ('sum_V_addr_2', axi_algorithm.cpp:142->axi_algorithm.cpp:30) [217]  (0 ns)
	'store' operation (axi_algorithm.cpp:142->axi_algorithm.cpp:30) of constant 0 on array 'sum_V' [218]  (3.25 ns)

 <State 41>: 1.77ns
The critical path consists of the following:
	multiplexor before 'phi' operation ('i') with incoming values : ('i', axi_algorithm.cpp:144->axi_algorithm.cpp:30) [224]  (1.77 ns)

 <State 42>: 3.25ns
The critical path consists of the following:
	'phi' operation ('i') with incoming values : ('i', axi_algorithm.cpp:144->axi_algorithm.cpp:30) [224]  (0 ns)
	'getelementptr' operation ('aux_array_V_1_addr_6', axi_algorithm.cpp:147->axi_algorithm.cpp:30) [233]  (0 ns)
	'store' operation (axi_algorithm.cpp:147->axi_algorithm.cpp:30) of constant 0 on array 'aux_array_V_1' [234]  (3.25 ns)

 <State 43>: 1.77ns
The critical path consists of the following:
	multiplexor before 'phi' operation ('contador_new_i', axi_algorithm.cpp:134->axi_algorithm.cpp:30) with incoming values : ('tmp_8_i', axi_algorithm.cpp:134->axi_algorithm.cpp:30) [240]  (1.77 ns)

 <State 44>: 0ns
The critical path consists of the following:


============================================================
+ Verbose Summary: Binding
============================================================
N/A
* FSMD analyzer results:
  - Output states:
 - Input state : 
  - Chain level:
	State 1
	State 2
	State 3
	State 4
	State 5
	State 6
	State 7
	State 8
	State 9
	State 10
	State 11
	State 12
	State 13
	State 14
	State 15
	State 16
	State 17
	State 18
	State 19
	State 20
	State 21
	State 22
	State 23
	State 24
	State 25
	State 26
	State 27
	State 28
	State 29
	State 30
	State 31
	State 32
	State 33
	State 34
	State 35
	State 36
	State 37
	State 38
	State 39
	State 40
	State 41
	State 42
	State 43
	State 44


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================
N/A
