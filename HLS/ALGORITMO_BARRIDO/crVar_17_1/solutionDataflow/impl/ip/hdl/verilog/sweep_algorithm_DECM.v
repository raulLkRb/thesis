// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2017.1
// Copyright (C) 1986-2017 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module sweep_algorithm_DECM (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_continue,
        ap_idle,
        ap_ready,
        p_read,
        currentGroupX_OUT_V_address0,
        currentGroupX_OUT_V_ce0,
        currentGroupX_OUT_V_we0,
        currentGroupX_OUT_V_d0,
        currentGroupX_OUT_V_q0
);

parameter    ap_ST_fsm_state1 = 37'd1;
parameter    ap_ST_fsm_pp0_stage0 = 37'd2;
parameter    ap_ST_fsm_state4 = 37'd4;
parameter    ap_ST_fsm_pp1_stage0 = 37'd8;
parameter    ap_ST_fsm_pp1_stage1 = 37'd16;
parameter    ap_ST_fsm_pp1_stage2 = 37'd32;
parameter    ap_ST_fsm_pp1_stage3 = 37'd64;
parameter    ap_ST_fsm_pp1_stage4 = 37'd128;
parameter    ap_ST_fsm_pp1_stage5 = 37'd256;
parameter    ap_ST_fsm_pp1_stage6 = 37'd512;
parameter    ap_ST_fsm_pp1_stage7 = 37'd1024;
parameter    ap_ST_fsm_pp1_stage8 = 37'd2048;
parameter    ap_ST_fsm_pp1_stage9 = 37'd4096;
parameter    ap_ST_fsm_pp1_stage10 = 37'd8192;
parameter    ap_ST_fsm_pp1_stage11 = 37'd16384;
parameter    ap_ST_fsm_pp1_stage12 = 37'd32768;
parameter    ap_ST_fsm_pp1_stage13 = 37'd65536;
parameter    ap_ST_fsm_pp1_stage14 = 37'd131072;
parameter    ap_ST_fsm_pp1_stage15 = 37'd262144;
parameter    ap_ST_fsm_pp1_stage16 = 37'd524288;
parameter    ap_ST_fsm_pp1_stage17 = 37'd1048576;
parameter    ap_ST_fsm_pp1_stage18 = 37'd2097152;
parameter    ap_ST_fsm_pp1_stage19 = 37'd4194304;
parameter    ap_ST_fsm_pp1_stage20 = 37'd8388608;
parameter    ap_ST_fsm_pp1_stage21 = 37'd16777216;
parameter    ap_ST_fsm_pp1_stage22 = 37'd33554432;
parameter    ap_ST_fsm_pp1_stage23 = 37'd67108864;
parameter    ap_ST_fsm_pp1_stage24 = 37'd134217728;
parameter    ap_ST_fsm_pp1_stage25 = 37'd268435456;
parameter    ap_ST_fsm_pp1_stage26 = 37'd536870912;
parameter    ap_ST_fsm_pp1_stage27 = 37'd1073741824;
parameter    ap_ST_fsm_state39 = 37'd2147483648;
parameter    ap_ST_fsm_state40 = 37'd4294967296;
parameter    ap_ST_fsm_state41 = 37'd8589934592;
parameter    ap_ST_fsm_state42 = 37'd17179869184;
parameter    ap_ST_fsm_state43 = 37'd34359738368;
parameter    ap_ST_fsm_state44 = 37'd68719476736;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
input   ap_continue;
output   ap_idle;
output   ap_ready;
input  [23:0] p_read;
output  [1:0] currentGroupX_OUT_V_address0;
output   currentGroupX_OUT_V_ce0;
output   currentGroupX_OUT_V_we0;
output  [31:0] currentGroupX_OUT_V_d0;
input  [31:0] currentGroupX_OUT_V_q0;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg[1:0] currentGroupX_OUT_V_address0;
reg currentGroupX_OUT_V_ce0;
reg currentGroupX_OUT_V_we0;
reg[31:0] currentGroupX_OUT_V_d0;

reg    ap_done_reg;
(* fsm_encoding = "none" *) reg   [36:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg   [11:0] aux_array_V_1_address0;
reg    aux_array_V_1_ce0;
reg    aux_array_V_1_we0;
wire   [23:0] aux_array_V_1_q0;
reg   [11:0] aux_array_V_1_address1;
reg    aux_array_V_1_ce1;
reg    aux_array_V_1_we1;
reg   [23:0] aux_array_V_1_d1;
wire   [23:0] aux_array_V_1_q1;
reg   [9:0] sum_V_address0;
reg    sum_V_ce0;
reg    sum_V_we0;
reg   [41:0] sum_V_d0;
wire   [41:0] sum_V_q0;
reg   [9:0] sum_V_address1;
reg    sum_V_ce1;
reg    sum_V_we1;
wire   [41:0] sum_V_q1;
reg   [31:0] vector_V_0;
reg   [31:0] derivada_V_0;
reg   [31:0] contador;
reg   [11:0] i_i_reg_259;
reg   [31:0] ind_i_reg_271;
reg   [9:0] i_1_i_reg_284;
reg   [31:0] contNuevo_i_reg_296;
reg   [31:0] cont_i_reg_308;
reg   [31:0] contNuevoSuma_i_reg_320;
reg   [31:0] this_assign_0_i_reg_331;
reg   [31:0] indPar_1_i_reg_343;
reg   [31:0] cont32_2_i_reg_354;
reg   [31:0] ap_reg_pp1_iter1_cont32_2_i_reg_354;
wire    ap_CS_fsm_pp1_stage2;
wire    ap_block_state7_pp1_stage2_iter0;
wire    ap_block_state35_pp1_stage2_iter1;
wire    ap_block_pp1_stage2_flag00011001;
reg   [31:0] contNuevo_1_i_reg_365;
reg   [31:0] contNuevoSuma_2_i_reg_377;
reg   [31:0] ind16_2_i_reg_388;
reg   [31:0] this_assign_0_i_be_reg_400;
reg   [31:0] cont_i_be_reg_412;
reg   [31:0] contNuevo_i_be_reg_424;
reg   [31:0] contNuevoSuma_i_be_reg_437;
reg   [31:0] ind_i_be_reg_449;
reg    ap_block_state1;
wire   [0:0] tmp_5_i_fu_527_p2;
reg   [0:0] tmp_5_i_reg_1092;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_block_state2_pp0_stage0_iter0;
wire    ap_block_state3_pp0_stage0_iter1;
wire    ap_block_pp0_stage0_flag00011001;
wire   [11:0] i_fu_533_p2;
reg   [11:0] i_reg_1096;
reg    ap_enable_reg_pp0_iter0;
wire   [10:0] i_1_i119_cast_fu_549_p1;
reg   [10:0] i_1_i119_cast_reg_1106;
wire    ap_CS_fsm_pp1_stage0;
wire    ap_block_state5_pp1_stage0_iter0;
wire    ap_block_state33_pp1_stage0_iter1;
wire    ap_block_pp1_stage0_flag00011001;
wire   [31:0] i_5_cast_i_fu_575_p1;
reg   [31:0] i_5_cast_i_reg_1116;
reg   [9:0] sum_V_addr_reg_1121;
wire   [0:0] reset_assign_fu_580_p2;
reg   [0:0] reset_assign_reg_1126;
wire   [0:0] tmp_19_i_fu_586_p2;
reg   [0:0] tmp_19_i_reg_1134;
reg   [1:0] currentGroupX_OUT_V_s_reg_1138;
wire   [31:0] cont32_i_fu_592_p2;
reg   [31:0] cont32_i_reg_1143;
reg   [9:0] sum_V_addr_1_reg_1149;
wire   [15:0] p_Val2_2_i_fu_606_p2;
reg   [15:0] p_Val2_2_i_reg_1154;
wire    ap_CS_fsm_pp1_stage1;
wire    ap_block_state6_pp1_stage1_iter0;
wire    ap_block_state34_pp1_stage1_iter1;
wire    ap_block_pp1_stage1_flag00011001;
reg   [41:0] sum_V_load_reg_1164;
reg    ap_enable_reg_pp1_iter0;
wire   [31:0] contNuevoSuma_1_i_fu_612_p3;
reg   [31:0] contNuevoSuma_1_i_reg_1169;
wire   [31:0] phitmp_i_fu_631_p3;
reg   [31:0] currentGroupX_OUT_V_1_reg_1180;
wire   [31:0] p_i_fu_654_p3;
wire   [31:0] p_ind_i_cast_fu_669_p1;
wire   [31:0] indPar_i_fu_673_p2;
wire   [31:0] contNuevoSuma_3_i_fu_679_p2;
reg   [41:0] sum_V_load_1_reg_1205;
wire   [15:0] p_Val2_6_i_fu_700_p2;
reg   [15:0] p_Val2_6_i_reg_1210;
wire  signed [41:0] grp_fu_1055_p3;
reg  signed [41:0] p_Val2_10_i_reg_1215;
wire   [0:0] tmp_4_i_i_fu_706_p2;
reg   [0:0] tmp_4_i_i_reg_1220;
reg   [1:0] currentGroupX_OUT_V_2_reg_1225;
wire   [2:0] tmp_9_fu_712_p1;
reg   [2:0] tmp_9_reg_1230;
wire   [0:0] tmp_19_1_i_fu_727_p2;
reg   [0:0] tmp_19_1_i_reg_1241;
reg   [0:0] ap_reg_pp1_iter1_tmp_19_1_i_reg_1241;
wire   [31:0] cont32_1_i_fu_733_p2;
reg   [31:0] cont32_1_i_reg_1245;
wire   [15:0] p_Val2_2_1_i_fu_760_p2;
reg   [15:0] p_Val2_2_1_i_reg_1251;
wire    ap_CS_fsm_pp1_stage3;
wire    ap_block_state8_pp1_stage3_iter0;
wire    ap_block_state36_pp1_stage3_iter1;
wire    ap_block_pp1_stage3_flag00011001;
wire   [9:0] tmp_12_fu_771_p1;
reg   [9:0] tmp_12_reg_1256;
wire   [31:0] phitmp_1_i_fu_792_p3;
wire   [31:0] p_1_i_fu_810_p3;
wire   [31:0] p_ind_1_i_cast_fu_824_p1;
wire   [31:0] indPar_i_15_fu_828_p2;
wire   [31:0] contNuevoSuma_3_1_i_fu_834_p2;
wire   [0:0] tmp_7_i_fu_840_p2;
reg   [0:0] tmp_7_i_reg_1291;
wire   [15:0] p_Val2_6_1_i_fu_857_p2;
reg   [15:0] p_Val2_6_1_i_reg_1295;
wire    ap_CS_fsm_pp1_stage4;
wire    ap_block_state9_pp1_stage4_iter0;
wire    ap_block_state37_pp1_stage4_iter1;
wire    ap_block_pp1_stage4_flag00011001;
wire  signed [41:0] grp_fu_1071_p3;
reg  signed [41:0] p_Val2_10_1_i_reg_1300;
wire   [0:0] tmp_4_i_i7_fu_863_p2;
reg   [0:0] tmp_4_i_i7_reg_1305;
reg   [1:0] currentGroupX_OUT_V_4_reg_1310;
reg   [1:0] currentGroupX_OUT_V_6_reg_1315;
reg   [1:0] ap_reg_pp1_iter1_currentGroupX_OUT_V_6_reg_1315;
reg   [31:0] p_0_1_i_reg_1320;
wire    ap_CS_fsm_pp1_stage5;
wire    ap_block_state10_pp1_stage5_iter0;
wire    ap_block_state38_pp1_stage5_iter1;
wire    ap_block_pp1_stage5_flag00011001;
wire   [31:0] p_Val2_i_i_fu_888_p2;
reg   [31:0] p_Val2_i_i_reg_1325;
wire    ap_CS_fsm_pp1_stage16;
wire    ap_block_state21_pp1_stage16_iter0;
wire    ap_block_pp1_stage16_flag00011001;
reg   [31:0] currentGroupX_OUT_V_5_reg_1331;
wire    ap_CS_fsm_pp1_stage21;
wire    ap_block_state26_pp1_stage21_iter0;
wire    ap_block_pp1_stage21_flag00011001;
wire   [31:0] p_Val2_i_i3_fu_949_p2;
reg   [31:0] p_Val2_i_i3_reg_1336;
wire   [31:0] tmp_8_i_fu_1003_p2;
wire    ap_CS_fsm_state39;
wire   [0:0] tmp_9_i_fu_1009_p2;
wire   [10:0] i_2_fu_1021_p2;
wire    ap_CS_fsm_state40;
wire   [11:0] i_3_fu_1038_p2;
wire    ap_CS_fsm_state42;
wire    ap_block_pp0_stage0_flag00011011;
reg    ap_condition_pp0_exit_iter0_state2;
reg    ap_enable_reg_pp0_iter1;
wire    ap_CS_fsm_state4;
wire    ap_CS_fsm_pp1_stage27;
wire    ap_block_state32_pp1_stage27_iter0;
wire    ap_block_pp1_stage27_flag00011011;
reg    ap_enable_reg_pp1_iter1;
wire    ap_block_pp1_stage5_flag00011011;
wire    grp_meanFilterInTime_fu_494_ap_start;
wire    grp_meanFilterInTime_fu_494_ap_done;
wire    grp_meanFilterInTime_fu_494_ap_idle;
wire    grp_meanFilterInTime_fu_494_ap_ready;
reg   [31:0] grp_meanFilterInTime_fu_494_x_V;
reg   [0:0] grp_meanFilterInTime_fu_494_reset;
wire   [31:0] grp_meanFilterInTime_fu_494_ap_return;
reg   [11:0] i_i_phi_fu_263_p4;
wire    ap_block_pp0_stage0_flag00000000;
reg   [31:0] ind_i_phi_fu_275_p4;
wire    ap_block_pp1_stage0_flag00000000;
reg   [9:0] i_1_i_phi_fu_288_p4;
reg   [31:0] contNuevo_i_phi_fu_300_p4;
reg   [31:0] cont_i_phi_fu_312_p4;
reg   [31:0] contNuevoSuma_i_phi_fu_324_p4;
wire    ap_block_pp1_stage1_flag00000000;
reg   [31:0] this_assign_0_i_phi_fu_335_p4;
reg   [31:0] ap_phi_precharge_reg_pp1_iter0_indPar_1_i_reg_343;
reg   [31:0] ap_phi_precharge_reg_pp1_iter0_cont32_2_i_reg_354;
reg   [31:0] ap_phi_precharge_reg_pp1_iter0_contNuevo_1_i_reg_365;
reg   [31:0] ap_phi_precharge_reg_pp1_iter0_contNuevoSuma_2_i_reg_377;
reg   [31:0] ap_phi_precharge_reg_pp1_iter0_ind16_2_i_reg_388;
reg   [31:0] ap_phi_precharge_reg_pp1_iter0_this_assign_0_i_be_reg_400;
reg   [31:0] ap_phi_precharge_reg_pp1_iter0_cont_i_be_reg_412;
reg   [31:0] ap_phi_precharge_reg_pp1_iter0_contNuevo_i_be_reg_424;
reg   [31:0] ap_phi_precharge_reg_pp1_iter0_contNuevoSuma_i_be_reg_437;
reg   [31:0] ap_phi_precharge_reg_pp1_iter0_ind_i_be_reg_449;
reg   [10:0] i_2_i_reg_461;
wire   [0:0] tmp_1_i_16_fu_1015_p2;
reg   [11:0] i_3_i_reg_472;
wire   [0:0] tmp_2_i_fu_1032_p2;
wire    ap_CS_fsm_state41;
reg   [31:0] contador_new_i_reg_483;
wire    ap_CS_fsm_state43;
reg    ap_reg_grp_meanFilterInTime_fu_494_ap_start;
wire    ap_block_pp1_stage3_flag00000000;
wire    ap_CS_fsm_pp1_stage17;
wire    ap_block_pp1_stage17_flag00000000;
wire    ap_block_pp1_stage4_flag00000000;
wire    ap_block_pp1_stage5_flag00000000;
wire    ap_block_state11_pp1_stage6_iter0;
wire    ap_block_pp1_stage6_flag00011001;
wire    ap_block_pp1_stage6_flag00000000;
wire    ap_block_state12_pp1_stage7_iter0;
wire    ap_block_pp1_stage7_flag00011001;
wire    ap_block_pp1_stage7_flag00000000;
wire    ap_block_state13_pp1_stage8_iter0;
wire    ap_block_pp1_stage8_flag00011001;
wire    ap_block_pp1_stage8_flag00000000;
wire    ap_block_state14_pp1_stage9_iter0;
wire    ap_block_pp1_stage9_flag00011001;
wire    ap_block_pp1_stage9_flag00000000;
wire    ap_block_state15_pp1_stage10_iter0;
wire    ap_block_pp1_stage10_flag00011001;
wire    ap_block_pp1_stage10_flag00000000;
wire    ap_block_state16_pp1_stage11_iter0;
wire    ap_block_pp1_stage11_flag00011001;
wire    ap_block_pp1_stage11_flag00000000;
wire    ap_block_state17_pp1_stage12_iter0;
wire    ap_block_pp1_stage12_flag00011001;
wire    ap_block_pp1_stage12_flag00000000;
wire    ap_block_state18_pp1_stage13_iter0;
wire    ap_block_pp1_stage13_flag00011001;
wire    ap_block_pp1_stage13_flag00000000;
wire    ap_block_state19_pp1_stage14_iter0;
wire    ap_block_pp1_stage14_flag00011001;
wire    ap_block_pp1_stage14_flag00000000;
wire    ap_block_state20_pp1_stage15_iter0;
wire    ap_block_pp1_stage15_flag00011001;
wire    ap_block_pp1_stage15_flag00000000;
wire    ap_block_pp1_stage16_flag00000000;
wire    ap_block_state22_pp1_stage17_iter0;
wire    ap_block_pp1_stage17_flag00011001;
wire    ap_CS_fsm_pp1_stage18;
wire    ap_block_state23_pp1_stage18_iter0;
wire    ap_block_pp1_stage18_flag00011001;
wire    ap_block_pp1_stage18_flag00000000;
wire    ap_CS_fsm_pp1_stage19;
wire    ap_block_state24_pp1_stage19_iter0;
wire    ap_block_pp1_stage19_flag00011001;
wire    ap_block_pp1_stage19_flag00000000;
wire    ap_CS_fsm_pp1_stage20;
wire    ap_block_state25_pp1_stage20_iter0;
wire    ap_block_pp1_stage20_flag00011001;
wire    ap_block_pp1_stage20_flag00000000;
wire    ap_block_pp1_stage21_flag00000000;
wire    ap_block_state27_pp1_stage22_iter0;
wire    ap_block_pp1_stage22_flag00011001;
wire    ap_block_pp1_stage22_flag00000000;
wire    ap_block_state28_pp1_stage23_iter0;
wire    ap_block_pp1_stage23_flag00011001;
wire    ap_block_pp1_stage23_flag00000000;
wire    ap_block_state29_pp1_stage24_iter0;
wire    ap_block_pp1_stage24_flag00011001;
wire    ap_block_pp1_stage24_flag00000000;
wire    ap_block_state30_pp1_stage25_iter0;
wire    ap_block_pp1_stage25_flag00011001;
wire    ap_block_pp1_stage25_flag00000000;
wire    ap_block_state31_pp1_stage26_iter0;
wire    ap_block_pp1_stage26_flag00011001;
wire    ap_block_pp1_stage26_flag00000000;
wire    ap_block_pp1_stage27_flag00011001;
wire    ap_block_pp1_stage27_flag00000000;
wire    ap_block_pp1_stage2_flag00000000;
wire   [31:0] i_4_cast_i_fu_539_p1;
wire   [31:0] i_cast36_i_fu_544_p1;
wire   [31:0] tmp_cast_i_fu_564_p1;
wire   [31:0] i_1_i_cast_fu_553_p1;
wire   [31:0] tmp_1_cast_i_fu_722_p1;
wire   [31:0] i_5_1_i_cast_fu_775_p1;
wire   [31:0] i_2_cast35_i_fu_1027_p1;
wire   [31:0] i_3_cast34_i_fu_1044_p1;
wire    ap_CS_fsm_state44;
wire  signed [41:0] grp_fu_1062_p3;
wire   [41:0] grp_fu_1078_p3;
reg   [31:0] p_Val2_17_i_fu_934_p4;
wire   [31:0] tmp_1_fu_944_p1;
reg   [31:0] p_Val2_17_1_i_fu_984_p4;
wire   [31:0] tmp_2_fu_994_p1;
wire   [10:0] tmp_i_13_fu_558_p2;
wire   [9:0] i_5_i_fu_569_p2;
wire   [15:0] tmp_3_fu_598_p1;
wire   [15:0] tmp_4_fu_602_p1;
wire   [0:0] tmp_22_i_fu_619_p2;
wire   [31:0] contNuevo_0_op_i_fu_625_p2;
wire   [2:0] tmp_8_fu_644_p1;
wire   [0:0] tmp_21_i_fu_639_p2;
wire   [2:0] ind16_i_cast_fu_648_p2;
wire   [2:0] p_ind_i_fu_661_p3;
wire   [15:0] tmp_5_fu_692_p1;
wire   [15:0] tmp_6_fu_696_p1;
wire   [11:0] i_1_cast_i_cast_fu_685_p1;
wire   [11:0] tmp_1_i_fu_716_p2;
wire   [15:0] tmp_10_fu_752_p1;
wire   [15:0] tmp_11_fu_756_p1;
wire   [10:0] i_5_1_i_fu_766_p2;
wire   [0:0] tmp_22_1_i_fu_780_p2;
wire   [31:0] contNuevo_0_op_1_i_fu_786_p2;
wire   [0:0] tmp_21_1_i_fu_800_p2;
wire   [2:0] ind16_1_i_cast_fu_805_p2;
wire   [2:0] p_ind_1_i_fu_817_p3;
wire   [15:0] tmp_13_fu_849_p1;
wire   [15:0] tmp_14_fu_853_p1;
wire   [31:0] p_Val2_1_fu_881_p3;
wire   [0:0] tmp_7_fu_894_p3;
wire   [0:0] not_reset_i_fu_902_p2;
wire   [0:0] tmp_3_i_i_fu_907_p2;
wire   [0:0] tmp9_fu_918_p2;
wire   [0:0] tmp_fu_912_p2;
wire   [0:0] minimoX_0_fu_923_p2;
wire   [30:0] grp_fu_517_p4;
wire   [0:0] tmp_3_i_i5_fu_963_p2;
wire   [0:0] tmp2_fu_968_p2;
wire   [0:0] tmp_15_fu_955_p3;
wire   [0:0] minimoX_0_1_fu_973_p2;
wire  signed [15:0] grp_fu_1055_p0;
wire  signed [31:0] OP1_V_i_14_fu_689_p1;
wire  signed [15:0] grp_fu_1055_p1;
wire  signed [15:0] grp_fu_1062_p0;
wire  signed [31:0] OP1_V_1_i_fu_739_p1;
wire  signed [15:0] grp_fu_1062_p1;
wire  signed [15:0] grp_fu_1071_p0;
wire  signed [31:0] OP1_V_i_fu_846_p1;
wire  signed [15:0] grp_fu_1071_p1;
wire  signed [15:0] grp_fu_1078_p0;
wire  signed [31:0] OP1_V_1_1_i_fu_869_p1;
wire  signed [15:0] grp_fu_1078_p1;
reg   [36:0] ap_NS_fsm;
wire    ap_block_pp1_stage0_flag00011011;
wire    ap_block_pp1_stage1_flag00011011;
wire    ap_block_pp1_stage2_flag00011011;
wire    ap_block_pp1_stage3_flag00011011;
wire    ap_block_pp1_stage4_flag00011011;
wire    ap_block_pp1_stage6_flag00011011;
wire    ap_block_pp1_stage7_flag00011011;
wire    ap_block_pp1_stage8_flag00011011;
wire    ap_block_pp1_stage9_flag00011011;
wire    ap_block_pp1_stage10_flag00011011;
wire    ap_block_pp1_stage11_flag00011011;
wire    ap_block_pp1_stage12_flag00011011;
wire    ap_block_pp1_stage13_flag00011011;
wire    ap_block_pp1_stage14_flag00011011;
wire    ap_block_pp1_stage15_flag00011011;
wire    ap_block_pp1_stage16_flag00011011;
wire    ap_block_pp1_stage17_flag00011011;
wire    ap_block_pp1_stage18_flag00011011;
wire    ap_block_pp1_stage19_flag00011011;
wire    ap_block_pp1_stage20_flag00011011;
wire    ap_block_pp1_stage21_flag00011011;
wire    ap_block_pp1_stage22_flag00011011;
wire    ap_block_pp1_stage23_flag00011011;
wire    ap_block_pp1_stage24_flag00011011;
wire    ap_block_pp1_stage25_flag00011011;
wire    ap_block_pp1_stage26_flag00011011;
reg    ap_idle_pp0;
wire    ap_enable_pp0;
reg    ap_idle_pp1;
wire    ap_enable_pp1;
reg    ap_condition_232;
reg    ap_condition_291;

// power-on initialization
initial begin
#0 ap_done_reg = 1'b0;
#0 ap_CS_fsm = 37'd1;
#0 vector_V_0 = 32'd0;
#0 derivada_V_0 = 32'd0;
#0 contador = 32'd0;
#0 ap_enable_reg_pp0_iter0 = 1'b0;
#0 ap_enable_reg_pp1_iter0 = 1'b0;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp1_iter1 = 1'b0;
#0 ap_reg_grp_meanFilterInTime_fu_494_ap_start = 1'b0;
end

sweep_algorithm_Dcud #(
    .DataWidth( 24 ),
    .AddressRange( 2049 ),
    .AddressWidth( 12 ))
aux_array_V_1_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(aux_array_V_1_address0),
    .ce0(aux_array_V_1_ce0),
    .we0(aux_array_V_1_we0),
    .d0(p_read),
    .q0(aux_array_V_1_q0),
    .address1(aux_array_V_1_address1),
    .ce1(aux_array_V_1_ce1),
    .we1(aux_array_V_1_we1),
    .d1(aux_array_V_1_d1),
    .q1(aux_array_V_1_q1)
);

sweep_algorithm_DdEe #(
    .DataWidth( 42 ),
    .AddressRange( 1024 ),
    .AddressWidth( 10 ))
sum_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(sum_V_address0),
    .ce0(sum_V_ce0),
    .we0(sum_V_we0),
    .d0(sum_V_d0),
    .q0(sum_V_q0),
    .address1(sum_V_address1),
    .ce1(sum_V_ce1),
    .we1(sum_V_we1),
    .d1(grp_fu_1078_p3),
    .q1(sum_V_q1)
);

meanFilterInTime grp_meanFilterInTime_fu_494(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_meanFilterInTime_fu_494_ap_start),
    .ap_done(grp_meanFilterInTime_fu_494_ap_done),
    .ap_idle(grp_meanFilterInTime_fu_494_ap_idle),
    .ap_ready(grp_meanFilterInTime_fu_494_ap_ready),
    .x_V(grp_meanFilterInTime_fu_494_x_V),
    .reset(grp_meanFilterInTime_fu_494_reset),
    .ap_return(grp_meanFilterInTime_fu_494_ap_return),
    .ap_ce(1'b1)
);

axi_algorithm_maceOg #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 42 ),
    .dout_WIDTH( 42 ))
axi_algorithm_maceOg_U11(
    .din0(grp_fu_1055_p0),
    .din1(grp_fu_1055_p1),
    .din2(sum_V_load_reg_1164),
    .dout(grp_fu_1055_p3)
);

axi_algorithm_macfYi #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 42 ),
    .dout_WIDTH( 42 ))
axi_algorithm_macfYi_U12(
    .din0(grp_fu_1062_p0),
    .din1(grp_fu_1062_p1),
    .din2(p_Val2_10_i_reg_1215),
    .dout(grp_fu_1062_p3)
);

axi_algorithm_maceOg #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 42 ),
    .dout_WIDTH( 42 ))
axi_algorithm_maceOg_U13(
    .din0(grp_fu_1071_p0),
    .din1(grp_fu_1071_p1),
    .din2(sum_V_load_1_reg_1205),
    .dout(grp_fu_1071_p3)
);

axi_algorithm_macfYi #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 42 ),
    .dout_WIDTH( 42 ))
axi_algorithm_macfYi_U14(
    .din0(grp_fu_1078_p0),
    .din1(grp_fu_1078_p1),
    .din2(p_Val2_10_1_i_reg_1300),
    .dout(grp_fu_1078_p3)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_continue)) begin
            ap_done_reg <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_state44)) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_block_pp0_stage0_flag00011011 == 1'b0) & (1'b1 == ap_condition_pp0_exit_iter0_state2))) begin
            ap_enable_reg_pp0_iter0 <= 1'b0;
        end else if (((1'b1 == ap_CS_fsm_state1) & ~((1'b0 == ap_start) | (ap_done_reg == 1'b1)))) begin
            ap_enable_reg_pp0_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if (((ap_block_pp0_stage0_flag00011011 == 1'b0) & (1'b1 == ap_condition_pp0_exit_iter0_state2))) begin
            ap_enable_reg_pp0_iter1 <= (ap_condition_pp0_exit_iter0_state2 ^ 1'b1);
        end else if ((ap_block_pp0_stage0_flag00011011 == 1'b0)) begin
            ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
        end else if (((1'b1 == ap_CS_fsm_state1) & ~((1'b0 == ap_start) | (ap_done_reg == 1'b1)))) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter0 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp1_stage27) & (ap_block_pp1_stage27_flag00011011 == 1'b0) & (1'd1 == tmp_7_i_reg_1291))) begin
            ap_enable_reg_pp1_iter0 <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_state4)) begin
            ap_enable_reg_pp1_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter1 <= 1'b0;
    end else begin
        if ((((1'b1 == ap_CS_fsm_pp1_stage27) & (ap_block_pp1_stage27_flag00011011 == 1'b0)) | ((1'b1 == ap_CS_fsm_pp1_stage5) & (ap_block_pp1_stage5_flag00011011 == 1'b0)))) begin
            ap_enable_reg_pp1_iter1 <= ap_enable_reg_pp1_iter0;
        end else if ((1'b1 == ap_CS_fsm_state4)) begin
            ap_enable_reg_pp1_iter1 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_reg_grp_meanFilterInTime_fu_494_ap_start <= 1'b0;
    end else begin
        if ((((1'b1 == ap_CS_fsm_pp1_stage2) & (ap_block_pp1_stage2_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter0)) | ((1'b1 == ap_enable_reg_pp1_iter0) & (1'b1 == ap_CS_fsm_pp1_stage16) & (ap_block_pp1_stage16_flag00011001 == 1'b0)))) begin
            ap_reg_grp_meanFilterInTime_fu_494_ap_start <= 1'b1;
        end else if ((1'b1 == grp_meanFilterInTime_fu_494_ap_ready)) begin
            ap_reg_grp_meanFilterInTime_fu_494_ap_start <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((ap_condition_232 == 1'b1)) begin
        if ((1'd0 == tmp_19_i_reg_1134)) begin
            ap_phi_precharge_reg_pp1_iter0_cont32_2_i_reg_354 <= cont_i_reg_308;
        end else if ((tmp_19_i_reg_1134 == 1'd1)) begin
            ap_phi_precharge_reg_pp1_iter0_cont32_2_i_reg_354 <= p_i_fu_654_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((ap_condition_232 == 1'b1)) begin
        if ((1'd0 == tmp_19_i_reg_1134)) begin
            ap_phi_precharge_reg_pp1_iter0_contNuevoSuma_2_i_reg_377 <= contNuevoSuma_1_i_fu_612_p3;
        end else if ((tmp_19_i_reg_1134 == 1'd1)) begin
            ap_phi_precharge_reg_pp1_iter0_contNuevoSuma_2_i_reg_377 <= contNuevoSuma_3_i_fu_679_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((ap_condition_291 == 1'b1)) begin
        if ((1'd0 == tmp_19_1_i_reg_1241)) begin
            ap_phi_precharge_reg_pp1_iter0_contNuevoSuma_i_be_reg_437 <= contNuevoSuma_2_i_reg_377;
        end else if ((1'd1 == tmp_19_1_i_reg_1241)) begin
            ap_phi_precharge_reg_pp1_iter0_contNuevoSuma_i_be_reg_437 <= contNuevoSuma_3_1_i_fu_834_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((ap_condition_232 == 1'b1)) begin
        if ((1'd0 == tmp_19_i_reg_1134)) begin
            ap_phi_precharge_reg_pp1_iter0_contNuevo_1_i_reg_365 <= phitmp_i_fu_631_p3;
        end else if ((tmp_19_i_reg_1134 == 1'd1)) begin
            ap_phi_precharge_reg_pp1_iter0_contNuevo_1_i_reg_365 <= 32'd1;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((ap_condition_291 == 1'b1)) begin
        if ((1'd0 == tmp_19_1_i_reg_1241)) begin
            ap_phi_precharge_reg_pp1_iter0_contNuevo_i_be_reg_424 <= phitmp_1_i_fu_792_p3;
        end else if ((1'd1 == tmp_19_1_i_reg_1241)) begin
            ap_phi_precharge_reg_pp1_iter0_contNuevo_i_be_reg_424 <= 32'd1;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((ap_condition_291 == 1'b1)) begin
        if ((1'd0 == tmp_19_1_i_reg_1241)) begin
            ap_phi_precharge_reg_pp1_iter0_cont_i_be_reg_412 <= cont32_2_i_reg_354;
        end else if ((1'd1 == tmp_19_1_i_reg_1241)) begin
            ap_phi_precharge_reg_pp1_iter0_cont_i_be_reg_412 <= p_1_i_fu_810_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((ap_condition_232 == 1'b1)) begin
        if ((1'd0 == tmp_19_i_reg_1134)) begin
            ap_phi_precharge_reg_pp1_iter0_ind16_2_i_reg_388 <= ind_i_reg_271;
        end else if ((tmp_19_i_reg_1134 == 1'd1)) begin
            ap_phi_precharge_reg_pp1_iter0_ind16_2_i_reg_388 <= p_ind_i_cast_fu_669_p1;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((ap_condition_232 == 1'b1)) begin
        if ((1'd0 == tmp_19_i_reg_1134)) begin
            ap_phi_precharge_reg_pp1_iter0_indPar_1_i_reg_343 <= this_assign_0_i_phi_fu_335_p4;
        end else if ((tmp_19_i_reg_1134 == 1'd1)) begin
            ap_phi_precharge_reg_pp1_iter0_indPar_1_i_reg_343 <= indPar_i_fu_673_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((ap_condition_291 == 1'b1)) begin
        if ((1'd0 == tmp_19_1_i_reg_1241)) begin
            ap_phi_precharge_reg_pp1_iter0_ind_i_be_reg_449 <= ind16_2_i_reg_388;
        end else if ((1'd1 == tmp_19_1_i_reg_1241)) begin
            ap_phi_precharge_reg_pp1_iter0_ind_i_be_reg_449 <= p_ind_1_i_cast_fu_824_p1;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((ap_condition_291 == 1'b1)) begin
        if ((1'd0 == tmp_19_1_i_reg_1241)) begin
            ap_phi_precharge_reg_pp1_iter0_this_assign_0_i_be_reg_400 <= indPar_1_i_reg_343;
        end else if ((1'd1 == tmp_19_1_i_reg_1241)) begin
            ap_phi_precharge_reg_pp1_iter0_this_assign_0_i_be_reg_400 <= indPar_i_15_fu_828_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp1_stage1) & (ap_block_pp1_stage1_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter1) & (1'd0 == tmp_7_i_reg_1291))) begin
        contNuevoSuma_i_reg_320 <= contNuevoSuma_i_be_reg_437;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        contNuevoSuma_i_reg_320 <= 32'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp1_stage0) & (ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter1) & (1'd0 == tmp_7_i_reg_1291))) begin
        contNuevo_i_reg_296 <= contNuevo_i_be_reg_424;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        contNuevo_i_reg_296 <= 32'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp1_stage0) & (ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter1) & (1'd0 == tmp_7_i_reg_1291))) begin
        cont_i_reg_308 <= cont_i_be_reg_412;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        cont_i_reg_308 <= 32'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state43)) begin
        contador_new_i_reg_483 <= 32'd0;
    end else if (((1'b1 == ap_CS_fsm_state39) & (1'd0 == tmp_9_i_fu_1009_p2))) begin
        contador_new_i_reg_483 <= tmp_8_i_fu_1003_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp1_stage3) & (ap_block_pp1_stage3_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter1) & (1'd1 == ap_reg_pp1_iter1_tmp_19_1_i_reg_1241))) begin
        derivada_V_0 <= p_Val2_i_i3_reg_1336;
    end else if (((1'b1 == ap_enable_reg_pp1_iter0) & (tmp_19_i_reg_1134 == 1'd1) & (1'b1 == ap_CS_fsm_pp1_stage17) & (ap_block_pp1_stage17_flag00011001 == 1'b0))) begin
        derivada_V_0 <= p_Val2_i_i_reg_1325;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp1_stage0) & (ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter1) & (1'd0 == tmp_7_i_reg_1291))) begin
        i_1_i_reg_284 <= tmp_12_reg_1256;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        i_1_i_reg_284 <= 10'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state39) & (1'd1 == tmp_9_i_fu_1009_p2))) begin
        i_2_i_reg_461 <= 11'd0;
    end else if (((1'b1 == ap_CS_fsm_state40) & (1'd0 == tmp_1_i_16_fu_1015_p2))) begin
        i_2_i_reg_461 <= i_2_fu_1021_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state41)) begin
        i_3_i_reg_472 <= 12'd0;
    end else if (((1'b1 == ap_CS_fsm_state42) & (1'd0 == tmp_2_i_fu_1032_p2))) begin
        i_3_i_reg_472 <= i_3_fu_1038_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter1) & (tmp_5_i_reg_1092 == 1'd0))) begin
        i_i_reg_259 <= i_reg_1096;
    end else if (((1'b1 == ap_CS_fsm_state1) & ~((1'b0 == ap_start) | (ap_done_reg == 1'b1)))) begin
        i_i_reg_259 <= 12'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp1_stage0) & (ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter1) & (1'd0 == tmp_7_i_reg_1291))) begin
        ind_i_reg_271 <= ind_i_be_reg_449;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        ind_i_reg_271 <= 32'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp1_stage1) & (ap_block_pp1_stage1_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter1) & (1'd0 == tmp_7_i_reg_1291))) begin
        this_assign_0_i_reg_331 <= this_assign_0_i_be_reg_400;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        this_assign_0_i_reg_331 <= 32'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp1_stage2) & (ap_block_pp1_stage2_flag00011001 == 1'b0))) begin
        ap_reg_pp1_iter1_cont32_2_i_reg_354 <= cont32_2_i_reg_354;
        ap_reg_pp1_iter1_tmp_19_1_i_reg_1241 <= tmp_19_1_i_reg_1241;
        p_Val2_6_i_reg_1210 <= p_Val2_6_i_fu_700_p2;
        tmp_19_1_i_reg_1241 <= tmp_19_1_i_fu_727_p2;
        tmp_9_reg_1230 <= tmp_9_fu_712_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp1_stage4) & (ap_block_pp1_stage4_flag00011001 == 1'b0))) begin
        ap_reg_pp1_iter1_currentGroupX_OUT_V_6_reg_1315 <= currentGroupX_OUT_V_6_reg_1315;
        p_Val2_6_1_i_reg_1295 <= p_Val2_6_1_i_fu_857_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp1_stage2) & (ap_block_pp1_stage2_flag00011001 == 1'b0) & (1'd1 == tmp_19_1_i_fu_727_p2))) begin
        cont32_1_i_reg_1245 <= cont32_1_i_fu_733_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp1_stage2) & (ap_block_pp1_stage2_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter0))) begin
        cont32_2_i_reg_354 <= ap_phi_precharge_reg_pp1_iter0_cont32_2_i_reg_354;
        contNuevoSuma_2_i_reg_377 <= ap_phi_precharge_reg_pp1_iter0_contNuevoSuma_2_i_reg_377;
        contNuevo_1_i_reg_365 <= ap_phi_precharge_reg_pp1_iter0_contNuevo_1_i_reg_365;
        ind16_2_i_reg_388 <= ap_phi_precharge_reg_pp1_iter0_ind16_2_i_reg_388;
        indPar_1_i_reg_343 <= ap_phi_precharge_reg_pp1_iter0_indPar_1_i_reg_343;
        p_Val2_10_i_reg_1215 <= grp_fu_1055_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp1_stage0) & (ap_block_pp1_stage0_flag00011001 == 1'b0) & (tmp_19_i_fu_586_p2 == 1'd1))) begin
        cont32_i_reg_1143 <= cont32_i_fu_592_p2;
        currentGroupX_OUT_V_s_reg_1138 <= ind_i_phi_fu_275_p4;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp1_stage1) & (ap_block_pp1_stage1_flag00011001 == 1'b0))) begin
        contNuevoSuma_1_i_reg_1169 <= contNuevoSuma_1_i_fu_612_p3;
        p_Val2_2_i_reg_1154 <= p_Val2_2_i_fu_606_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_enable_reg_pp1_iter0) & (1'b1 == ap_CS_fsm_pp1_stage4) & (ap_block_pp1_stage4_flag00011001 == 1'b0))) begin
        contNuevoSuma_i_be_reg_437 <= ap_phi_precharge_reg_pp1_iter0_contNuevoSuma_i_be_reg_437;
        contNuevo_i_be_reg_424 <= ap_phi_precharge_reg_pp1_iter0_contNuevo_i_be_reg_424;
        cont_i_be_reg_412 <= ap_phi_precharge_reg_pp1_iter0_cont_i_be_reg_412;
        ind_i_be_reg_449 <= ap_phi_precharge_reg_pp1_iter0_ind_i_be_reg_449;
        p_Val2_10_1_i_reg_1300 <= grp_fu_1071_p3;
        this_assign_0_i_be_reg_400 <= ap_phi_precharge_reg_pp1_iter0_this_assign_0_i_be_reg_400;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state44)) begin
        contador <= contador_new_i_reg_483;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp1_stage1) & (ap_block_pp1_stage1_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter0) & (tmp_19_i_reg_1134 == 1'd1))) begin
        currentGroupX_OUT_V_1_reg_1180 <= currentGroupX_OUT_V_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp1_stage2) & (ap_block_pp1_stage2_flag00011001 == 1'b0) & (tmp_19_i_reg_1134 == 1'd1))) begin
        currentGroupX_OUT_V_2_reg_1225 <= contNuevoSuma_1_i_reg_1169;
        tmp_4_i_i_reg_1220 <= tmp_4_i_i_fu_706_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'd1 == tmp_19_1_i_reg_1241) & (1'b1 == ap_CS_fsm_pp1_stage4) & (ap_block_pp1_stage4_flag00011001 == 1'b0))) begin
        currentGroupX_OUT_V_4_reg_1310 <= ind16_2_i_reg_388;
        currentGroupX_OUT_V_6_reg_1315 <= contNuevoSuma_2_i_reg_377;
        tmp_4_i_i7_reg_1305 <= tmp_4_i_i7_fu_863_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_enable_reg_pp1_iter0) & (1'd1 == tmp_19_1_i_reg_1241) & (1'b1 == ap_CS_fsm_pp1_stage21) & (ap_block_pp1_stage21_flag00011001 == 1'b0))) begin
        currentGroupX_OUT_V_5_reg_1331 <= currentGroupX_OUT_V_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp1_stage0) & (ap_block_pp1_stage0_flag00011001 == 1'b0))) begin
        i_1_i119_cast_reg_1106[9 : 0] <= i_1_i119_cast_fu_549_p1[9 : 0];
        i_5_cast_i_reg_1116[9 : 1] <= i_5_cast_i_fu_575_p1[9 : 1];
        reset_assign_reg_1126 <= reset_assign_fu_580_p2;
        sum_V_addr_1_reg_1149[9 : 1] <= i_5_cast_i_fu_575_p1[9 : 1];
        sum_V_addr_reg_1121 <= i_1_i_cast_fu_553_p1;
        tmp_19_i_reg_1134 <= tmp_19_i_fu_586_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter0))) begin
        i_reg_1096 <= i_fu_533_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp1_stage5) & (ap_block_pp1_stage5_flag00011001 == 1'b0))) begin
        p_0_1_i_reg_1320 <= {{grp_fu_1078_p3[41:10]}};
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp1_stage3) & (ap_block_pp1_stage3_flag00011001 == 1'b0))) begin
        p_Val2_2_1_i_reg_1251 <= p_Val2_2_1_i_fu_760_p2;
        tmp_7_i_reg_1291 <= tmp_7_i_fu_840_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp1_stage2) & (ap_block_pp1_stage2_flag00011001 == 1'b0) & (1'd1 == tmp_19_1_i_reg_1241))) begin
        p_Val2_i_i3_reg_1336 <= p_Val2_i_i3_fu_949_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_19_i_reg_1134 == 1'd1) & (1'b1 == ap_CS_fsm_pp1_stage16) & (ap_block_pp1_stage16_flag00011001 == 1'b0))) begin
        p_Val2_i_i_reg_1325 <= p_Val2_i_i_fu_888_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp1_stage1) & (ap_block_pp1_stage1_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter0))) begin
        sum_V_load_1_reg_1205 <= sum_V_q1;
        sum_V_load_reg_1164 <= sum_V_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_enable_reg_pp1_iter0) & (1'b1 == ap_CS_fsm_pp1_stage3) & (ap_block_pp1_stage3_flag00011001 == 1'b0))) begin
        tmp_12_reg_1256 <= tmp_12_fu_771_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_block_pp0_stage0_flag00011001 == 1'b0))) begin
        tmp_5_i_reg_1092 <= tmp_5_i_fu_527_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((((1'b1 == ap_enable_reg_pp1_iter0) & (tmp_19_i_reg_1134 == 1'd1) & (1'b1 == ap_CS_fsm_pp1_stage16) & (ap_block_pp1_stage16_flag00011001 == 1'b0)) | ((1'b1 == ap_CS_fsm_pp1_stage2) & (ap_block_pp1_stage2_flag00011001 == 1'b0) & (1'd1 == tmp_19_1_i_reg_1241) & (1'b1 == ap_enable_reg_pp1_iter1)))) begin
        vector_V_0 <= grp_meanFilterInTime_fu_494_ap_return;
    end
end

always @ (*) begin
    if ((tmp_5_i_fu_527_p2 == 1'd1)) begin
        ap_condition_pp0_exit_iter0_state2 = 1'b1;
    end else begin
        ap_condition_pp0_exit_iter0_state2 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state44)) begin
        ap_done = 1'b1;
    end else begin
        ap_done = ap_done_reg;
    end
end

always @ (*) begin
    if (((1'b0 == ap_start) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_enable_reg_pp0_iter0) & (1'b0 == ap_enable_reg_pp0_iter1))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_enable_reg_pp1_iter0) & (1'b0 == ap_enable_reg_pp1_iter1))) begin
        ap_idle_pp1 = 1'b1;
    end else begin
        ap_idle_pp1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state44)) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_enable_reg_pp1_iter0) & (1'b1 == ap_CS_fsm_pp1_stage3) & (ap_block_pp1_stage3_flag00000000 == 1'b0))) begin
        aux_array_V_1_address0 = i_5_1_i_cast_fu_775_p1;
    end else if (((1'b1 == ap_CS_fsm_pp1_stage2) & (1'b1 == ap_enable_reg_pp1_iter0) & (ap_block_pp1_stage2_flag00000000 == 1'b0))) begin
        aux_array_V_1_address0 = tmp_1_cast_i_fu_722_p1;
    end else if (((1'b1 == ap_CS_fsm_pp1_stage1) & (1'b1 == ap_enable_reg_pp1_iter0) & (ap_block_pp1_stage1_flag00000000 == 1'b0))) begin
        aux_array_V_1_address0 = i_5_cast_i_reg_1116;
    end else if (((1'b1 == ap_CS_fsm_pp1_stage0) & (1'b1 == ap_enable_reg_pp1_iter0) & (ap_block_pp1_stage0_flag00000000 == 1'b0))) begin
        aux_array_V_1_address0 = tmp_cast_i_fu_564_p1;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        aux_array_V_1_address0 = 12'd2048;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_enable_reg_pp0_iter0) & (ap_block_pp0_stage0_flag00000000 == 1'b0))) begin
        aux_array_V_1_address0 = i_4_cast_i_fu_539_p1;
    end else begin
        aux_array_V_1_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state42)) begin
        aux_array_V_1_address1 = i_3_cast34_i_fu_1044_p1;
    end else if ((((1'b1 == ap_enable_reg_pp1_iter0) & (1'b1 == ap_CS_fsm_pp1_stage3) & (ap_block_pp1_stage3_flag00000000 == 1'b0)) | ((1'b1 == ap_CS_fsm_pp1_stage1) & (1'b1 == ap_enable_reg_pp1_iter0) & (ap_block_pp1_stage1_flag00000000 == 1'b0)))) begin
        aux_array_V_1_address1 = 12'd0;
    end else if ((((1'b1 == ap_CS_fsm_pp1_stage0) & (1'b1 == ap_enable_reg_pp1_iter0) & (ap_block_pp1_stage0_flag00000000 == 1'b0)) | ((1'b1 == ap_CS_fsm_pp1_stage2) & (1'b1 == ap_enable_reg_pp1_iter0) & (ap_block_pp1_stage2_flag00000000 == 1'b0)))) begin
        aux_array_V_1_address1 = 12'd1024;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_enable_reg_pp0_iter1) & (ap_block_pp0_stage0_flag00000000 == 1'b0))) begin
        aux_array_V_1_address1 = i_cast36_i_fu_544_p1;
    end else begin
        aux_array_V_1_address1 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter0)) | ((1'b1 == ap_CS_fsm_pp1_stage1) & (ap_block_pp1_stage1_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter0)) | ((1'b1 == ap_CS_fsm_pp1_stage2) & (ap_block_pp1_stage2_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter0)) | ((1'b1 == ap_enable_reg_pp1_iter0) & (1'b1 == ap_CS_fsm_pp1_stage3) & (ap_block_pp1_stage3_flag00011001 == 1'b0)) | (1'b1 == ap_CS_fsm_state4) | ((1'b1 == ap_CS_fsm_pp1_stage0) & (ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter0)))) begin
        aux_array_V_1_ce0 = 1'b1;
    end else begin
        aux_array_V_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_pp1_stage1) & (ap_block_pp1_stage1_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter0)) | ((1'b1 == ap_CS_fsm_pp1_stage2) & (ap_block_pp1_stage2_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter0)) | ((1'b1 == ap_enable_reg_pp1_iter0) & (1'b1 == ap_CS_fsm_pp1_stage3) & (ap_block_pp1_stage3_flag00011001 == 1'b0)) | (1'b1 == ap_CS_fsm_state42) | ((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter1)) | ((1'b1 == ap_CS_fsm_pp1_stage0) & (ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter0)))) begin
        aux_array_V_1_ce1 = 1'b1;
    end else begin
        aux_array_V_1_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state42)) begin
        aux_array_V_1_d1 = 24'd0;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_enable_reg_pp0_iter1) & (ap_block_pp0_stage0_flag00000000 == 1'b0))) begin
        aux_array_V_1_d1 = aux_array_V_1_q0;
    end else begin
        aux_array_V_1_d1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        aux_array_V_1_we0 = 1'b1;
    end else begin
        aux_array_V_1_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter1) & (tmp_5_i_reg_1092 == 1'd0)) | ((1'b1 == ap_CS_fsm_state42) & (1'd0 == tmp_2_i_fu_1032_p2)))) begin
        aux_array_V_1_we1 = 1'b1;
    end else begin
        aux_array_V_1_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp1_stage1) & (1'b1 == ap_enable_reg_pp1_iter1) & (1'd0 == tmp_7_i_reg_1291) & (ap_block_pp1_stage1_flag00000000 == 1'b0))) begin
        contNuevoSuma_i_phi_fu_324_p4 = contNuevoSuma_i_be_reg_437;
    end else begin
        contNuevoSuma_i_phi_fu_324_p4 = contNuevoSuma_i_reg_320;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp1_stage0) & (1'b1 == ap_enable_reg_pp1_iter1) & (1'd0 == tmp_7_i_reg_1291) & (ap_block_pp1_stage0_flag00000000 == 1'b0))) begin
        contNuevo_i_phi_fu_300_p4 = contNuevo_i_be_reg_424;
    end else begin
        contNuevo_i_phi_fu_300_p4 = contNuevo_i_reg_296;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp1_stage0) & (1'b1 == ap_enable_reg_pp1_iter1) & (1'd0 == tmp_7_i_reg_1291) & (ap_block_pp1_stage0_flag00000000 == 1'b0))) begin
        cont_i_phi_fu_312_p4 = cont_i_be_reg_412;
    end else begin
        cont_i_phi_fu_312_p4 = cont_i_reg_308;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp1_stage5) & (1'b1 == ap_enable_reg_pp1_iter1) & (ap_block_pp1_stage5_flag00000000 == 1'b0))) begin
        currentGroupX_OUT_V_address0 = ap_reg_pp1_iter1_currentGroupX_OUT_V_6_reg_1315;
    end else if (((1'b1 == ap_CS_fsm_pp1_stage4) & (1'b1 == ap_enable_reg_pp1_iter1) & (ap_block_pp1_stage4_flag00000000 == 1'b0))) begin
        currentGroupX_OUT_V_address0 = currentGroupX_OUT_V_6_reg_1315;
    end else if ((((1'b1 == ap_enable_reg_pp1_iter0) & (1'b1 == ap_CS_fsm_pp1_stage20) & (ap_block_pp1_stage20_flag00000000 == 1'b0)) | ((1'b1 == ap_CS_fsm_pp1_stage3) & (1'b1 == ap_enable_reg_pp1_iter1) & (ap_block_pp1_stage3_flag00000000 == 1'b0)))) begin
        currentGroupX_OUT_V_address0 = currentGroupX_OUT_V_4_reg_1310;
    end else if ((((1'b1 == ap_enable_reg_pp1_iter0) & (1'b1 == ap_CS_fsm_pp1_stage18) & (ap_block_pp1_stage18_flag00000000 == 1'b0)) | ((1'b1 == ap_enable_reg_pp1_iter0) & (1'b1 == ap_CS_fsm_pp1_stage19) & (ap_block_pp1_stage19_flag00000000 == 1'b0)))) begin
        currentGroupX_OUT_V_address0 = currentGroupX_OUT_V_2_reg_1225;
    end else if (((1'b1 == ap_enable_reg_pp1_iter0) & (1'b1 == ap_CS_fsm_pp1_stage17) & (ap_block_pp1_stage17_flag00000000 == 1'b0))) begin
        currentGroupX_OUT_V_address0 = currentGroupX_OUT_V_s_reg_1138;
    end else if (((1'b1 == ap_CS_fsm_pp1_stage0) & (1'b1 == ap_enable_reg_pp1_iter0) & (ap_block_pp1_stage0_flag00000000 == 1'b0))) begin
        currentGroupX_OUT_V_address0 = ind_i_phi_fu_275_p4;
    end else begin
        currentGroupX_OUT_V_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_enable_reg_pp1_iter0) & (1'b1 == ap_CS_fsm_pp1_stage17) & (ap_block_pp1_stage17_flag00011001 == 1'b0)) | ((1'b1 == ap_enable_reg_pp1_iter0) & (1'b1 == ap_CS_fsm_pp1_stage18) & (ap_block_pp1_stage18_flag00011001 == 1'b0)) | ((1'b1 == ap_enable_reg_pp1_iter0) & (1'b1 == ap_CS_fsm_pp1_stage19) & (ap_block_pp1_stage19_flag00011001 == 1'b0)) | ((1'b1 == ap_enable_reg_pp1_iter0) & (1'b1 == ap_CS_fsm_pp1_stage20) & (ap_block_pp1_stage20_flag00011001 == 1'b0)) | ((1'b1 == ap_CS_fsm_pp1_stage3) & (ap_block_pp1_stage3_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter1)) | ((1'b1 == ap_CS_fsm_pp1_stage0) & (ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter0)) | ((1'b1 == ap_CS_fsm_pp1_stage4) & (ap_block_pp1_stage4_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter1)) | ((1'b1 == ap_CS_fsm_pp1_stage5) & (ap_block_pp1_stage5_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter1)))) begin
        currentGroupX_OUT_V_ce0 = 1'b1;
    end else begin
        currentGroupX_OUT_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp1_stage5) & (1'b1 == ap_enable_reg_pp1_iter1) & (ap_block_pp1_stage5_flag00000000 == 1'b0))) begin
        currentGroupX_OUT_V_d0 = tmp_2_fu_994_p1;
    end else if (((1'b1 == ap_CS_fsm_pp1_stage3) & (1'b1 == ap_enable_reg_pp1_iter1) & (ap_block_pp1_stage3_flag00000000 == 1'b0))) begin
        currentGroupX_OUT_V_d0 = p_Val2_17_1_i_fu_984_p4;
    end else if (((1'b1 == ap_enable_reg_pp1_iter0) & (1'b1 == ap_CS_fsm_pp1_stage19) & (ap_block_pp1_stage19_flag00000000 == 1'b0))) begin
        currentGroupX_OUT_V_d0 = tmp_1_fu_944_p1;
    end else if (((1'b1 == ap_enable_reg_pp1_iter0) & (1'b1 == ap_CS_fsm_pp1_stage17) & (ap_block_pp1_stage17_flag00000000 == 1'b0))) begin
        currentGroupX_OUT_V_d0 = p_Val2_17_i_fu_934_p4;
    end else begin
        currentGroupX_OUT_V_d0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_enable_reg_pp1_iter0) & (tmp_19_i_reg_1134 == 1'd1) & (1'b1 == ap_CS_fsm_pp1_stage17) & (ap_block_pp1_stage17_flag00011001 == 1'b0)) | ((1'b1 == ap_CS_fsm_pp1_stage3) & (ap_block_pp1_stage3_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter1) & (1'd1 == ap_reg_pp1_iter1_tmp_19_1_i_reg_1241)) | ((1'b1 == ap_enable_reg_pp1_iter0) & (tmp_19_i_reg_1134 == 1'd1) & (1'b1 == ap_CS_fsm_pp1_stage19) & (ap_block_pp1_stage19_flag00011001 == 1'b0)) | ((1'b1 == ap_CS_fsm_pp1_stage5) & (ap_block_pp1_stage5_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter1) & (1'd1 == ap_reg_pp1_iter1_tmp_19_1_i_reg_1241)))) begin
        currentGroupX_OUT_V_we0 = 1'b1;
    end else begin
        currentGroupX_OUT_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_enable_reg_pp1_iter0)) begin
        if (((1'b1 == ap_CS_fsm_pp1_stage17) & (ap_block_pp1_stage17_flag00000000 == 1'b0))) begin
            grp_meanFilterInTime_fu_494_reset = 1'd0;
        end else if (((1'b1 == ap_CS_fsm_pp1_stage3) & (ap_block_pp1_stage3_flag00000000 == 1'b0))) begin
            grp_meanFilterInTime_fu_494_reset = reset_assign_reg_1126;
        end else begin
            grp_meanFilterInTime_fu_494_reset = 'bx;
        end
    end else begin
        grp_meanFilterInTime_fu_494_reset = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_enable_reg_pp1_iter0)) begin
        if (((1'b1 == ap_CS_fsm_pp1_stage17) & (ap_block_pp1_stage17_flag00000000 == 1'b0))) begin
            grp_meanFilterInTime_fu_494_x_V = p_0_1_i_reg_1320;
        end else if (((1'b1 == ap_CS_fsm_pp1_stage3) & (ap_block_pp1_stage3_flag00000000 == 1'b0))) begin
            grp_meanFilterInTime_fu_494_x_V = {{grp_fu_1062_p3[41:10]}};
        end else begin
            grp_meanFilterInTime_fu_494_x_V = 'bx;
        end
    end else begin
        grp_meanFilterInTime_fu_494_x_V = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp1_stage0) & (1'b1 == ap_enable_reg_pp1_iter1) & (1'd0 == tmp_7_i_reg_1291) & (ap_block_pp1_stage0_flag00000000 == 1'b0))) begin
        i_1_i_phi_fu_288_p4 = tmp_12_reg_1256;
    end else begin
        i_1_i_phi_fu_288_p4 = i_1_i_reg_284;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_enable_reg_pp0_iter1) & (tmp_5_i_reg_1092 == 1'd0) & (ap_block_pp0_stage0_flag00000000 == 1'b0))) begin
        i_i_phi_fu_263_p4 = i_reg_1096;
    end else begin
        i_i_phi_fu_263_p4 = i_i_reg_259;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp1_stage0) & (1'b1 == ap_enable_reg_pp1_iter1) & (1'd0 == tmp_7_i_reg_1291) & (ap_block_pp1_stage0_flag00000000 == 1'b0))) begin
        ind_i_phi_fu_275_p4 = ind_i_be_reg_449;
    end else begin
        ind_i_phi_fu_275_p4 = ind_i_reg_271;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state40)) begin
        sum_V_address0 = i_2_cast35_i_fu_1027_p1;
    end else if (((1'b1 == ap_enable_reg_pp1_iter0) & (1'b1 == ap_CS_fsm_pp1_stage3) & (ap_block_pp1_stage3_flag00000000 == 1'b0))) begin
        sum_V_address0 = sum_V_addr_reg_1121;
    end else if (((1'b1 == ap_CS_fsm_pp1_stage0) & (1'b1 == ap_enable_reg_pp1_iter0) & (ap_block_pp1_stage0_flag00000000 == 1'b0))) begin
        sum_V_address0 = i_1_i_cast_fu_553_p1;
    end else begin
        sum_V_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_enable_reg_pp1_iter0)) begin
        if (((1'b1 == ap_CS_fsm_pp1_stage5) & (ap_block_pp1_stage5_flag00000000 == 1'b0))) begin
            sum_V_address1 = sum_V_addr_1_reg_1149;
        end else if (((1'b1 == ap_CS_fsm_pp1_stage0) & (ap_block_pp1_stage0_flag00000000 == 1'b0))) begin
            sum_V_address1 = i_5_cast_i_fu_575_p1;
        end else begin
            sum_V_address1 = 'bx;
        end
    end else begin
        sum_V_address1 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_enable_reg_pp1_iter0) & (1'b1 == ap_CS_fsm_pp1_stage3) & (ap_block_pp1_stage3_flag00011001 == 1'b0)) | (1'b1 == ap_CS_fsm_state40) | ((1'b1 == ap_CS_fsm_pp1_stage0) & (ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter0)))) begin
        sum_V_ce0 = 1'b1;
    end else begin
        sum_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_enable_reg_pp1_iter0) & (1'b1 == ap_CS_fsm_pp1_stage5) & (ap_block_pp1_stage5_flag00011001 == 1'b0)) | ((1'b1 == ap_CS_fsm_pp1_stage0) & (ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter0)))) begin
        sum_V_ce1 = 1'b1;
    end else begin
        sum_V_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state40)) begin
        sum_V_d0 = 42'd0;
    end else if (((1'b1 == ap_enable_reg_pp1_iter0) & (1'b1 == ap_CS_fsm_pp1_stage3) & (ap_block_pp1_stage3_flag00000000 == 1'b0))) begin
        sum_V_d0 = grp_fu_1062_p3;
    end else begin
        sum_V_d0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_enable_reg_pp1_iter0) & (1'b1 == ap_CS_fsm_pp1_stage3) & (ap_block_pp1_stage3_flag00011001 == 1'b0)) | ((1'b1 == ap_CS_fsm_state40) & (1'd0 == tmp_1_i_16_fu_1015_p2)))) begin
        sum_V_we0 = 1'b1;
    end else begin
        sum_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_enable_reg_pp1_iter0) & (1'b1 == ap_CS_fsm_pp1_stage5) & (ap_block_pp1_stage5_flag00011001 == 1'b0))) begin
        sum_V_we1 = 1'b1;
    end else begin
        sum_V_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp1_stage1) & (1'b1 == ap_enable_reg_pp1_iter1) & (1'd0 == tmp_7_i_reg_1291) & (ap_block_pp1_stage1_flag00000000 == 1'b0))) begin
        this_assign_0_i_phi_fu_335_p4 = this_assign_0_i_be_reg_400;
    end else begin
        this_assign_0_i_phi_fu_335_p4 = this_assign_0_i_reg_331;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((1'b1 == ap_CS_fsm_state1) & ~((1'b0 == ap_start) | (ap_done_reg == 1'b1)))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_pp0_stage0 : begin
            if (~((1'b1 == ap_enable_reg_pp0_iter0) & (ap_block_pp0_stage0_flag00011011 == 1'b0) & (tmp_5_i_fu_527_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else if (((1'b1 == ap_enable_reg_pp0_iter0) & (ap_block_pp0_stage0_flag00011011 == 1'b0) & (tmp_5_i_fu_527_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_state4 : begin
            ap_NS_fsm = ap_ST_fsm_pp1_stage0;
        end
        ap_ST_fsm_pp1_stage0 : begin
            if ((ap_block_pp1_stage0_flag00011011 == 1'b0)) begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            end
        end
        ap_ST_fsm_pp1_stage1 : begin
            if ((ap_block_pp1_stage1_flag00011011 == 1'b0)) begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage1;
            end
        end
        ap_ST_fsm_pp1_stage2 : begin
            if ((ap_block_pp1_stage2_flag00011011 == 1'b0)) begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage2;
            end
        end
        ap_ST_fsm_pp1_stage3 : begin
            if ((ap_block_pp1_stage3_flag00011011 == 1'b0)) begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage4;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage3;
            end
        end
        ap_ST_fsm_pp1_stage4 : begin
            if ((ap_block_pp1_stage4_flag00011011 == 1'b0)) begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage5;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage4;
            end
        end
        ap_ST_fsm_pp1_stage5 : begin
            if (((ap_block_pp1_stage5_flag00011011 == 1'b0) & ~((1'b1 == ap_CS_fsm_pp1_stage5) & (ap_block_pp1_stage5_flag00011011 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter1) & (ap_enable_reg_pp1_iter0 == 1'b0)))) begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage6;
            end else if (((1'b1 == ap_CS_fsm_pp1_stage5) & (ap_block_pp1_stage5_flag00011011 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter1) & (ap_enable_reg_pp1_iter0 == 1'b0))) begin
                ap_NS_fsm = ap_ST_fsm_state39;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage5;
            end
        end
        ap_ST_fsm_pp1_stage6 : begin
            if ((ap_block_pp1_stage6_flag00011011 == 1'b0)) begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage7;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage6;
            end
        end
        ap_ST_fsm_pp1_stage7 : begin
            if ((ap_block_pp1_stage7_flag00011011 == 1'b0)) begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage8;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage7;
            end
        end
        ap_ST_fsm_pp1_stage8 : begin
            if ((ap_block_pp1_stage8_flag00011011 == 1'b0)) begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage9;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage8;
            end
        end
        ap_ST_fsm_pp1_stage9 : begin
            if ((ap_block_pp1_stage9_flag00011011 == 1'b0)) begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage10;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage9;
            end
        end
        ap_ST_fsm_pp1_stage10 : begin
            if ((ap_block_pp1_stage10_flag00011011 == 1'b0)) begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage11;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage10;
            end
        end
        ap_ST_fsm_pp1_stage11 : begin
            if ((ap_block_pp1_stage11_flag00011011 == 1'b0)) begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage12;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage11;
            end
        end
        ap_ST_fsm_pp1_stage12 : begin
            if ((ap_block_pp1_stage12_flag00011011 == 1'b0)) begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage13;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage12;
            end
        end
        ap_ST_fsm_pp1_stage13 : begin
            if ((ap_block_pp1_stage13_flag00011011 == 1'b0)) begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage14;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage13;
            end
        end
        ap_ST_fsm_pp1_stage14 : begin
            if ((ap_block_pp1_stage14_flag00011011 == 1'b0)) begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage15;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage14;
            end
        end
        ap_ST_fsm_pp1_stage15 : begin
            if ((ap_block_pp1_stage15_flag00011011 == 1'b0)) begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage16;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage15;
            end
        end
        ap_ST_fsm_pp1_stage16 : begin
            if ((ap_block_pp1_stage16_flag00011011 == 1'b0)) begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage17;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage16;
            end
        end
        ap_ST_fsm_pp1_stage17 : begin
            if ((ap_block_pp1_stage17_flag00011011 == 1'b0)) begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage18;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage17;
            end
        end
        ap_ST_fsm_pp1_stage18 : begin
            if ((ap_block_pp1_stage18_flag00011011 == 1'b0)) begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage19;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage18;
            end
        end
        ap_ST_fsm_pp1_stage19 : begin
            if ((ap_block_pp1_stage19_flag00011011 == 1'b0)) begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage20;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage19;
            end
        end
        ap_ST_fsm_pp1_stage20 : begin
            if ((ap_block_pp1_stage20_flag00011011 == 1'b0)) begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage21;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage20;
            end
        end
        ap_ST_fsm_pp1_stage21 : begin
            if ((ap_block_pp1_stage21_flag00011011 == 1'b0)) begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage22;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage21;
            end
        end
        ap_ST_fsm_pp1_stage22 : begin
            if ((ap_block_pp1_stage22_flag00011011 == 1'b0)) begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage23;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage22;
            end
        end
        ap_ST_fsm_pp1_stage23 : begin
            if ((ap_block_pp1_stage23_flag00011011 == 1'b0)) begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage24;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage23;
            end
        end
        ap_ST_fsm_pp1_stage24 : begin
            if ((ap_block_pp1_stage24_flag00011011 == 1'b0)) begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage25;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage24;
            end
        end
        ap_ST_fsm_pp1_stage25 : begin
            if ((ap_block_pp1_stage25_flag00011011 == 1'b0)) begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage26;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage25;
            end
        end
        ap_ST_fsm_pp1_stage26 : begin
            if ((ap_block_pp1_stage26_flag00011011 == 1'b0)) begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage27;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage26;
            end
        end
        ap_ST_fsm_pp1_stage27 : begin
            if ((ap_block_pp1_stage27_flag00011011 == 1'b0)) begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage27;
            end
        end
        ap_ST_fsm_state39 : begin
            if (((1'b1 == ap_CS_fsm_state39) & (1'd1 == tmp_9_i_fu_1009_p2))) begin
                ap_NS_fsm = ap_ST_fsm_state40;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state44;
            end
        end
        ap_ST_fsm_state40 : begin
            ap_NS_fsm = ap_ST_fsm_state40;
        end
        ap_ST_fsm_state41 : begin
            ap_NS_fsm = ap_ST_fsm_state42;
        end
        ap_ST_fsm_state42 : begin
            ap_NS_fsm = ap_ST_fsm_state42;
        end
        ap_ST_fsm_state43 : begin
            ap_NS_fsm = ap_ST_fsm_state44;
        end
        ap_ST_fsm_state44 : begin
            ap_NS_fsm = ap_ST_fsm_state1;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign OP1_V_1_1_i_fu_869_p1 = $signed(p_Val2_6_1_i_reg_1295);

assign OP1_V_1_i_fu_739_p1 = $signed(p_Val2_6_i_reg_1210);

assign OP1_V_i_14_fu_689_p1 = $signed(p_Val2_2_i_reg_1154);

assign OP1_V_i_fu_846_p1 = $signed(p_Val2_2_1_i_reg_1251);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_pp1_stage0 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_pp1_stage1 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_pp1_stage16 = ap_CS_fsm[32'd19];

assign ap_CS_fsm_pp1_stage17 = ap_CS_fsm[32'd20];

assign ap_CS_fsm_pp1_stage18 = ap_CS_fsm[32'd21];

assign ap_CS_fsm_pp1_stage19 = ap_CS_fsm[32'd22];

assign ap_CS_fsm_pp1_stage2 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_pp1_stage20 = ap_CS_fsm[32'd23];

assign ap_CS_fsm_pp1_stage21 = ap_CS_fsm[32'd24];

assign ap_CS_fsm_pp1_stage27 = ap_CS_fsm[32'd30];

assign ap_CS_fsm_pp1_stage3 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_pp1_stage4 = ap_CS_fsm[32'd7];

assign ap_CS_fsm_pp1_stage5 = ap_CS_fsm[32'd8];

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state39 = ap_CS_fsm[32'd31];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state40 = ap_CS_fsm[32'd32];

assign ap_CS_fsm_state41 = ap_CS_fsm[32'd33];

assign ap_CS_fsm_state42 = ap_CS_fsm[32'd34];

assign ap_CS_fsm_state43 = ap_CS_fsm[32'd35];

assign ap_CS_fsm_state44 = ap_CS_fsm[32'd36];

assign ap_block_pp0_stage0_flag00000000 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_flag00011001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_flag00011011 = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage0_flag00000000 = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage0_flag00011001 = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage0_flag00011011 = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage10_flag00000000 = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage10_flag00011001 = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage10_flag00011011 = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage11_flag00000000 = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage11_flag00011001 = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage11_flag00011011 = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage12_flag00000000 = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage12_flag00011001 = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage12_flag00011011 = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage13_flag00000000 = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage13_flag00011001 = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage13_flag00011011 = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage14_flag00000000 = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage14_flag00011001 = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage14_flag00011011 = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage15_flag00000000 = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage15_flag00011001 = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage15_flag00011011 = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage16_flag00000000 = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage16_flag00011001 = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage16_flag00011011 = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage17_flag00000000 = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage17_flag00011001 = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage17_flag00011011 = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage18_flag00000000 = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage18_flag00011001 = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage18_flag00011011 = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage19_flag00000000 = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage19_flag00011001 = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage19_flag00011011 = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage1_flag00000000 = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage1_flag00011001 = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage1_flag00011011 = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage20_flag00000000 = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage20_flag00011001 = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage20_flag00011011 = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage21_flag00000000 = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage21_flag00011001 = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage21_flag00011011 = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage22_flag00000000 = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage22_flag00011001 = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage22_flag00011011 = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage23_flag00000000 = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage23_flag00011001 = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage23_flag00011011 = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage24_flag00000000 = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage24_flag00011001 = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage24_flag00011011 = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage25_flag00000000 = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage25_flag00011001 = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage25_flag00011011 = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage26_flag00000000 = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage26_flag00011001 = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage26_flag00011011 = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage27_flag00000000 = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage27_flag00011001 = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage27_flag00011011 = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage2_flag00000000 = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage2_flag00011001 = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage2_flag00011011 = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage3_flag00000000 = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage3_flag00011001 = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage3_flag00011011 = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage4_flag00000000 = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage4_flag00011001 = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage4_flag00011011 = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage5_flag00000000 = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage5_flag00011001 = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage5_flag00011011 = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage6_flag00000000 = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage6_flag00011001 = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage6_flag00011011 = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage7_flag00000000 = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage7_flag00011001 = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage7_flag00011011 = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage8_flag00000000 = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage8_flag00011001 = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage8_flag00011011 = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage9_flag00000000 = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage9_flag00011001 = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage9_flag00011011 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state1 = ((1'b0 == ap_start) | (ap_done_reg == 1'b1));
end

assign ap_block_state10_pp1_stage5_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state11_pp1_stage6_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state12_pp1_stage7_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state13_pp1_stage8_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state14_pp1_stage9_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state15_pp1_stage10_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state16_pp1_stage11_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state17_pp1_stage12_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state18_pp1_stage13_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state19_pp1_stage14_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state20_pp1_stage15_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state21_pp1_stage16_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state22_pp1_stage17_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state23_pp1_stage18_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state24_pp1_stage19_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state25_pp1_stage20_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state26_pp1_stage21_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state27_pp1_stage22_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state28_pp1_stage23_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state29_pp1_stage24_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state2_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state30_pp1_stage25_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state31_pp1_stage26_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state32_pp1_stage27_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state33_pp1_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state34_pp1_stage1_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state35_pp1_stage2_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state36_pp1_stage3_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state37_pp1_stage4_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state38_pp1_stage5_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state3_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state5_pp1_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state6_pp1_stage1_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state7_pp1_stage2_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state8_pp1_stage3_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state9_pp1_stage4_iter0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_condition_232 = ((1'b1 == ap_CS_fsm_pp1_stage1) & (ap_block_pp1_stage1_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter0));
end

always @ (*) begin
    ap_condition_291 = ((1'b1 == ap_enable_reg_pp1_iter0) & (1'b1 == ap_CS_fsm_pp1_stage3) & (ap_block_pp1_stage3_flag00011001 == 1'b0));
end

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_enable_pp1 = (ap_idle_pp1 ^ 1'b1);

assign cont32_1_i_fu_733_p2 = (ap_phi_precharge_reg_pp1_iter0_cont32_2_i_reg_354 + 32'd1);

assign cont32_i_fu_592_p2 = (32'd1 + cont_i_phi_fu_312_p4);

assign contNuevoSuma_1_i_fu_612_p3 = ((reset_assign_reg_1126[0:0] === 1'b1) ? 32'd0 : contNuevoSuma_i_phi_fu_324_p4);

assign contNuevoSuma_3_1_i_fu_834_p2 = (contNuevoSuma_2_i_reg_377 + 32'd1);

assign contNuevoSuma_3_i_fu_679_p2 = (32'd1 + contNuevoSuma_1_i_fu_612_p3);

assign contNuevo_0_op_1_i_fu_786_p2 = (contNuevo_1_i_reg_365 + 32'd1);

assign contNuevo_0_op_i_fu_625_p2 = (contNuevo_i_reg_296 + 32'd1);

assign grp_fu_1055_p0 = OP1_V_i_14_fu_689_p1;

assign grp_fu_1055_p1 = OP1_V_i_14_fu_689_p1;

assign grp_fu_1062_p0 = OP1_V_1_i_fu_739_p1;

assign grp_fu_1062_p1 = OP1_V_1_i_fu_739_p1;

assign grp_fu_1071_p0 = OP1_V_i_fu_846_p1;

assign grp_fu_1071_p1 = OP1_V_i_fu_846_p1;

assign grp_fu_1078_p0 = OP1_V_1_1_i_fu_869_p1;

assign grp_fu_1078_p1 = OP1_V_1_1_i_fu_869_p1;

assign grp_fu_517_p4 = {{currentGroupX_OUT_V_q0[31:1]}};

assign grp_meanFilterInTime_fu_494_ap_start = ap_reg_grp_meanFilterInTime_fu_494_ap_start;

assign i_1_cast_i_cast_fu_685_p1 = i_1_i_reg_284;

assign i_1_i119_cast_fu_549_p1 = i_1_i_phi_fu_288_p4;

assign i_1_i_cast_fu_553_p1 = i_1_i_phi_fu_288_p4;

assign i_2_cast35_i_fu_1027_p1 = i_2_i_reg_461;

assign i_2_fu_1021_p2 = (i_2_i_reg_461 + 11'd1);

assign i_3_cast34_i_fu_1044_p1 = i_3_i_reg_472;

assign i_3_fu_1038_p2 = (i_3_i_reg_472 + 12'd1);

assign i_4_cast_i_fu_539_p1 = i_fu_533_p2;

assign i_5_1_i_cast_fu_775_p1 = i_5_1_i_fu_766_p2;

assign i_5_1_i_fu_766_p2 = (11'd2 + i_1_i119_cast_reg_1106);

assign i_5_cast_i_fu_575_p1 = i_5_i_fu_569_p2;

assign i_5_i_fu_569_p2 = (i_1_i_phi_fu_288_p4 | 10'd1);

assign i_cast36_i_fu_544_p1 = i_i_reg_259;

assign i_fu_533_p2 = (i_i_phi_fu_263_p4 + 12'd1);

assign ind16_1_i_cast_fu_805_p2 = (tmp_9_reg_1230 + 3'd1);

assign ind16_i_cast_fu_648_p2 = (3'd1 + tmp_8_fu_644_p1);

assign indPar_i_15_fu_828_p2 = (indPar_1_i_reg_343 + 32'd1);

assign indPar_i_fu_673_p2 = (32'd1 + this_assign_0_i_phi_fu_335_p4);

assign minimoX_0_1_fu_973_p2 = (tmp2_fu_968_p2 & tmp_15_fu_955_p3);

assign minimoX_0_fu_923_p2 = (tmp9_fu_918_p2 & tmp_fu_912_p2);

assign not_reset_i_fu_902_p2 = (reset_assign_reg_1126 ^ 1'd1);

assign p_1_i_fu_810_p3 = ((tmp_21_1_i_fu_800_p2[0:0] === 1'b1) ? 32'd0 : cont32_1_i_reg_1245);

always @ (*) begin
    p_Val2_17_1_i_fu_984_p4 = currentGroupX_OUT_V_5_reg_1331;
    p_Val2_17_1_i_fu_984_p4[ap_reg_pp1_iter1_cont32_2_i_reg_354] = |(minimoX_0_1_fu_973_p2);
end

always @ (*) begin
    p_Val2_17_i_fu_934_p4 = currentGroupX_OUT_V_1_reg_1180;
    p_Val2_17_i_fu_934_p4[cont_i_reg_308] = |(minimoX_0_fu_923_p2);
end

assign p_Val2_1_fu_881_p3 = ((reset_assign_reg_1126[0:0] === 1'b1) ? 32'd0 : vector_V_0);

assign p_Val2_2_1_i_fu_760_p2 = (tmp_10_fu_752_p1 - tmp_11_fu_756_p1);

assign p_Val2_2_i_fu_606_p2 = (tmp_3_fu_598_p1 - tmp_4_fu_602_p1);

assign p_Val2_6_1_i_fu_857_p2 = (tmp_13_fu_849_p1 - tmp_14_fu_853_p1);

assign p_Val2_6_i_fu_700_p2 = (tmp_5_fu_692_p1 - tmp_6_fu_696_p1);

assign p_Val2_i_i3_fu_949_p2 = (grp_meanFilterInTime_fu_494_ap_return - vector_V_0);

assign p_Val2_i_i_fu_888_p2 = (grp_meanFilterInTime_fu_494_ap_return - p_Val2_1_fu_881_p3);

assign p_i_fu_654_p3 = ((tmp_21_i_fu_639_p2[0:0] === 1'b1) ? 32'd0 : cont32_i_reg_1143);

assign p_ind_1_i_cast_fu_824_p1 = p_ind_1_i_fu_817_p3;

assign p_ind_1_i_fu_817_p3 = ((tmp_21_1_i_fu_800_p2[0:0] === 1'b1) ? ind16_1_i_cast_fu_805_p2 : tmp_9_reg_1230);

assign p_ind_i_cast_fu_669_p1 = p_ind_i_fu_661_p3;

assign p_ind_i_fu_661_p3 = ((tmp_21_i_fu_639_p2[0:0] === 1'b1) ? ind16_i_cast_fu_648_p2 : tmp_8_fu_644_p1);

assign phitmp_1_i_fu_792_p3 = ((tmp_22_1_i_fu_780_p2[0:0] === 1'b1) ? 32'd1 : contNuevo_0_op_1_i_fu_786_p2);

assign phitmp_i_fu_631_p3 = ((tmp_22_i_fu_619_p2[0:0] === 1'b1) ? 32'd1 : contNuevo_0_op_i_fu_625_p2);

assign reset_assign_fu_580_p2 = ((i_1_i_phi_fu_288_p4 == 10'd0) ? 1'b1 : 1'b0);

assign tmp2_fu_968_p2 = (tmp_3_i_i5_fu_963_p2 & tmp_4_i_i7_reg_1305);

assign tmp9_fu_918_p2 = (tmp_3_i_i_fu_907_p2 & tmp_4_i_i_reg_1220);

assign tmp_10_fu_752_p1 = aux_array_V_1_q1[15:0];

assign tmp_11_fu_756_p1 = aux_array_V_1_q0[15:0];

assign tmp_12_fu_771_p1 = i_5_1_i_fu_766_p2[9:0];

assign tmp_13_fu_849_p1 = aux_array_V_1_q1[15:0];

assign tmp_14_fu_853_p1 = aux_array_V_1_q0[15:0];

assign tmp_15_fu_955_p3 = derivada_V_0[32'd31];

assign tmp_19_1_i_fu_727_p2 = ((ap_phi_precharge_reg_pp1_iter0_contNuevo_1_i_reg_365 == 32'd0) ? 1'b1 : 1'b0);

assign tmp_19_i_fu_586_p2 = ((contNuevo_i_phi_fu_300_p4 == 32'd0) ? 1'b1 : 1'b0);

assign tmp_1_cast_i_fu_722_p1 = tmp_1_i_fu_716_p2;

assign tmp_1_fu_944_p1 = grp_fu_517_p4;

assign tmp_1_i_16_fu_1015_p2 = ((i_2_i_reg_461 == 11'd1024) ? 1'b1 : 1'b0);

assign tmp_1_i_fu_716_p2 = (12'd1026 + i_1_cast_i_cast_fu_685_p1);

assign tmp_21_1_i_fu_800_p2 = ((cont32_1_i_reg_1245 == 32'd32) ? 1'b1 : 1'b0);

assign tmp_21_i_fu_639_p2 = ((cont32_i_reg_1143 == 32'd32) ? 1'b1 : 1'b0);

assign tmp_22_1_i_fu_780_p2 = ((contNuevo_1_i_reg_365 == 32'd7) ? 1'b1 : 1'b0);

assign tmp_22_i_fu_619_p2 = ((contNuevo_i_reg_296 == 32'd7) ? 1'b1 : 1'b0);

assign tmp_2_fu_994_p1 = grp_fu_517_p4;

assign tmp_2_i_fu_1032_p2 = ((i_3_i_reg_472 == 12'd2049) ? 1'b1 : 1'b0);

assign tmp_3_fu_598_p1 = aux_array_V_1_q1[15:0];

assign tmp_3_i_i5_fu_963_p2 = (($signed(p_Val2_i_i3_reg_1336) > $signed(32'd0)) ? 1'b1 : 1'b0);

assign tmp_3_i_i_fu_907_p2 = (($signed(p_Val2_i_i_reg_1325) > $signed(32'd0)) ? 1'b1 : 1'b0);

assign tmp_4_fu_602_p1 = aux_array_V_1_q0[15:0];

assign tmp_4_i_i7_fu_863_p2 = (($signed(indPar_1_i_reg_343) > $signed(32'd9)) ? 1'b1 : 1'b0);

assign tmp_4_i_i_fu_706_p2 = (($signed(this_assign_0_i_reg_331) > $signed(32'd9)) ? 1'b1 : 1'b0);

assign tmp_5_fu_692_p1 = aux_array_V_1_q1[15:0];

assign tmp_5_i_fu_527_p2 = ((i_i_phi_fu_263_p4 == 12'd2048) ? 1'b1 : 1'b0);

assign tmp_6_fu_696_p1 = aux_array_V_1_q0[15:0];

assign tmp_7_fu_894_p3 = derivada_V_0[32'd31];

assign tmp_7_i_fu_840_p2 = ((i_5_1_i_fu_766_p2 == 11'd1024) ? 1'b1 : 1'b0);

assign tmp_8_fu_644_p1 = ind_i_reg_271[2:0];

assign tmp_8_i_fu_1003_p2 = (contador + 32'd1);

assign tmp_9_fu_712_p1 = ap_phi_precharge_reg_pp1_iter0_ind16_2_i_reg_388[2:0];

assign tmp_9_i_fu_1009_p2 = ((tmp_8_i_fu_1003_p2 == 32'd2049) ? 1'b1 : 1'b0);

assign tmp_cast_i_fu_564_p1 = tmp_i_13_fu_558_p2;

assign tmp_fu_912_p2 = (tmp_7_fu_894_p3 & not_reset_i_fu_902_p2);

assign tmp_i_13_fu_558_p2 = ($signed(11'd1025) + $signed(i_1_i119_cast_fu_549_p1));

always @ (posedge ap_clk) begin
    i_1_i119_cast_reg_1106[10] <= 1'b0;
    i_5_cast_i_reg_1116[0] <= 1'b1;
    i_5_cast_i_reg_1116[31:10] <= 22'b0000000000000000000000;
    sum_V_addr_1_reg_1149[0] <= 1'b1;
end

endmodule //sweep_algorithm_DECM
