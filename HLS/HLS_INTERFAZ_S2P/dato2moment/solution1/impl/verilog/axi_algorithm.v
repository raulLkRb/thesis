// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2017.1
// Copyright (C) 1986-2017 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="axi_algorithm,hls_ip_2017_1,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xc7z020clg484-1,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=dataflow,HLS_SYN_CLOCK=4.140000,HLS_SYN_LAT=11,HLS_SYN_TPT=7,HLS_SYN_MEM=0,HLS_SYN_DSP=0,HLS_SYN_FF=639,HLS_SYN_LUT=852}" *)

module axi_algorithm (
        ap_clk,
        ap_rst_n,
        input_AX_ALG_TDATA,
        input_AX_ALG_TKEEP,
        input_AX_ALG_TSTRB,
        input_AX_ALG_TUSER,
        input_AX_ALG_TLAST,
        input_AX_ALG_TID,
        input_AX_ALG_TDEST,
        output_AX_ALGdedo0_TDATA,
        output_AX_ALGdedo0_TKEEP,
        output_AX_ALGdedo0_TSTRB,
        output_AX_ALGdedo0_TUSER,
        output_AX_ALGdedo0_TLAST,
        output_AX_ALGdedo0_TID,
        output_AX_ALGdedo0_TDEST,
        output_AX_ALGpalma0_TDATA,
        output_AX_ALGpalma0_TKEEP,
        output_AX_ALGpalma0_TSTRB,
        output_AX_ALGpalma0_TUSER,
        output_AX_ALGpalma0_TLAST,
        output_AX_ALGpalma0_TID,
        output_AX_ALGpalma0_TDEST,
        output_AX_ALGdedo1_TDATA,
        output_AX_ALGdedo1_TKEEP,
        output_AX_ALGdedo1_TSTRB,
        output_AX_ALGdedo1_TUSER,
        output_AX_ALGdedo1_TLAST,
        output_AX_ALGdedo1_TID,
        output_AX_ALGdedo1_TDEST,
        output_AX_ALGpalma1_TDATA,
        output_AX_ALGpalma1_TKEEP,
        output_AX_ALGpalma1_TSTRB,
        output_AX_ALGpalma1_TUSER,
        output_AX_ALGpalma1_TLAST,
        output_AX_ALGpalma1_TID,
        output_AX_ALGpalma1_TDEST,
        input_AX_ALG_TVALID,
        input_AX_ALG_TREADY,
        output_AX_ALGdedo0_TVALID,
        output_AX_ALGdedo0_TREADY,
        output_AX_ALGpalma0_TVALID,
        output_AX_ALGpalma0_TREADY,
        output_AX_ALGdedo1_TVALID,
        output_AX_ALGdedo1_TREADY,
        output_AX_ALGpalma1_TVALID,
        output_AX_ALGpalma1_TREADY
);


input   ap_clk;
input   ap_rst_n;
input  [31:0] input_AX_ALG_TDATA;
input  [3:0] input_AX_ALG_TKEEP;
input  [3:0] input_AX_ALG_TSTRB;
input  [3:0] input_AX_ALG_TUSER;
input  [0:0] input_AX_ALG_TLAST;
input  [4:0] input_AX_ALG_TID;
input  [4:0] input_AX_ALG_TDEST;
output  [31:0] output_AX_ALGdedo0_TDATA;
output  [3:0] output_AX_ALGdedo0_TKEEP;
output  [3:0] output_AX_ALGdedo0_TSTRB;
output  [3:0] output_AX_ALGdedo0_TUSER;
output  [0:0] output_AX_ALGdedo0_TLAST;
output  [4:0] output_AX_ALGdedo0_TID;
output  [4:0] output_AX_ALGdedo0_TDEST;
output  [31:0] output_AX_ALGpalma0_TDATA;
output  [3:0] output_AX_ALGpalma0_TKEEP;
output  [3:0] output_AX_ALGpalma0_TSTRB;
output  [3:0] output_AX_ALGpalma0_TUSER;
output  [0:0] output_AX_ALGpalma0_TLAST;
output  [4:0] output_AX_ALGpalma0_TID;
output  [4:0] output_AX_ALGpalma0_TDEST;
output  [31:0] output_AX_ALGdedo1_TDATA;
output  [3:0] output_AX_ALGdedo1_TKEEP;
output  [3:0] output_AX_ALGdedo1_TSTRB;
output  [3:0] output_AX_ALGdedo1_TUSER;
output  [0:0] output_AX_ALGdedo1_TLAST;
output  [4:0] output_AX_ALGdedo1_TID;
output  [4:0] output_AX_ALGdedo1_TDEST;
output  [31:0] output_AX_ALGpalma1_TDATA;
output  [3:0] output_AX_ALGpalma1_TKEEP;
output  [3:0] output_AX_ALGpalma1_TSTRB;
output  [3:0] output_AX_ALGpalma1_TUSER;
output  [0:0] output_AX_ALGpalma1_TLAST;
output  [4:0] output_AX_ALGpalma1_TID;
output  [4:0] output_AX_ALGpalma1_TDEST;
input   input_AX_ALG_TVALID;
output   input_AX_ALG_TREADY;
output   output_AX_ALGdedo0_TVALID;
input   output_AX_ALGdedo0_TREADY;
output   output_AX_ALGpalma0_TVALID;
input   output_AX_ALGpalma0_TREADY;
output   output_AX_ALGdedo1_TVALID;
input   output_AX_ALGdedo1_TREADY;
output   output_AX_ALGpalma1_TVALID;
input   output_AX_ALGpalma1_TREADY;

reg    ap_rst_n_inv;
wire   [31:0] dato_i_q0;
wire   [31:0] dato_i_q1;
wire   [31:0] dato_t_q0;
wire   [31:0] dato_t_q1;
wire    read_data_U0_ap_start;
wire    read_data_U0_ap_done;
wire    read_data_U0_ap_continue;
wire    read_data_U0_ap_idle;
wire    read_data_U0_ap_ready;
wire    read_data_U0_input_AX_ALG_TREADY;
wire   [1:0] read_data_U0_buf_V_address0;
wire    read_data_U0_buf_V_ce0;
wire    read_data_U0_buf_V_we0;
wire   [31:0] read_data_U0_buf_V_d0;
wire    ap_channel_done_dato;
wire    read_data_U0_buf_V_full_n;
wire    Block_arrayctor_loop_U0_ap_start;
wire    Block_arrayctor_loop_U0_ap_done;
wire    Block_arrayctor_loop_U0_ap_continue;
wire    Block_arrayctor_loop_U0_ap_idle;
wire    Block_arrayctor_loop_U0_ap_ready;
wire   [1:0] Block_arrayctor_loop_U0_dato_address0;
wire    Block_arrayctor_loop_U0_dato_ce0;
wire   [1:0] Block_arrayctor_loop_U0_dato_address1;
wire    Block_arrayctor_loop_U0_dato_ce1;
wire   [31:0] Block_arrayctor_loop_U0_ap_return_0;
wire   [31:0] Block_arrayctor_loop_U0_ap_return_1;
wire   [31:0] Block_arrayctor_loop_U0_ap_return_2;
wire   [31:0] Block_arrayctor_loop_U0_ap_return_3;
wire    ap_channel_done_palma1_0_V;
wire    palma1_0_V_full_n;
reg    ap_sync_reg_channel_write_palma1_0_V;
wire    ap_sync_channel_write_palma1_0_V;
wire    ap_channel_done_dedo1_0_V;
wire    dedo1_0_V_full_n;
reg    ap_sync_reg_channel_write_dedo1_0_V;
wire    ap_sync_channel_write_dedo1_0_V;
wire    ap_channel_done_palma0_0_V;
wire    palma0_0_V_full_n;
reg    ap_sync_reg_channel_write_palma0_0_V;
wire    ap_sync_channel_write_palma0_0_V;
wire    ap_channel_done_dedo0_0_V;
wire    dedo0_0_V_full_n;
reg    ap_sync_reg_channel_write_dedo0_0_V;
wire    ap_sync_channel_write_dedo0_0_V;
wire    write_data21_U0_ap_start;
wire    write_data21_U0_ap_done;
wire    write_data21_U0_ap_continue;
wire    write_data21_U0_ap_idle;
wire    write_data21_U0_ap_ready;
wire   [31:0] write_data21_U0_output_AX_ALGdedo0_TDATA;
wire    write_data21_U0_output_AX_ALGdedo0_TVALID;
wire   [3:0] write_data21_U0_output_AX_ALGdedo0_TKEEP;
wire   [3:0] write_data21_U0_output_AX_ALGdedo0_TSTRB;
wire   [3:0] write_data21_U0_output_AX_ALGdedo0_TUSER;
wire   [0:0] write_data21_U0_output_AX_ALGdedo0_TLAST;
wire   [4:0] write_data21_U0_output_AX_ALGdedo0_TID;
wire   [4:0] write_data21_U0_output_AX_ALGdedo0_TDEST;
wire    ap_sync_continue;
wire    write_data22_U0_ap_start;
wire    write_data22_U0_ap_done;
wire    write_data22_U0_ap_continue;
wire    write_data22_U0_ap_idle;
wire    write_data22_U0_ap_ready;
wire   [31:0] write_data22_U0_output_AX_ALGpalma0_TDATA;
wire    write_data22_U0_output_AX_ALGpalma0_TVALID;
wire   [3:0] write_data22_U0_output_AX_ALGpalma0_TKEEP;
wire   [3:0] write_data22_U0_output_AX_ALGpalma0_TSTRB;
wire   [3:0] write_data22_U0_output_AX_ALGpalma0_TUSER;
wire   [0:0] write_data22_U0_output_AX_ALGpalma0_TLAST;
wire   [4:0] write_data22_U0_output_AX_ALGpalma0_TID;
wire   [4:0] write_data22_U0_output_AX_ALGpalma0_TDEST;
wire    write_data23_U0_ap_start;
wire    write_data23_U0_ap_done;
wire    write_data23_U0_ap_continue;
wire    write_data23_U0_ap_idle;
wire    write_data23_U0_ap_ready;
wire   [31:0] write_data23_U0_output_AX_ALGdedo1_TDATA;
wire    write_data23_U0_output_AX_ALGdedo1_TVALID;
wire   [3:0] write_data23_U0_output_AX_ALGdedo1_TKEEP;
wire   [3:0] write_data23_U0_output_AX_ALGdedo1_TSTRB;
wire   [3:0] write_data23_U0_output_AX_ALGdedo1_TUSER;
wire   [0:0] write_data23_U0_output_AX_ALGdedo1_TLAST;
wire   [4:0] write_data23_U0_output_AX_ALGdedo1_TID;
wire   [4:0] write_data23_U0_output_AX_ALGdedo1_TDEST;
wire    write_data_U0_ap_start;
wire    write_data_U0_ap_done;
wire    write_data_U0_ap_continue;
wire    write_data_U0_ap_idle;
wire    write_data_U0_ap_ready;
wire   [31:0] write_data_U0_output_AX_ALGpalma1_TDATA;
wire    write_data_U0_output_AX_ALGpalma1_TVALID;
wire   [3:0] write_data_U0_output_AX_ALGpalma1_TKEEP;
wire   [3:0] write_data_U0_output_AX_ALGpalma1_TSTRB;
wire   [3:0] write_data_U0_output_AX_ALGpalma1_TUSER;
wire   [0:0] write_data_U0_output_AX_ALGpalma1_TLAST;
wire   [4:0] write_data_U0_output_AX_ALGpalma1_TID;
wire   [4:0] write_data_U0_output_AX_ALGpalma1_TDEST;
wire    dato_i_full_n;
wire    dato_t_empty_n;
wire   [31:0] dato_t_d1;
wire    dato_t_we1;
wire   [31:0] dedo0_0_V_dout;
wire    dedo0_0_V_empty_n;
wire   [31:0] palma0_0_V_dout;
wire    palma0_0_V_empty_n;
wire   [31:0] dedo1_0_V_dout;
wire    dedo1_0_V_empty_n;
wire   [31:0] palma1_0_V_dout;
wire    palma1_0_V_empty_n;
wire    read_data_U0_start_full_n;
wire    read_data_U0_start_write;
wire    Block_arrayctor_loop_U0_start_full_n;
wire    Block_arrayctor_loop_U0_start_write;
wire    write_data21_U0_start_full_n;
wire    write_data21_U0_start_write;
wire    write_data22_U0_start_full_n;
wire    write_data22_U0_start_write;
wire    write_data23_U0_start_full_n;
wire    write_data23_U0_start_write;
wire    write_data_U0_start_full_n;
wire    write_data_U0_start_write;

// power-on initialization
initial begin
#0 ap_sync_reg_channel_write_palma1_0_V = 1'b0;
#0 ap_sync_reg_channel_write_dedo1_0_V = 1'b0;
#0 ap_sync_reg_channel_write_palma0_0_V = 1'b0;
#0 ap_sync_reg_channel_write_dedo0_0_V = 1'b0;
end

axi_algorithm_dato #(
    .DataWidth( 32 ),
    .AddressRange( 4 ),
    .AddressWidth( 2 ))
dato_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .i_address0(read_data_U0_buf_V_address0),
    .i_ce0(read_data_U0_buf_V_ce0),
    .i_we0(read_data_U0_buf_V_we0),
    .i_d0(read_data_U0_buf_V_d0),
    .i_q0(dato_i_q0),
    .i_address1(2'd0),
    .i_ce1(1'b0),
    .i_q1(dato_i_q1),
    .t_address0(Block_arrayctor_loop_U0_dato_address0),
    .t_ce0(Block_arrayctor_loop_U0_dato_ce0),
    .t_we0(1'b0),
    .t_d0(32'd0),
    .t_q0(dato_t_q0),
    .t_address1(Block_arrayctor_loop_U0_dato_address1),
    .t_ce1(Block_arrayctor_loop_U0_dato_ce1),
    .t_q1(dato_t_q1),
    .i_ce(1'b1),
    .t_ce(1'b1),
    .i_full_n(dato_i_full_n),
    .i_write(read_data_U0_ap_done),
    .t_empty_n(dato_t_empty_n),
    .t_read(Block_arrayctor_loop_U0_ap_ready)
);

read_data read_data_U0(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(read_data_U0_ap_start),
    .ap_done(read_data_U0_ap_done),
    .ap_continue(read_data_U0_ap_continue),
    .ap_idle(read_data_U0_ap_idle),
    .ap_ready(read_data_U0_ap_ready),
    .input_AX_ALG_TDATA(input_AX_ALG_TDATA),
    .input_AX_ALG_TVALID(input_AX_ALG_TVALID),
    .input_AX_ALG_TREADY(read_data_U0_input_AX_ALG_TREADY),
    .input_AX_ALG_TKEEP(input_AX_ALG_TKEEP),
    .input_AX_ALG_TSTRB(input_AX_ALG_TSTRB),
    .input_AX_ALG_TUSER(input_AX_ALG_TUSER),
    .input_AX_ALG_TLAST(input_AX_ALG_TLAST),
    .input_AX_ALG_TID(input_AX_ALG_TID),
    .input_AX_ALG_TDEST(input_AX_ALG_TDEST),
    .buf_V_address0(read_data_U0_buf_V_address0),
    .buf_V_ce0(read_data_U0_buf_V_ce0),
    .buf_V_we0(read_data_U0_buf_V_we0),
    .buf_V_d0(read_data_U0_buf_V_d0)
);

Block_arrayctor_loop Block_arrayctor_loop_U0(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(Block_arrayctor_loop_U0_ap_start),
    .ap_done(Block_arrayctor_loop_U0_ap_done),
    .ap_continue(Block_arrayctor_loop_U0_ap_continue),
    .ap_idle(Block_arrayctor_loop_U0_ap_idle),
    .ap_ready(Block_arrayctor_loop_U0_ap_ready),
    .dato_address0(Block_arrayctor_loop_U0_dato_address0),
    .dato_ce0(Block_arrayctor_loop_U0_dato_ce0),
    .dato_q0(dato_t_q0),
    .dato_address1(Block_arrayctor_loop_U0_dato_address1),
    .dato_ce1(Block_arrayctor_loop_U0_dato_ce1),
    .dato_q1(dato_t_q1),
    .ap_return_0(Block_arrayctor_loop_U0_ap_return_0),
    .ap_return_1(Block_arrayctor_loop_U0_ap_return_1),
    .ap_return_2(Block_arrayctor_loop_U0_ap_return_2),
    .ap_return_3(Block_arrayctor_loop_U0_ap_return_3)
);

write_data21 write_data21_U0(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(write_data21_U0_ap_start),
    .ap_done(write_data21_U0_ap_done),
    .ap_continue(write_data21_U0_ap_continue),
    .ap_idle(write_data21_U0_ap_idle),
    .ap_ready(write_data21_U0_ap_ready),
    .output_AX_ALGdedo0_TREADY(output_AX_ALGdedo0_TREADY),
    .p_read(dedo0_0_V_dout),
    .output_AX_ALGdedo0_TDATA(write_data21_U0_output_AX_ALGdedo0_TDATA),
    .output_AX_ALGdedo0_TVALID(write_data21_U0_output_AX_ALGdedo0_TVALID),
    .output_AX_ALGdedo0_TKEEP(write_data21_U0_output_AX_ALGdedo0_TKEEP),
    .output_AX_ALGdedo0_TSTRB(write_data21_U0_output_AX_ALGdedo0_TSTRB),
    .output_AX_ALGdedo0_TUSER(write_data21_U0_output_AX_ALGdedo0_TUSER),
    .output_AX_ALGdedo0_TLAST(write_data21_U0_output_AX_ALGdedo0_TLAST),
    .output_AX_ALGdedo0_TID(write_data21_U0_output_AX_ALGdedo0_TID),
    .output_AX_ALGdedo0_TDEST(write_data21_U0_output_AX_ALGdedo0_TDEST)
);

write_data22 write_data22_U0(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(write_data22_U0_ap_start),
    .ap_done(write_data22_U0_ap_done),
    .ap_continue(write_data22_U0_ap_continue),
    .ap_idle(write_data22_U0_ap_idle),
    .ap_ready(write_data22_U0_ap_ready),
    .output_AX_ALGpalma0_TREADY(output_AX_ALGpalma0_TREADY),
    .p_read(palma0_0_V_dout),
    .output_AX_ALGpalma0_TDATA(write_data22_U0_output_AX_ALGpalma0_TDATA),
    .output_AX_ALGpalma0_TVALID(write_data22_U0_output_AX_ALGpalma0_TVALID),
    .output_AX_ALGpalma0_TKEEP(write_data22_U0_output_AX_ALGpalma0_TKEEP),
    .output_AX_ALGpalma0_TSTRB(write_data22_U0_output_AX_ALGpalma0_TSTRB),
    .output_AX_ALGpalma0_TUSER(write_data22_U0_output_AX_ALGpalma0_TUSER),
    .output_AX_ALGpalma0_TLAST(write_data22_U0_output_AX_ALGpalma0_TLAST),
    .output_AX_ALGpalma0_TID(write_data22_U0_output_AX_ALGpalma0_TID),
    .output_AX_ALGpalma0_TDEST(write_data22_U0_output_AX_ALGpalma0_TDEST)
);

write_data23 write_data23_U0(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(write_data23_U0_ap_start),
    .ap_done(write_data23_U0_ap_done),
    .ap_continue(write_data23_U0_ap_continue),
    .ap_idle(write_data23_U0_ap_idle),
    .ap_ready(write_data23_U0_ap_ready),
    .output_AX_ALGdedo1_TREADY(output_AX_ALGdedo1_TREADY),
    .p_read(dedo1_0_V_dout),
    .output_AX_ALGdedo1_TDATA(write_data23_U0_output_AX_ALGdedo1_TDATA),
    .output_AX_ALGdedo1_TVALID(write_data23_U0_output_AX_ALGdedo1_TVALID),
    .output_AX_ALGdedo1_TKEEP(write_data23_U0_output_AX_ALGdedo1_TKEEP),
    .output_AX_ALGdedo1_TSTRB(write_data23_U0_output_AX_ALGdedo1_TSTRB),
    .output_AX_ALGdedo1_TUSER(write_data23_U0_output_AX_ALGdedo1_TUSER),
    .output_AX_ALGdedo1_TLAST(write_data23_U0_output_AX_ALGdedo1_TLAST),
    .output_AX_ALGdedo1_TID(write_data23_U0_output_AX_ALGdedo1_TID),
    .output_AX_ALGdedo1_TDEST(write_data23_U0_output_AX_ALGdedo1_TDEST)
);

write_data write_data_U0(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(write_data_U0_ap_start),
    .ap_done(write_data_U0_ap_done),
    .ap_continue(write_data_U0_ap_continue),
    .ap_idle(write_data_U0_ap_idle),
    .ap_ready(write_data_U0_ap_ready),
    .output_AX_ALGpalma1_TREADY(output_AX_ALGpalma1_TREADY),
    .buf_0_V_read(palma1_0_V_dout),
    .output_AX_ALGpalma1_TDATA(write_data_U0_output_AX_ALGpalma1_TDATA),
    .output_AX_ALGpalma1_TVALID(write_data_U0_output_AX_ALGpalma1_TVALID),
    .output_AX_ALGpalma1_TKEEP(write_data_U0_output_AX_ALGpalma1_TKEEP),
    .output_AX_ALGpalma1_TSTRB(write_data_U0_output_AX_ALGpalma1_TSTRB),
    .output_AX_ALGpalma1_TUSER(write_data_U0_output_AX_ALGpalma1_TUSER),
    .output_AX_ALGpalma1_TLAST(write_data_U0_output_AX_ALGpalma1_TLAST),
    .output_AX_ALGpalma1_TID(write_data_U0_output_AX_ALGpalma1_TID),
    .output_AX_ALGpalma1_TDEST(write_data_U0_output_AX_ALGpalma1_TDEST)
);

fifo_w32_d2_A dedo0_0_V_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(Block_arrayctor_loop_U0_ap_return_0),
    .if_full_n(dedo0_0_V_full_n),
    .if_write(ap_channel_done_dedo0_0_V),
    .if_dout(dedo0_0_V_dout),
    .if_empty_n(dedo0_0_V_empty_n),
    .if_read(write_data21_U0_ap_ready)
);

fifo_w32_d2_A palma0_0_V_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(Block_arrayctor_loop_U0_ap_return_1),
    .if_full_n(palma0_0_V_full_n),
    .if_write(ap_channel_done_palma0_0_V),
    .if_dout(palma0_0_V_dout),
    .if_empty_n(palma0_0_V_empty_n),
    .if_read(write_data22_U0_ap_ready)
);

fifo_w32_d2_A dedo1_0_V_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(Block_arrayctor_loop_U0_ap_return_2),
    .if_full_n(dedo1_0_V_full_n),
    .if_write(ap_channel_done_dedo1_0_V),
    .if_dout(dedo1_0_V_dout),
    .if_empty_n(dedo1_0_V_empty_n),
    .if_read(write_data23_U0_ap_ready)
);

fifo_w32_d2_A palma1_0_V_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(Block_arrayctor_loop_U0_ap_return_3),
    .if_full_n(palma1_0_V_full_n),
    .if_write(ap_channel_done_palma1_0_V),
    .if_dout(palma1_0_V_dout),
    .if_empty_n(palma1_0_V_empty_n),
    .if_read(write_data_U0_ap_ready)
);

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_sync_reg_channel_write_dedo0_0_V <= 1'b0;
    end else begin
        if ((1'b1 == (Block_arrayctor_loop_U0_ap_done & Block_arrayctor_loop_U0_ap_continue))) begin
            ap_sync_reg_channel_write_dedo0_0_V <= 1'b0;
        end else begin
            ap_sync_reg_channel_write_dedo0_0_V <= ap_sync_channel_write_dedo0_0_V;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_sync_reg_channel_write_dedo1_0_V <= 1'b0;
    end else begin
        if ((1'b1 == (Block_arrayctor_loop_U0_ap_done & Block_arrayctor_loop_U0_ap_continue))) begin
            ap_sync_reg_channel_write_dedo1_0_V <= 1'b0;
        end else begin
            ap_sync_reg_channel_write_dedo1_0_V <= ap_sync_channel_write_dedo1_0_V;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_sync_reg_channel_write_palma0_0_V <= 1'b0;
    end else begin
        if ((1'b1 == (Block_arrayctor_loop_U0_ap_done & Block_arrayctor_loop_U0_ap_continue))) begin
            ap_sync_reg_channel_write_palma0_0_V <= 1'b0;
        end else begin
            ap_sync_reg_channel_write_palma0_0_V <= ap_sync_channel_write_palma0_0_V;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_sync_reg_channel_write_palma1_0_V <= 1'b0;
    end else begin
        if ((1'b1 == (Block_arrayctor_loop_U0_ap_done & Block_arrayctor_loop_U0_ap_continue))) begin
            ap_sync_reg_channel_write_palma1_0_V <= 1'b0;
        end else begin
            ap_sync_reg_channel_write_palma1_0_V <= ap_sync_channel_write_palma1_0_V;
        end
    end
end

assign Block_arrayctor_loop_U0_ap_continue = (ap_sync_channel_write_palma1_0_V & ap_sync_channel_write_dedo1_0_V & ap_sync_channel_write_palma0_0_V & ap_sync_channel_write_dedo0_0_V);

assign Block_arrayctor_loop_U0_ap_start = dato_t_empty_n;

assign Block_arrayctor_loop_U0_start_full_n = 1'b0;

assign Block_arrayctor_loop_U0_start_write = 1'b0;

assign ap_channel_done_dato = read_data_U0_ap_done;

assign ap_channel_done_dedo0_0_V = (Block_arrayctor_loop_U0_ap_done & (ap_sync_reg_channel_write_dedo0_0_V ^ 1'b1));

assign ap_channel_done_dedo1_0_V = (Block_arrayctor_loop_U0_ap_done & (ap_sync_reg_channel_write_dedo1_0_V ^ 1'b1));

assign ap_channel_done_palma0_0_V = (Block_arrayctor_loop_U0_ap_done & (ap_sync_reg_channel_write_palma0_0_V ^ 1'b1));

assign ap_channel_done_palma1_0_V = (Block_arrayctor_loop_U0_ap_done & (ap_sync_reg_channel_write_palma1_0_V ^ 1'b1));

always @ (*) begin
    ap_rst_n_inv = ~ap_rst_n;
end

assign ap_sync_channel_write_dedo0_0_V = ((ap_channel_done_dedo0_0_V & dedo0_0_V_full_n) | ap_sync_reg_channel_write_dedo0_0_V);

assign ap_sync_channel_write_dedo1_0_V = ((ap_channel_done_dedo1_0_V & dedo1_0_V_full_n) | ap_sync_reg_channel_write_dedo1_0_V);

assign ap_sync_channel_write_palma0_0_V = ((ap_channel_done_palma0_0_V & palma0_0_V_full_n) | ap_sync_reg_channel_write_palma0_0_V);

assign ap_sync_channel_write_palma1_0_V = ((ap_channel_done_palma1_0_V & palma1_0_V_full_n) | ap_sync_reg_channel_write_palma1_0_V);

assign ap_sync_continue = 1'b0;

assign dato_t_d1 = 32'd0;

assign dato_t_we1 = 1'b0;

assign input_AX_ALG_TREADY = read_data_U0_input_AX_ALG_TREADY;

assign output_AX_ALGdedo0_TDATA = write_data21_U0_output_AX_ALGdedo0_TDATA;

assign output_AX_ALGdedo0_TDEST = write_data21_U0_output_AX_ALGdedo0_TDEST;

assign output_AX_ALGdedo0_TID = write_data21_U0_output_AX_ALGdedo0_TID;

assign output_AX_ALGdedo0_TKEEP = write_data21_U0_output_AX_ALGdedo0_TKEEP;

assign output_AX_ALGdedo0_TLAST = write_data21_U0_output_AX_ALGdedo0_TLAST;

assign output_AX_ALGdedo0_TSTRB = write_data21_U0_output_AX_ALGdedo0_TSTRB;

assign output_AX_ALGdedo0_TUSER = write_data21_U0_output_AX_ALGdedo0_TUSER;

assign output_AX_ALGdedo0_TVALID = write_data21_U0_output_AX_ALGdedo0_TVALID;

assign output_AX_ALGdedo1_TDATA = write_data23_U0_output_AX_ALGdedo1_TDATA;

assign output_AX_ALGdedo1_TDEST = write_data23_U0_output_AX_ALGdedo1_TDEST;

assign output_AX_ALGdedo1_TID = write_data23_U0_output_AX_ALGdedo1_TID;

assign output_AX_ALGdedo1_TKEEP = write_data23_U0_output_AX_ALGdedo1_TKEEP;

assign output_AX_ALGdedo1_TLAST = write_data23_U0_output_AX_ALGdedo1_TLAST;

assign output_AX_ALGdedo1_TSTRB = write_data23_U0_output_AX_ALGdedo1_TSTRB;

assign output_AX_ALGdedo1_TUSER = write_data23_U0_output_AX_ALGdedo1_TUSER;

assign output_AX_ALGdedo1_TVALID = write_data23_U0_output_AX_ALGdedo1_TVALID;

assign output_AX_ALGpalma0_TDATA = write_data22_U0_output_AX_ALGpalma0_TDATA;

assign output_AX_ALGpalma0_TDEST = write_data22_U0_output_AX_ALGpalma0_TDEST;

assign output_AX_ALGpalma0_TID = write_data22_U0_output_AX_ALGpalma0_TID;

assign output_AX_ALGpalma0_TKEEP = write_data22_U0_output_AX_ALGpalma0_TKEEP;

assign output_AX_ALGpalma0_TLAST = write_data22_U0_output_AX_ALGpalma0_TLAST;

assign output_AX_ALGpalma0_TSTRB = write_data22_U0_output_AX_ALGpalma0_TSTRB;

assign output_AX_ALGpalma0_TUSER = write_data22_U0_output_AX_ALGpalma0_TUSER;

assign output_AX_ALGpalma0_TVALID = write_data22_U0_output_AX_ALGpalma0_TVALID;

assign output_AX_ALGpalma1_TDATA = write_data_U0_output_AX_ALGpalma1_TDATA;

assign output_AX_ALGpalma1_TDEST = write_data_U0_output_AX_ALGpalma1_TDEST;

assign output_AX_ALGpalma1_TID = write_data_U0_output_AX_ALGpalma1_TID;

assign output_AX_ALGpalma1_TKEEP = write_data_U0_output_AX_ALGpalma1_TKEEP;

assign output_AX_ALGpalma1_TLAST = write_data_U0_output_AX_ALGpalma1_TLAST;

assign output_AX_ALGpalma1_TSTRB = write_data_U0_output_AX_ALGpalma1_TSTRB;

assign output_AX_ALGpalma1_TUSER = write_data_U0_output_AX_ALGpalma1_TUSER;

assign output_AX_ALGpalma1_TVALID = write_data_U0_output_AX_ALGpalma1_TVALID;

assign read_data_U0_ap_continue = dato_i_full_n;

assign read_data_U0_ap_start = 1'b1;

assign read_data_U0_buf_V_full_n = dato_i_full_n;

assign read_data_U0_start_full_n = 1'b0;

assign read_data_U0_start_write = 1'b0;

assign write_data21_U0_ap_continue = 1'b1;

assign write_data21_U0_ap_start = dedo0_0_V_empty_n;

assign write_data21_U0_start_full_n = 1'b0;

assign write_data21_U0_start_write = 1'b0;

assign write_data22_U0_ap_continue = 1'b1;

assign write_data22_U0_ap_start = palma0_0_V_empty_n;

assign write_data22_U0_start_full_n = 1'b0;

assign write_data22_U0_start_write = 1'b0;

assign write_data23_U0_ap_continue = 1'b1;

assign write_data23_U0_ap_start = dedo1_0_V_empty_n;

assign write_data23_U0_start_full_n = 1'b0;

assign write_data23_U0_start_write = 1'b0;

assign write_data_U0_ap_continue = 1'b1;

assign write_data_U0_ap_start = palma1_0_V_empty_n;

assign write_data_U0_start_full_n = 1'b0;

assign write_data_U0_start_write = 1'b0;

endmodule //axi_algorithm
