// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2017.1
// Copyright (C) 1986-2017 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#include "axi_algorithm.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic axi_algorithm::ap_const_logic_1 = sc_dt::Log_1;
const sc_lv<32> axi_algorithm::ap_const_lv32_0 = "00000000000000000000000000000000";
const sc_lv<4> axi_algorithm::ap_const_lv4_0 = "0000";
const sc_lv<1> axi_algorithm::ap_const_lv1_0 = "0";
const sc_lv<5> axi_algorithm::ap_const_lv5_0 = "00000";
const sc_logic axi_algorithm::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<2> axi_algorithm::ap_const_lv2_0 = "00";
const sc_lv<2> axi_algorithm::ap_const_lv2_1 = "1";
const bool axi_algorithm::ap_const_boolean_1 = true;

axi_algorithm::axi_algorithm(sc_module_name name) : sc_module(name), mVcdFile(0) {
    dato_U = new axi_algorithm_dato("dato_U");
    dato_U->clk(ap_clk);
    dato_U->reset(ap_rst_n_inv);
    dato_U->i_address0(read_data_U0_buf_V_address0);
    dato_U->i_ce0(read_data_U0_buf_V_ce0);
    dato_U->i_we0(read_data_U0_buf_V_we0);
    dato_U->i_d0(read_data_U0_buf_V_d0);
    dato_U->i_q0(dato_i_q0);
    dato_U->i_address1(ap_var_for_const0);
    dato_U->i_ce1(ap_var_for_const1);
    dato_U->i_q1(dato_i_q1);
    dato_U->t_address0(Block_arrayctor_loop_U0_dato_address0);
    dato_U->t_ce0(Block_arrayctor_loop_U0_dato_ce0);
    dato_U->t_we0(ap_var_for_const1);
    dato_U->t_d0(ap_var_for_const2);
    dato_U->t_q0(dato_t_q0);
    dato_U->t_address1(Block_arrayctor_loop_U0_dato_address1);
    dato_U->t_ce1(Block_arrayctor_loop_U0_dato_ce1);
    dato_U->t_q1(dato_t_q1);
    dato_U->i_ce(ap_var_for_const3);
    dato_U->t_ce(ap_var_for_const3);
    dato_U->i_full_n(dato_i_full_n);
    dato_U->i_write(read_data_U0_ap_done);
    dato_U->t_empty_n(dato_t_empty_n);
    dato_U->t_read(Block_arrayctor_loop_U0_ap_ready);
    read_data_U0 = new read_data("read_data_U0");
    read_data_U0->ap_clk(ap_clk);
    read_data_U0->ap_rst(ap_rst_n_inv);
    read_data_U0->ap_start(read_data_U0_ap_start);
    read_data_U0->ap_done(read_data_U0_ap_done);
    read_data_U0->ap_continue(read_data_U0_ap_continue);
    read_data_U0->ap_idle(read_data_U0_ap_idle);
    read_data_U0->ap_ready(read_data_U0_ap_ready);
    read_data_U0->input_AX_ALG_TDATA(input_AX_ALG_TDATA);
    read_data_U0->input_AX_ALG_TVALID(input_AX_ALG_TVALID);
    read_data_U0->input_AX_ALG_TREADY(read_data_U0_input_AX_ALG_TREADY);
    read_data_U0->input_AX_ALG_TKEEP(input_AX_ALG_TKEEP);
    read_data_U0->input_AX_ALG_TSTRB(input_AX_ALG_TSTRB);
    read_data_U0->input_AX_ALG_TUSER(input_AX_ALG_TUSER);
    read_data_U0->input_AX_ALG_TLAST(input_AX_ALG_TLAST);
    read_data_U0->input_AX_ALG_TID(input_AX_ALG_TID);
    read_data_U0->input_AX_ALG_TDEST(input_AX_ALG_TDEST);
    read_data_U0->buf_V_address0(read_data_U0_buf_V_address0);
    read_data_U0->buf_V_ce0(read_data_U0_buf_V_ce0);
    read_data_U0->buf_V_we0(read_data_U0_buf_V_we0);
    read_data_U0->buf_V_d0(read_data_U0_buf_V_d0);
    Block_arrayctor_loop_U0 = new Block_arrayctor_loop("Block_arrayctor_loop_U0");
    Block_arrayctor_loop_U0->ap_clk(ap_clk);
    Block_arrayctor_loop_U0->ap_rst(ap_rst_n_inv);
    Block_arrayctor_loop_U0->ap_start(Block_arrayctor_loop_U0_ap_start);
    Block_arrayctor_loop_U0->ap_done(Block_arrayctor_loop_U0_ap_done);
    Block_arrayctor_loop_U0->ap_continue(Block_arrayctor_loop_U0_ap_continue);
    Block_arrayctor_loop_U0->ap_idle(Block_arrayctor_loop_U0_ap_idle);
    Block_arrayctor_loop_U0->ap_ready(Block_arrayctor_loop_U0_ap_ready);
    Block_arrayctor_loop_U0->dato_address0(Block_arrayctor_loop_U0_dato_address0);
    Block_arrayctor_loop_U0->dato_ce0(Block_arrayctor_loop_U0_dato_ce0);
    Block_arrayctor_loop_U0->dato_q0(dato_t_q0);
    Block_arrayctor_loop_U0->dato_address1(Block_arrayctor_loop_U0_dato_address1);
    Block_arrayctor_loop_U0->dato_ce1(Block_arrayctor_loop_U0_dato_ce1);
    Block_arrayctor_loop_U0->dato_q1(dato_t_q1);
    Block_arrayctor_loop_U0->ap_return_0(Block_arrayctor_loop_U0_ap_return_0);
    Block_arrayctor_loop_U0->ap_return_1(Block_arrayctor_loop_U0_ap_return_1);
    Block_arrayctor_loop_U0->ap_return_2(Block_arrayctor_loop_U0_ap_return_2);
    Block_arrayctor_loop_U0->ap_return_3(Block_arrayctor_loop_U0_ap_return_3);
    write_data21_U0 = new write_data21("write_data21_U0");
    write_data21_U0->ap_clk(ap_clk);
    write_data21_U0->ap_rst(ap_rst_n_inv);
    write_data21_U0->ap_start(write_data21_U0_ap_start);
    write_data21_U0->ap_done(write_data21_U0_ap_done);
    write_data21_U0->ap_continue(write_data21_U0_ap_continue);
    write_data21_U0->ap_idle(write_data21_U0_ap_idle);
    write_data21_U0->ap_ready(write_data21_U0_ap_ready);
    write_data21_U0->output_AX_ALGdedo0_TREADY(output_AX_ALGdedo0_TREADY);
    write_data21_U0->p_read(dedo0_0_V_dout);
    write_data21_U0->output_AX_ALGdedo0_TDATA(write_data21_U0_output_AX_ALGdedo0_TDATA);
    write_data21_U0->output_AX_ALGdedo0_TVALID(write_data21_U0_output_AX_ALGdedo0_TVALID);
    write_data21_U0->output_AX_ALGdedo0_TKEEP(write_data21_U0_output_AX_ALGdedo0_TKEEP);
    write_data21_U0->output_AX_ALGdedo0_TSTRB(write_data21_U0_output_AX_ALGdedo0_TSTRB);
    write_data21_U0->output_AX_ALGdedo0_TUSER(write_data21_U0_output_AX_ALGdedo0_TUSER);
    write_data21_U0->output_AX_ALGdedo0_TLAST(write_data21_U0_output_AX_ALGdedo0_TLAST);
    write_data21_U0->output_AX_ALGdedo0_TID(write_data21_U0_output_AX_ALGdedo0_TID);
    write_data21_U0->output_AX_ALGdedo0_TDEST(write_data21_U0_output_AX_ALGdedo0_TDEST);
    write_data22_U0 = new write_data22("write_data22_U0");
    write_data22_U0->ap_clk(ap_clk);
    write_data22_U0->ap_rst(ap_rst_n_inv);
    write_data22_U0->ap_start(write_data22_U0_ap_start);
    write_data22_U0->ap_done(write_data22_U0_ap_done);
    write_data22_U0->ap_continue(write_data22_U0_ap_continue);
    write_data22_U0->ap_idle(write_data22_U0_ap_idle);
    write_data22_U0->ap_ready(write_data22_U0_ap_ready);
    write_data22_U0->output_AX_ALGpalma0_TREADY(output_AX_ALGpalma0_TREADY);
    write_data22_U0->p_read(palma0_0_V_dout);
    write_data22_U0->output_AX_ALGpalma0_TDATA(write_data22_U0_output_AX_ALGpalma0_TDATA);
    write_data22_U0->output_AX_ALGpalma0_TVALID(write_data22_U0_output_AX_ALGpalma0_TVALID);
    write_data22_U0->output_AX_ALGpalma0_TKEEP(write_data22_U0_output_AX_ALGpalma0_TKEEP);
    write_data22_U0->output_AX_ALGpalma0_TSTRB(write_data22_U0_output_AX_ALGpalma0_TSTRB);
    write_data22_U0->output_AX_ALGpalma0_TUSER(write_data22_U0_output_AX_ALGpalma0_TUSER);
    write_data22_U0->output_AX_ALGpalma0_TLAST(write_data22_U0_output_AX_ALGpalma0_TLAST);
    write_data22_U0->output_AX_ALGpalma0_TID(write_data22_U0_output_AX_ALGpalma0_TID);
    write_data22_U0->output_AX_ALGpalma0_TDEST(write_data22_U0_output_AX_ALGpalma0_TDEST);
    write_data23_U0 = new write_data23("write_data23_U0");
    write_data23_U0->ap_clk(ap_clk);
    write_data23_U0->ap_rst(ap_rst_n_inv);
    write_data23_U0->ap_start(write_data23_U0_ap_start);
    write_data23_U0->ap_done(write_data23_U0_ap_done);
    write_data23_U0->ap_continue(write_data23_U0_ap_continue);
    write_data23_U0->ap_idle(write_data23_U0_ap_idle);
    write_data23_U0->ap_ready(write_data23_U0_ap_ready);
    write_data23_U0->output_AX_ALGdedo1_TREADY(output_AX_ALGdedo1_TREADY);
    write_data23_U0->p_read(dedo1_0_V_dout);
    write_data23_U0->output_AX_ALGdedo1_TDATA(write_data23_U0_output_AX_ALGdedo1_TDATA);
    write_data23_U0->output_AX_ALGdedo1_TVALID(write_data23_U0_output_AX_ALGdedo1_TVALID);
    write_data23_U0->output_AX_ALGdedo1_TKEEP(write_data23_U0_output_AX_ALGdedo1_TKEEP);
    write_data23_U0->output_AX_ALGdedo1_TSTRB(write_data23_U0_output_AX_ALGdedo1_TSTRB);
    write_data23_U0->output_AX_ALGdedo1_TUSER(write_data23_U0_output_AX_ALGdedo1_TUSER);
    write_data23_U0->output_AX_ALGdedo1_TLAST(write_data23_U0_output_AX_ALGdedo1_TLAST);
    write_data23_U0->output_AX_ALGdedo1_TID(write_data23_U0_output_AX_ALGdedo1_TID);
    write_data23_U0->output_AX_ALGdedo1_TDEST(write_data23_U0_output_AX_ALGdedo1_TDEST);
    write_data_U0 = new write_data("write_data_U0");
    write_data_U0->ap_clk(ap_clk);
    write_data_U0->ap_rst(ap_rst_n_inv);
    write_data_U0->ap_start(write_data_U0_ap_start);
    write_data_U0->ap_done(write_data_U0_ap_done);
    write_data_U0->ap_continue(write_data_U0_ap_continue);
    write_data_U0->ap_idle(write_data_U0_ap_idle);
    write_data_U0->ap_ready(write_data_U0_ap_ready);
    write_data_U0->output_AX_ALGpalma1_TREADY(output_AX_ALGpalma1_TREADY);
    write_data_U0->buf_0_V_read(palma1_0_V_dout);
    write_data_U0->output_AX_ALGpalma1_TDATA(write_data_U0_output_AX_ALGpalma1_TDATA);
    write_data_U0->output_AX_ALGpalma1_TVALID(write_data_U0_output_AX_ALGpalma1_TVALID);
    write_data_U0->output_AX_ALGpalma1_TKEEP(write_data_U0_output_AX_ALGpalma1_TKEEP);
    write_data_U0->output_AX_ALGpalma1_TSTRB(write_data_U0_output_AX_ALGpalma1_TSTRB);
    write_data_U0->output_AX_ALGpalma1_TUSER(write_data_U0_output_AX_ALGpalma1_TUSER);
    write_data_U0->output_AX_ALGpalma1_TLAST(write_data_U0_output_AX_ALGpalma1_TLAST);
    write_data_U0->output_AX_ALGpalma1_TID(write_data_U0_output_AX_ALGpalma1_TID);
    write_data_U0->output_AX_ALGpalma1_TDEST(write_data_U0_output_AX_ALGpalma1_TDEST);
    dedo0_0_V_U = new fifo_w32_d2_A("dedo0_0_V_U");
    dedo0_0_V_U->clk(ap_clk);
    dedo0_0_V_U->reset(ap_rst_n_inv);
    dedo0_0_V_U->if_read_ce(ap_var_for_const3);
    dedo0_0_V_U->if_write_ce(ap_var_for_const3);
    dedo0_0_V_U->if_din(Block_arrayctor_loop_U0_ap_return_0);
    dedo0_0_V_U->if_full_n(dedo0_0_V_full_n);
    dedo0_0_V_U->if_write(ap_channel_done_dedo0_0_V);
    dedo0_0_V_U->if_dout(dedo0_0_V_dout);
    dedo0_0_V_U->if_empty_n(dedo0_0_V_empty_n);
    dedo0_0_V_U->if_read(write_data21_U0_ap_ready);
    palma0_0_V_U = new fifo_w32_d2_A("palma0_0_V_U");
    palma0_0_V_U->clk(ap_clk);
    palma0_0_V_U->reset(ap_rst_n_inv);
    palma0_0_V_U->if_read_ce(ap_var_for_const3);
    palma0_0_V_U->if_write_ce(ap_var_for_const3);
    palma0_0_V_U->if_din(Block_arrayctor_loop_U0_ap_return_1);
    palma0_0_V_U->if_full_n(palma0_0_V_full_n);
    palma0_0_V_U->if_write(ap_channel_done_palma0_0_V);
    palma0_0_V_U->if_dout(palma0_0_V_dout);
    palma0_0_V_U->if_empty_n(palma0_0_V_empty_n);
    palma0_0_V_U->if_read(write_data22_U0_ap_ready);
    dedo1_0_V_U = new fifo_w32_d2_A("dedo1_0_V_U");
    dedo1_0_V_U->clk(ap_clk);
    dedo1_0_V_U->reset(ap_rst_n_inv);
    dedo1_0_V_U->if_read_ce(ap_var_for_const3);
    dedo1_0_V_U->if_write_ce(ap_var_for_const3);
    dedo1_0_V_U->if_din(Block_arrayctor_loop_U0_ap_return_2);
    dedo1_0_V_U->if_full_n(dedo1_0_V_full_n);
    dedo1_0_V_U->if_write(ap_channel_done_dedo1_0_V);
    dedo1_0_V_U->if_dout(dedo1_0_V_dout);
    dedo1_0_V_U->if_empty_n(dedo1_0_V_empty_n);
    dedo1_0_V_U->if_read(write_data23_U0_ap_ready);
    palma1_0_V_U = new fifo_w32_d2_A("palma1_0_V_U");
    palma1_0_V_U->clk(ap_clk);
    palma1_0_V_U->reset(ap_rst_n_inv);
    palma1_0_V_U->if_read_ce(ap_var_for_const3);
    palma1_0_V_U->if_write_ce(ap_var_for_const3);
    palma1_0_V_U->if_din(Block_arrayctor_loop_U0_ap_return_3);
    palma1_0_V_U->if_full_n(palma1_0_V_full_n);
    palma1_0_V_U->if_write(ap_channel_done_palma1_0_V);
    palma1_0_V_U->if_dout(palma1_0_V_dout);
    palma1_0_V_U->if_empty_n(palma1_0_V_empty_n);
    palma1_0_V_U->if_read(write_data_U0_ap_ready);

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_Block_arrayctor_loop_U0_ap_continue);
    sensitive << ( ap_sync_channel_write_palma1_0_V );
    sensitive << ( ap_sync_channel_write_dedo1_0_V );
    sensitive << ( ap_sync_channel_write_palma0_0_V );
    sensitive << ( ap_sync_channel_write_dedo0_0_V );

    SC_METHOD(thread_Block_arrayctor_loop_U0_ap_start);
    sensitive << ( dato_t_empty_n );

    SC_METHOD(thread_Block_arrayctor_loop_U0_start_full_n);

    SC_METHOD(thread_Block_arrayctor_loop_U0_start_write);

    SC_METHOD(thread_ap_channel_done_dato);
    sensitive << ( read_data_U0_ap_done );

    SC_METHOD(thread_ap_channel_done_dedo0_0_V);
    sensitive << ( Block_arrayctor_loop_U0_ap_done );
    sensitive << ( ap_sync_reg_channel_write_dedo0_0_V );

    SC_METHOD(thread_ap_channel_done_dedo1_0_V);
    sensitive << ( Block_arrayctor_loop_U0_ap_done );
    sensitive << ( ap_sync_reg_channel_write_dedo1_0_V );

    SC_METHOD(thread_ap_channel_done_palma0_0_V);
    sensitive << ( Block_arrayctor_loop_U0_ap_done );
    sensitive << ( ap_sync_reg_channel_write_palma0_0_V );

    SC_METHOD(thread_ap_channel_done_palma1_0_V);
    sensitive << ( Block_arrayctor_loop_U0_ap_done );
    sensitive << ( ap_sync_reg_channel_write_palma1_0_V );

    SC_METHOD(thread_ap_rst_n_inv);
    sensitive << ( ap_rst_n );

    SC_METHOD(thread_ap_sync_channel_write_dedo0_0_V);
    sensitive << ( ap_channel_done_dedo0_0_V );
    sensitive << ( dedo0_0_V_full_n );
    sensitive << ( ap_sync_reg_channel_write_dedo0_0_V );

    SC_METHOD(thread_ap_sync_channel_write_dedo1_0_V);
    sensitive << ( ap_channel_done_dedo1_0_V );
    sensitive << ( dedo1_0_V_full_n );
    sensitive << ( ap_sync_reg_channel_write_dedo1_0_V );

    SC_METHOD(thread_ap_sync_channel_write_palma0_0_V);
    sensitive << ( ap_channel_done_palma0_0_V );
    sensitive << ( palma0_0_V_full_n );
    sensitive << ( ap_sync_reg_channel_write_palma0_0_V );

    SC_METHOD(thread_ap_sync_channel_write_palma1_0_V);
    sensitive << ( ap_channel_done_palma1_0_V );
    sensitive << ( palma1_0_V_full_n );
    sensitive << ( ap_sync_reg_channel_write_palma1_0_V );

    SC_METHOD(thread_ap_sync_continue);

    SC_METHOD(thread_dato_t_d1);

    SC_METHOD(thread_dato_t_we1);

    SC_METHOD(thread_input_AX_ALG_TREADY);
    sensitive << ( read_data_U0_input_AX_ALG_TREADY );

    SC_METHOD(thread_output_AX_ALGdedo0_TDATA);
    sensitive << ( write_data21_U0_output_AX_ALGdedo0_TDATA );

    SC_METHOD(thread_output_AX_ALGdedo0_TDEST);
    sensitive << ( write_data21_U0_output_AX_ALGdedo0_TDEST );

    SC_METHOD(thread_output_AX_ALGdedo0_TID);
    sensitive << ( write_data21_U0_output_AX_ALGdedo0_TID );

    SC_METHOD(thread_output_AX_ALGdedo0_TKEEP);
    sensitive << ( write_data21_U0_output_AX_ALGdedo0_TKEEP );

    SC_METHOD(thread_output_AX_ALGdedo0_TLAST);
    sensitive << ( write_data21_U0_output_AX_ALGdedo0_TLAST );

    SC_METHOD(thread_output_AX_ALGdedo0_TSTRB);
    sensitive << ( write_data21_U0_output_AX_ALGdedo0_TSTRB );

    SC_METHOD(thread_output_AX_ALGdedo0_TUSER);
    sensitive << ( write_data21_U0_output_AX_ALGdedo0_TUSER );

    SC_METHOD(thread_output_AX_ALGdedo0_TVALID);
    sensitive << ( write_data21_U0_output_AX_ALGdedo0_TVALID );

    SC_METHOD(thread_output_AX_ALGdedo1_TDATA);
    sensitive << ( write_data23_U0_output_AX_ALGdedo1_TDATA );

    SC_METHOD(thread_output_AX_ALGdedo1_TDEST);
    sensitive << ( write_data23_U0_output_AX_ALGdedo1_TDEST );

    SC_METHOD(thread_output_AX_ALGdedo1_TID);
    sensitive << ( write_data23_U0_output_AX_ALGdedo1_TID );

    SC_METHOD(thread_output_AX_ALGdedo1_TKEEP);
    sensitive << ( write_data23_U0_output_AX_ALGdedo1_TKEEP );

    SC_METHOD(thread_output_AX_ALGdedo1_TLAST);
    sensitive << ( write_data23_U0_output_AX_ALGdedo1_TLAST );

    SC_METHOD(thread_output_AX_ALGdedo1_TSTRB);
    sensitive << ( write_data23_U0_output_AX_ALGdedo1_TSTRB );

    SC_METHOD(thread_output_AX_ALGdedo1_TUSER);
    sensitive << ( write_data23_U0_output_AX_ALGdedo1_TUSER );

    SC_METHOD(thread_output_AX_ALGdedo1_TVALID);
    sensitive << ( write_data23_U0_output_AX_ALGdedo1_TVALID );

    SC_METHOD(thread_output_AX_ALGpalma0_TDATA);
    sensitive << ( write_data22_U0_output_AX_ALGpalma0_TDATA );

    SC_METHOD(thread_output_AX_ALGpalma0_TDEST);
    sensitive << ( write_data22_U0_output_AX_ALGpalma0_TDEST );

    SC_METHOD(thread_output_AX_ALGpalma0_TID);
    sensitive << ( write_data22_U0_output_AX_ALGpalma0_TID );

    SC_METHOD(thread_output_AX_ALGpalma0_TKEEP);
    sensitive << ( write_data22_U0_output_AX_ALGpalma0_TKEEP );

    SC_METHOD(thread_output_AX_ALGpalma0_TLAST);
    sensitive << ( write_data22_U0_output_AX_ALGpalma0_TLAST );

    SC_METHOD(thread_output_AX_ALGpalma0_TSTRB);
    sensitive << ( write_data22_U0_output_AX_ALGpalma0_TSTRB );

    SC_METHOD(thread_output_AX_ALGpalma0_TUSER);
    sensitive << ( write_data22_U0_output_AX_ALGpalma0_TUSER );

    SC_METHOD(thread_output_AX_ALGpalma0_TVALID);
    sensitive << ( write_data22_U0_output_AX_ALGpalma0_TVALID );

    SC_METHOD(thread_output_AX_ALGpalma1_TDATA);
    sensitive << ( write_data_U0_output_AX_ALGpalma1_TDATA );

    SC_METHOD(thread_output_AX_ALGpalma1_TDEST);
    sensitive << ( write_data_U0_output_AX_ALGpalma1_TDEST );

    SC_METHOD(thread_output_AX_ALGpalma1_TID);
    sensitive << ( write_data_U0_output_AX_ALGpalma1_TID );

    SC_METHOD(thread_output_AX_ALGpalma1_TKEEP);
    sensitive << ( write_data_U0_output_AX_ALGpalma1_TKEEP );

    SC_METHOD(thread_output_AX_ALGpalma1_TLAST);
    sensitive << ( write_data_U0_output_AX_ALGpalma1_TLAST );

    SC_METHOD(thread_output_AX_ALGpalma1_TSTRB);
    sensitive << ( write_data_U0_output_AX_ALGpalma1_TSTRB );

    SC_METHOD(thread_output_AX_ALGpalma1_TUSER);
    sensitive << ( write_data_U0_output_AX_ALGpalma1_TUSER );

    SC_METHOD(thread_output_AX_ALGpalma1_TVALID);
    sensitive << ( write_data_U0_output_AX_ALGpalma1_TVALID );

    SC_METHOD(thread_read_data_U0_ap_continue);
    sensitive << ( dato_i_full_n );

    SC_METHOD(thread_read_data_U0_ap_start);

    SC_METHOD(thread_read_data_U0_buf_V_full_n);
    sensitive << ( dato_i_full_n );

    SC_METHOD(thread_read_data_U0_start_full_n);

    SC_METHOD(thread_read_data_U0_start_write);

    SC_METHOD(thread_write_data21_U0_ap_continue);

    SC_METHOD(thread_write_data21_U0_ap_start);
    sensitive << ( dedo0_0_V_empty_n );

    SC_METHOD(thread_write_data21_U0_start_full_n);

    SC_METHOD(thread_write_data21_U0_start_write);

    SC_METHOD(thread_write_data22_U0_ap_continue);

    SC_METHOD(thread_write_data22_U0_ap_start);
    sensitive << ( palma0_0_V_empty_n );

    SC_METHOD(thread_write_data22_U0_start_full_n);

    SC_METHOD(thread_write_data22_U0_start_write);

    SC_METHOD(thread_write_data23_U0_ap_continue);

    SC_METHOD(thread_write_data23_U0_ap_start);
    sensitive << ( dedo1_0_V_empty_n );

    SC_METHOD(thread_write_data23_U0_start_full_n);

    SC_METHOD(thread_write_data23_U0_start_write);

    SC_METHOD(thread_write_data_U0_ap_continue);

    SC_METHOD(thread_write_data_U0_ap_start);
    sensitive << ( palma1_0_V_empty_n );

    SC_METHOD(thread_write_data_U0_start_full_n);

    SC_METHOD(thread_write_data_U0_start_write);

    SC_THREAD(thread_hdltv_gen);
    sensitive << ( ap_clk.pos() );

    SC_THREAD(thread_ap_var_for_const3);

    SC_THREAD(thread_ap_var_for_const2);

    SC_THREAD(thread_ap_var_for_const1);

    SC_THREAD(thread_ap_var_for_const0);

    ap_sync_reg_channel_write_palma1_0_V = SC_LOGIC_0;
    ap_sync_reg_channel_write_dedo1_0_V = SC_LOGIC_0;
    ap_sync_reg_channel_write_palma0_0_V = SC_LOGIC_0;
    ap_sync_reg_channel_write_dedo0_0_V = SC_LOGIC_0;
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "axi_algorithm_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT__
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst_n, "(port)ap_rst_n");
    sc_trace(mVcdFile, input_AX_ALG_TDATA, "(port)input_AX_ALG_TDATA");
    sc_trace(mVcdFile, input_AX_ALG_TKEEP, "(port)input_AX_ALG_TKEEP");
    sc_trace(mVcdFile, input_AX_ALG_TSTRB, "(port)input_AX_ALG_TSTRB");
    sc_trace(mVcdFile, input_AX_ALG_TUSER, "(port)input_AX_ALG_TUSER");
    sc_trace(mVcdFile, input_AX_ALG_TLAST, "(port)input_AX_ALG_TLAST");
    sc_trace(mVcdFile, input_AX_ALG_TID, "(port)input_AX_ALG_TID");
    sc_trace(mVcdFile, input_AX_ALG_TDEST, "(port)input_AX_ALG_TDEST");
    sc_trace(mVcdFile, output_AX_ALGdedo0_TDATA, "(port)output_AX_ALGdedo0_TDATA");
    sc_trace(mVcdFile, output_AX_ALGdedo0_TKEEP, "(port)output_AX_ALGdedo0_TKEEP");
    sc_trace(mVcdFile, output_AX_ALGdedo0_TSTRB, "(port)output_AX_ALGdedo0_TSTRB");
    sc_trace(mVcdFile, output_AX_ALGdedo0_TUSER, "(port)output_AX_ALGdedo0_TUSER");
    sc_trace(mVcdFile, output_AX_ALGdedo0_TLAST, "(port)output_AX_ALGdedo0_TLAST");
    sc_trace(mVcdFile, output_AX_ALGdedo0_TID, "(port)output_AX_ALGdedo0_TID");
    sc_trace(mVcdFile, output_AX_ALGdedo0_TDEST, "(port)output_AX_ALGdedo0_TDEST");
    sc_trace(mVcdFile, output_AX_ALGpalma0_TDATA, "(port)output_AX_ALGpalma0_TDATA");
    sc_trace(mVcdFile, output_AX_ALGpalma0_TKEEP, "(port)output_AX_ALGpalma0_TKEEP");
    sc_trace(mVcdFile, output_AX_ALGpalma0_TSTRB, "(port)output_AX_ALGpalma0_TSTRB");
    sc_trace(mVcdFile, output_AX_ALGpalma0_TUSER, "(port)output_AX_ALGpalma0_TUSER");
    sc_trace(mVcdFile, output_AX_ALGpalma0_TLAST, "(port)output_AX_ALGpalma0_TLAST");
    sc_trace(mVcdFile, output_AX_ALGpalma0_TID, "(port)output_AX_ALGpalma0_TID");
    sc_trace(mVcdFile, output_AX_ALGpalma0_TDEST, "(port)output_AX_ALGpalma0_TDEST");
    sc_trace(mVcdFile, output_AX_ALGdedo1_TDATA, "(port)output_AX_ALGdedo1_TDATA");
    sc_trace(mVcdFile, output_AX_ALGdedo1_TKEEP, "(port)output_AX_ALGdedo1_TKEEP");
    sc_trace(mVcdFile, output_AX_ALGdedo1_TSTRB, "(port)output_AX_ALGdedo1_TSTRB");
    sc_trace(mVcdFile, output_AX_ALGdedo1_TUSER, "(port)output_AX_ALGdedo1_TUSER");
    sc_trace(mVcdFile, output_AX_ALGdedo1_TLAST, "(port)output_AX_ALGdedo1_TLAST");
    sc_trace(mVcdFile, output_AX_ALGdedo1_TID, "(port)output_AX_ALGdedo1_TID");
    sc_trace(mVcdFile, output_AX_ALGdedo1_TDEST, "(port)output_AX_ALGdedo1_TDEST");
    sc_trace(mVcdFile, output_AX_ALGpalma1_TDATA, "(port)output_AX_ALGpalma1_TDATA");
    sc_trace(mVcdFile, output_AX_ALGpalma1_TKEEP, "(port)output_AX_ALGpalma1_TKEEP");
    sc_trace(mVcdFile, output_AX_ALGpalma1_TSTRB, "(port)output_AX_ALGpalma1_TSTRB");
    sc_trace(mVcdFile, output_AX_ALGpalma1_TUSER, "(port)output_AX_ALGpalma1_TUSER");
    sc_trace(mVcdFile, output_AX_ALGpalma1_TLAST, "(port)output_AX_ALGpalma1_TLAST");
    sc_trace(mVcdFile, output_AX_ALGpalma1_TID, "(port)output_AX_ALGpalma1_TID");
    sc_trace(mVcdFile, output_AX_ALGpalma1_TDEST, "(port)output_AX_ALGpalma1_TDEST");
    sc_trace(mVcdFile, input_AX_ALG_TVALID, "(port)input_AX_ALG_TVALID");
    sc_trace(mVcdFile, input_AX_ALG_TREADY, "(port)input_AX_ALG_TREADY");
    sc_trace(mVcdFile, output_AX_ALGdedo0_TVALID, "(port)output_AX_ALGdedo0_TVALID");
    sc_trace(mVcdFile, output_AX_ALGdedo0_TREADY, "(port)output_AX_ALGdedo0_TREADY");
    sc_trace(mVcdFile, output_AX_ALGpalma0_TVALID, "(port)output_AX_ALGpalma0_TVALID");
    sc_trace(mVcdFile, output_AX_ALGpalma0_TREADY, "(port)output_AX_ALGpalma0_TREADY");
    sc_trace(mVcdFile, output_AX_ALGdedo1_TVALID, "(port)output_AX_ALGdedo1_TVALID");
    sc_trace(mVcdFile, output_AX_ALGdedo1_TREADY, "(port)output_AX_ALGdedo1_TREADY");
    sc_trace(mVcdFile, output_AX_ALGpalma1_TVALID, "(port)output_AX_ALGpalma1_TVALID");
    sc_trace(mVcdFile, output_AX_ALGpalma1_TREADY, "(port)output_AX_ALGpalma1_TREADY");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, ap_rst_n_inv, "ap_rst_n_inv");
    sc_trace(mVcdFile, dato_i_q0, "dato_i_q0");
    sc_trace(mVcdFile, dato_i_q1, "dato_i_q1");
    sc_trace(mVcdFile, dato_t_q0, "dato_t_q0");
    sc_trace(mVcdFile, dato_t_q1, "dato_t_q1");
    sc_trace(mVcdFile, read_data_U0_ap_start, "read_data_U0_ap_start");
    sc_trace(mVcdFile, read_data_U0_ap_done, "read_data_U0_ap_done");
    sc_trace(mVcdFile, read_data_U0_ap_continue, "read_data_U0_ap_continue");
    sc_trace(mVcdFile, read_data_U0_ap_idle, "read_data_U0_ap_idle");
    sc_trace(mVcdFile, read_data_U0_ap_ready, "read_data_U0_ap_ready");
    sc_trace(mVcdFile, read_data_U0_input_AX_ALG_TREADY, "read_data_U0_input_AX_ALG_TREADY");
    sc_trace(mVcdFile, read_data_U0_buf_V_address0, "read_data_U0_buf_V_address0");
    sc_trace(mVcdFile, read_data_U0_buf_V_ce0, "read_data_U0_buf_V_ce0");
    sc_trace(mVcdFile, read_data_U0_buf_V_we0, "read_data_U0_buf_V_we0");
    sc_trace(mVcdFile, read_data_U0_buf_V_d0, "read_data_U0_buf_V_d0");
    sc_trace(mVcdFile, ap_channel_done_dato, "ap_channel_done_dato");
    sc_trace(mVcdFile, read_data_U0_buf_V_full_n, "read_data_U0_buf_V_full_n");
    sc_trace(mVcdFile, Block_arrayctor_loop_U0_ap_start, "Block_arrayctor_loop_U0_ap_start");
    sc_trace(mVcdFile, Block_arrayctor_loop_U0_ap_done, "Block_arrayctor_loop_U0_ap_done");
    sc_trace(mVcdFile, Block_arrayctor_loop_U0_ap_continue, "Block_arrayctor_loop_U0_ap_continue");
    sc_trace(mVcdFile, Block_arrayctor_loop_U0_ap_idle, "Block_arrayctor_loop_U0_ap_idle");
    sc_trace(mVcdFile, Block_arrayctor_loop_U0_ap_ready, "Block_arrayctor_loop_U0_ap_ready");
    sc_trace(mVcdFile, Block_arrayctor_loop_U0_dato_address0, "Block_arrayctor_loop_U0_dato_address0");
    sc_trace(mVcdFile, Block_arrayctor_loop_U0_dato_ce0, "Block_arrayctor_loop_U0_dato_ce0");
    sc_trace(mVcdFile, Block_arrayctor_loop_U0_dato_address1, "Block_arrayctor_loop_U0_dato_address1");
    sc_trace(mVcdFile, Block_arrayctor_loop_U0_dato_ce1, "Block_arrayctor_loop_U0_dato_ce1");
    sc_trace(mVcdFile, Block_arrayctor_loop_U0_ap_return_0, "Block_arrayctor_loop_U0_ap_return_0");
    sc_trace(mVcdFile, Block_arrayctor_loop_U0_ap_return_1, "Block_arrayctor_loop_U0_ap_return_1");
    sc_trace(mVcdFile, Block_arrayctor_loop_U0_ap_return_2, "Block_arrayctor_loop_U0_ap_return_2");
    sc_trace(mVcdFile, Block_arrayctor_loop_U0_ap_return_3, "Block_arrayctor_loop_U0_ap_return_3");
    sc_trace(mVcdFile, ap_channel_done_palma1_0_V, "ap_channel_done_palma1_0_V");
    sc_trace(mVcdFile, palma1_0_V_full_n, "palma1_0_V_full_n");
    sc_trace(mVcdFile, ap_sync_reg_channel_write_palma1_0_V, "ap_sync_reg_channel_write_palma1_0_V");
    sc_trace(mVcdFile, ap_sync_channel_write_palma1_0_V, "ap_sync_channel_write_palma1_0_V");
    sc_trace(mVcdFile, ap_channel_done_dedo1_0_V, "ap_channel_done_dedo1_0_V");
    sc_trace(mVcdFile, dedo1_0_V_full_n, "dedo1_0_V_full_n");
    sc_trace(mVcdFile, ap_sync_reg_channel_write_dedo1_0_V, "ap_sync_reg_channel_write_dedo1_0_V");
    sc_trace(mVcdFile, ap_sync_channel_write_dedo1_0_V, "ap_sync_channel_write_dedo1_0_V");
    sc_trace(mVcdFile, ap_channel_done_palma0_0_V, "ap_channel_done_palma0_0_V");
    sc_trace(mVcdFile, palma0_0_V_full_n, "palma0_0_V_full_n");
    sc_trace(mVcdFile, ap_sync_reg_channel_write_palma0_0_V, "ap_sync_reg_channel_write_palma0_0_V");
    sc_trace(mVcdFile, ap_sync_channel_write_palma0_0_V, "ap_sync_channel_write_palma0_0_V");
    sc_trace(mVcdFile, ap_channel_done_dedo0_0_V, "ap_channel_done_dedo0_0_V");
    sc_trace(mVcdFile, dedo0_0_V_full_n, "dedo0_0_V_full_n");
    sc_trace(mVcdFile, ap_sync_reg_channel_write_dedo0_0_V, "ap_sync_reg_channel_write_dedo0_0_V");
    sc_trace(mVcdFile, ap_sync_channel_write_dedo0_0_V, "ap_sync_channel_write_dedo0_0_V");
    sc_trace(mVcdFile, write_data21_U0_ap_start, "write_data21_U0_ap_start");
    sc_trace(mVcdFile, write_data21_U0_ap_done, "write_data21_U0_ap_done");
    sc_trace(mVcdFile, write_data21_U0_ap_continue, "write_data21_U0_ap_continue");
    sc_trace(mVcdFile, write_data21_U0_ap_idle, "write_data21_U0_ap_idle");
    sc_trace(mVcdFile, write_data21_U0_ap_ready, "write_data21_U0_ap_ready");
    sc_trace(mVcdFile, write_data21_U0_output_AX_ALGdedo0_TDATA, "write_data21_U0_output_AX_ALGdedo0_TDATA");
    sc_trace(mVcdFile, write_data21_U0_output_AX_ALGdedo0_TVALID, "write_data21_U0_output_AX_ALGdedo0_TVALID");
    sc_trace(mVcdFile, write_data21_U0_output_AX_ALGdedo0_TKEEP, "write_data21_U0_output_AX_ALGdedo0_TKEEP");
    sc_trace(mVcdFile, write_data21_U0_output_AX_ALGdedo0_TSTRB, "write_data21_U0_output_AX_ALGdedo0_TSTRB");
    sc_trace(mVcdFile, write_data21_U0_output_AX_ALGdedo0_TUSER, "write_data21_U0_output_AX_ALGdedo0_TUSER");
    sc_trace(mVcdFile, write_data21_U0_output_AX_ALGdedo0_TLAST, "write_data21_U0_output_AX_ALGdedo0_TLAST");
    sc_trace(mVcdFile, write_data21_U0_output_AX_ALGdedo0_TID, "write_data21_U0_output_AX_ALGdedo0_TID");
    sc_trace(mVcdFile, write_data21_U0_output_AX_ALGdedo0_TDEST, "write_data21_U0_output_AX_ALGdedo0_TDEST");
    sc_trace(mVcdFile, ap_sync_continue, "ap_sync_continue");
    sc_trace(mVcdFile, write_data22_U0_ap_start, "write_data22_U0_ap_start");
    sc_trace(mVcdFile, write_data22_U0_ap_done, "write_data22_U0_ap_done");
    sc_trace(mVcdFile, write_data22_U0_ap_continue, "write_data22_U0_ap_continue");
    sc_trace(mVcdFile, write_data22_U0_ap_idle, "write_data22_U0_ap_idle");
    sc_trace(mVcdFile, write_data22_U0_ap_ready, "write_data22_U0_ap_ready");
    sc_trace(mVcdFile, write_data22_U0_output_AX_ALGpalma0_TDATA, "write_data22_U0_output_AX_ALGpalma0_TDATA");
    sc_trace(mVcdFile, write_data22_U0_output_AX_ALGpalma0_TVALID, "write_data22_U0_output_AX_ALGpalma0_TVALID");
    sc_trace(mVcdFile, write_data22_U0_output_AX_ALGpalma0_TKEEP, "write_data22_U0_output_AX_ALGpalma0_TKEEP");
    sc_trace(mVcdFile, write_data22_U0_output_AX_ALGpalma0_TSTRB, "write_data22_U0_output_AX_ALGpalma0_TSTRB");
    sc_trace(mVcdFile, write_data22_U0_output_AX_ALGpalma0_TUSER, "write_data22_U0_output_AX_ALGpalma0_TUSER");
    sc_trace(mVcdFile, write_data22_U0_output_AX_ALGpalma0_TLAST, "write_data22_U0_output_AX_ALGpalma0_TLAST");
    sc_trace(mVcdFile, write_data22_U0_output_AX_ALGpalma0_TID, "write_data22_U0_output_AX_ALGpalma0_TID");
    sc_trace(mVcdFile, write_data22_U0_output_AX_ALGpalma0_TDEST, "write_data22_U0_output_AX_ALGpalma0_TDEST");
    sc_trace(mVcdFile, write_data23_U0_ap_start, "write_data23_U0_ap_start");
    sc_trace(mVcdFile, write_data23_U0_ap_done, "write_data23_U0_ap_done");
    sc_trace(mVcdFile, write_data23_U0_ap_continue, "write_data23_U0_ap_continue");
    sc_trace(mVcdFile, write_data23_U0_ap_idle, "write_data23_U0_ap_idle");
    sc_trace(mVcdFile, write_data23_U0_ap_ready, "write_data23_U0_ap_ready");
    sc_trace(mVcdFile, write_data23_U0_output_AX_ALGdedo1_TDATA, "write_data23_U0_output_AX_ALGdedo1_TDATA");
    sc_trace(mVcdFile, write_data23_U0_output_AX_ALGdedo1_TVALID, "write_data23_U0_output_AX_ALGdedo1_TVALID");
    sc_trace(mVcdFile, write_data23_U0_output_AX_ALGdedo1_TKEEP, "write_data23_U0_output_AX_ALGdedo1_TKEEP");
    sc_trace(mVcdFile, write_data23_U0_output_AX_ALGdedo1_TSTRB, "write_data23_U0_output_AX_ALGdedo1_TSTRB");
    sc_trace(mVcdFile, write_data23_U0_output_AX_ALGdedo1_TUSER, "write_data23_U0_output_AX_ALGdedo1_TUSER");
    sc_trace(mVcdFile, write_data23_U0_output_AX_ALGdedo1_TLAST, "write_data23_U0_output_AX_ALGdedo1_TLAST");
    sc_trace(mVcdFile, write_data23_U0_output_AX_ALGdedo1_TID, "write_data23_U0_output_AX_ALGdedo1_TID");
    sc_trace(mVcdFile, write_data23_U0_output_AX_ALGdedo1_TDEST, "write_data23_U0_output_AX_ALGdedo1_TDEST");
    sc_trace(mVcdFile, write_data_U0_ap_start, "write_data_U0_ap_start");
    sc_trace(mVcdFile, write_data_U0_ap_done, "write_data_U0_ap_done");
    sc_trace(mVcdFile, write_data_U0_ap_continue, "write_data_U0_ap_continue");
    sc_trace(mVcdFile, write_data_U0_ap_idle, "write_data_U0_ap_idle");
    sc_trace(mVcdFile, write_data_U0_ap_ready, "write_data_U0_ap_ready");
    sc_trace(mVcdFile, write_data_U0_output_AX_ALGpalma1_TDATA, "write_data_U0_output_AX_ALGpalma1_TDATA");
    sc_trace(mVcdFile, write_data_U0_output_AX_ALGpalma1_TVALID, "write_data_U0_output_AX_ALGpalma1_TVALID");
    sc_trace(mVcdFile, write_data_U0_output_AX_ALGpalma1_TKEEP, "write_data_U0_output_AX_ALGpalma1_TKEEP");
    sc_trace(mVcdFile, write_data_U0_output_AX_ALGpalma1_TSTRB, "write_data_U0_output_AX_ALGpalma1_TSTRB");
    sc_trace(mVcdFile, write_data_U0_output_AX_ALGpalma1_TUSER, "write_data_U0_output_AX_ALGpalma1_TUSER");
    sc_trace(mVcdFile, write_data_U0_output_AX_ALGpalma1_TLAST, "write_data_U0_output_AX_ALGpalma1_TLAST");
    sc_trace(mVcdFile, write_data_U0_output_AX_ALGpalma1_TID, "write_data_U0_output_AX_ALGpalma1_TID");
    sc_trace(mVcdFile, write_data_U0_output_AX_ALGpalma1_TDEST, "write_data_U0_output_AX_ALGpalma1_TDEST");
    sc_trace(mVcdFile, dato_i_full_n, "dato_i_full_n");
    sc_trace(mVcdFile, dato_t_empty_n, "dato_t_empty_n");
    sc_trace(mVcdFile, dato_t_d1, "dato_t_d1");
    sc_trace(mVcdFile, dato_t_we1, "dato_t_we1");
    sc_trace(mVcdFile, dedo0_0_V_dout, "dedo0_0_V_dout");
    sc_trace(mVcdFile, dedo0_0_V_empty_n, "dedo0_0_V_empty_n");
    sc_trace(mVcdFile, palma0_0_V_dout, "palma0_0_V_dout");
    sc_trace(mVcdFile, palma0_0_V_empty_n, "palma0_0_V_empty_n");
    sc_trace(mVcdFile, dedo1_0_V_dout, "dedo1_0_V_dout");
    sc_trace(mVcdFile, dedo1_0_V_empty_n, "dedo1_0_V_empty_n");
    sc_trace(mVcdFile, palma1_0_V_dout, "palma1_0_V_dout");
    sc_trace(mVcdFile, palma1_0_V_empty_n, "palma1_0_V_empty_n");
    sc_trace(mVcdFile, read_data_U0_start_full_n, "read_data_U0_start_full_n");
    sc_trace(mVcdFile, read_data_U0_start_write, "read_data_U0_start_write");
    sc_trace(mVcdFile, Block_arrayctor_loop_U0_start_full_n, "Block_arrayctor_loop_U0_start_full_n");
    sc_trace(mVcdFile, Block_arrayctor_loop_U0_start_write, "Block_arrayctor_loop_U0_start_write");
    sc_trace(mVcdFile, write_data21_U0_start_full_n, "write_data21_U0_start_full_n");
    sc_trace(mVcdFile, write_data21_U0_start_write, "write_data21_U0_start_write");
    sc_trace(mVcdFile, write_data22_U0_start_full_n, "write_data22_U0_start_full_n");
    sc_trace(mVcdFile, write_data22_U0_start_write, "write_data22_U0_start_write");
    sc_trace(mVcdFile, write_data23_U0_start_full_n, "write_data23_U0_start_full_n");
    sc_trace(mVcdFile, write_data23_U0_start_write, "write_data23_U0_start_write");
    sc_trace(mVcdFile, write_data_U0_start_full_n, "write_data_U0_start_full_n");
    sc_trace(mVcdFile, write_data_U0_start_write, "write_data_U0_start_write");
#endif

    }
    mHdltvinHandle.open("axi_algorithm.hdltvin.dat");
    mHdltvoutHandle.open("axi_algorithm.hdltvout.dat");
}

axi_algorithm::~axi_algorithm() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

    mHdltvinHandle << "] " << endl;
    mHdltvoutHandle << "] " << endl;
    mHdltvinHandle.close();
    mHdltvoutHandle.close();
    delete dato_U;
    delete read_data_U0;
    delete Block_arrayctor_loop_U0;
    delete write_data21_U0;
    delete write_data22_U0;
    delete write_data23_U0;
    delete write_data_U0;
    delete dedo0_0_V_U;
    delete palma0_0_V_U;
    delete dedo1_0_V_U;
    delete palma1_0_V_U;
}

void axi_algorithm::thread_ap_var_for_const3() {
    ap_var_for_const3 = ap_const_logic_1;
}

void axi_algorithm::thread_ap_var_for_const2() {
    ap_var_for_const2 = ap_const_lv32_0;
}

void axi_algorithm::thread_ap_var_for_const1() {
    ap_var_for_const1 = ap_const_logic_0;
}

void axi_algorithm::thread_ap_var_for_const0() {
    ap_var_for_const0 = ap_const_lv2_0;
}

void axi_algorithm::thread_ap_clk_no_reset_() {
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_sync_reg_channel_write_dedo0_0_V = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_const_logic_1, (Block_arrayctor_loop_U0_ap_done.read() & 
             Block_arrayctor_loop_U0_ap_continue.read()))) {
            ap_sync_reg_channel_write_dedo0_0_V = ap_const_logic_0;
        } else {
            ap_sync_reg_channel_write_dedo0_0_V = ap_sync_channel_write_dedo0_0_V.read();
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_sync_reg_channel_write_dedo1_0_V = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_const_logic_1, (Block_arrayctor_loop_U0_ap_done.read() & 
             Block_arrayctor_loop_U0_ap_continue.read()))) {
            ap_sync_reg_channel_write_dedo1_0_V = ap_const_logic_0;
        } else {
            ap_sync_reg_channel_write_dedo1_0_V = ap_sync_channel_write_dedo1_0_V.read();
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_sync_reg_channel_write_palma0_0_V = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_const_logic_1, (Block_arrayctor_loop_U0_ap_done.read() & 
             Block_arrayctor_loop_U0_ap_continue.read()))) {
            ap_sync_reg_channel_write_palma0_0_V = ap_const_logic_0;
        } else {
            ap_sync_reg_channel_write_palma0_0_V = ap_sync_channel_write_palma0_0_V.read();
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_sync_reg_channel_write_palma1_0_V = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_const_logic_1, (Block_arrayctor_loop_U0_ap_done.read() & 
             Block_arrayctor_loop_U0_ap_continue.read()))) {
            ap_sync_reg_channel_write_palma1_0_V = ap_const_logic_0;
        } else {
            ap_sync_reg_channel_write_palma1_0_V = ap_sync_channel_write_palma1_0_V.read();
        }
    }
}

void axi_algorithm::thread_Block_arrayctor_loop_U0_ap_continue() {
    Block_arrayctor_loop_U0_ap_continue = (ap_sync_channel_write_palma1_0_V.read() & ap_sync_channel_write_dedo1_0_V.read() & ap_sync_channel_write_palma0_0_V.read() & ap_sync_channel_write_dedo0_0_V.read());
}

void axi_algorithm::thread_Block_arrayctor_loop_U0_ap_start() {
    Block_arrayctor_loop_U0_ap_start = dato_t_empty_n.read();
}

void axi_algorithm::thread_Block_arrayctor_loop_U0_start_full_n() {
    Block_arrayctor_loop_U0_start_full_n = ap_const_logic_0;
}

void axi_algorithm::thread_Block_arrayctor_loop_U0_start_write() {
    Block_arrayctor_loop_U0_start_write = ap_const_logic_0;
}

void axi_algorithm::thread_ap_channel_done_dato() {
    ap_channel_done_dato = read_data_U0_ap_done.read();
}

void axi_algorithm::thread_ap_channel_done_dedo0_0_V() {
    ap_channel_done_dedo0_0_V = (Block_arrayctor_loop_U0_ap_done.read() & (ap_sync_reg_channel_write_dedo0_0_V.read() ^ 
  ap_const_logic_1));
}

void axi_algorithm::thread_ap_channel_done_dedo1_0_V() {
    ap_channel_done_dedo1_0_V = (Block_arrayctor_loop_U0_ap_done.read() & (ap_sync_reg_channel_write_dedo1_0_V.read() ^ 
  ap_const_logic_1));
}

void axi_algorithm::thread_ap_channel_done_palma0_0_V() {
    ap_channel_done_palma0_0_V = (Block_arrayctor_loop_U0_ap_done.read() & (ap_sync_reg_channel_write_palma0_0_V.read() ^ 
  ap_const_logic_1));
}

void axi_algorithm::thread_ap_channel_done_palma1_0_V() {
    ap_channel_done_palma1_0_V = (Block_arrayctor_loop_U0_ap_done.read() & (ap_sync_reg_channel_write_palma1_0_V.read() ^ 
  ap_const_logic_1));
}

void axi_algorithm::thread_ap_rst_n_inv() {
    ap_rst_n_inv =  (sc_logic) (~ap_rst_n.read());
}

void axi_algorithm::thread_ap_sync_channel_write_dedo0_0_V() {
    ap_sync_channel_write_dedo0_0_V = ((ap_channel_done_dedo0_0_V.read() & 
  dedo0_0_V_full_n.read()) | ap_sync_reg_channel_write_dedo0_0_V.read());
}

void axi_algorithm::thread_ap_sync_channel_write_dedo1_0_V() {
    ap_sync_channel_write_dedo1_0_V = ((ap_channel_done_dedo1_0_V.read() & 
  dedo1_0_V_full_n.read()) | ap_sync_reg_channel_write_dedo1_0_V.read());
}

void axi_algorithm::thread_ap_sync_channel_write_palma0_0_V() {
    ap_sync_channel_write_palma0_0_V = ((ap_channel_done_palma0_0_V.read() & 
  palma0_0_V_full_n.read()) | ap_sync_reg_channel_write_palma0_0_V.read());
}

void axi_algorithm::thread_ap_sync_channel_write_palma1_0_V() {
    ap_sync_channel_write_palma1_0_V = ((ap_channel_done_palma1_0_V.read() & 
  palma1_0_V_full_n.read()) | ap_sync_reg_channel_write_palma1_0_V.read());
}

void axi_algorithm::thread_ap_sync_continue() {
    ap_sync_continue = ap_const_logic_0;
}

void axi_algorithm::thread_dato_t_d1() {
    dato_t_d1 = ap_const_lv32_0;
}

void axi_algorithm::thread_dato_t_we1() {
    dato_t_we1 = ap_const_logic_0;
}

void axi_algorithm::thread_input_AX_ALG_TREADY() {
    input_AX_ALG_TREADY = read_data_U0_input_AX_ALG_TREADY.read();
}

void axi_algorithm::thread_output_AX_ALGdedo0_TDATA() {
    output_AX_ALGdedo0_TDATA = write_data21_U0_output_AX_ALGdedo0_TDATA.read();
}

void axi_algorithm::thread_output_AX_ALGdedo0_TDEST() {
    output_AX_ALGdedo0_TDEST = write_data21_U0_output_AX_ALGdedo0_TDEST.read();
}

void axi_algorithm::thread_output_AX_ALGdedo0_TID() {
    output_AX_ALGdedo0_TID = write_data21_U0_output_AX_ALGdedo0_TID.read();
}

void axi_algorithm::thread_output_AX_ALGdedo0_TKEEP() {
    output_AX_ALGdedo0_TKEEP = write_data21_U0_output_AX_ALGdedo0_TKEEP.read();
}

void axi_algorithm::thread_output_AX_ALGdedo0_TLAST() {
    output_AX_ALGdedo0_TLAST = write_data21_U0_output_AX_ALGdedo0_TLAST.read();
}

void axi_algorithm::thread_output_AX_ALGdedo0_TSTRB() {
    output_AX_ALGdedo0_TSTRB = write_data21_U0_output_AX_ALGdedo0_TSTRB.read();
}

void axi_algorithm::thread_output_AX_ALGdedo0_TUSER() {
    output_AX_ALGdedo0_TUSER = write_data21_U0_output_AX_ALGdedo0_TUSER.read();
}

void axi_algorithm::thread_output_AX_ALGdedo0_TVALID() {
    output_AX_ALGdedo0_TVALID = write_data21_U0_output_AX_ALGdedo0_TVALID.read();
}

void axi_algorithm::thread_output_AX_ALGdedo1_TDATA() {
    output_AX_ALGdedo1_TDATA = write_data23_U0_output_AX_ALGdedo1_TDATA.read();
}

void axi_algorithm::thread_output_AX_ALGdedo1_TDEST() {
    output_AX_ALGdedo1_TDEST = write_data23_U0_output_AX_ALGdedo1_TDEST.read();
}

void axi_algorithm::thread_output_AX_ALGdedo1_TID() {
    output_AX_ALGdedo1_TID = write_data23_U0_output_AX_ALGdedo1_TID.read();
}

void axi_algorithm::thread_output_AX_ALGdedo1_TKEEP() {
    output_AX_ALGdedo1_TKEEP = write_data23_U0_output_AX_ALGdedo1_TKEEP.read();
}

void axi_algorithm::thread_output_AX_ALGdedo1_TLAST() {
    output_AX_ALGdedo1_TLAST = write_data23_U0_output_AX_ALGdedo1_TLAST.read();
}

void axi_algorithm::thread_output_AX_ALGdedo1_TSTRB() {
    output_AX_ALGdedo1_TSTRB = write_data23_U0_output_AX_ALGdedo1_TSTRB.read();
}

void axi_algorithm::thread_output_AX_ALGdedo1_TUSER() {
    output_AX_ALGdedo1_TUSER = write_data23_U0_output_AX_ALGdedo1_TUSER.read();
}

void axi_algorithm::thread_output_AX_ALGdedo1_TVALID() {
    output_AX_ALGdedo1_TVALID = write_data23_U0_output_AX_ALGdedo1_TVALID.read();
}

void axi_algorithm::thread_output_AX_ALGpalma0_TDATA() {
    output_AX_ALGpalma0_TDATA = write_data22_U0_output_AX_ALGpalma0_TDATA.read();
}

void axi_algorithm::thread_output_AX_ALGpalma0_TDEST() {
    output_AX_ALGpalma0_TDEST = write_data22_U0_output_AX_ALGpalma0_TDEST.read();
}

void axi_algorithm::thread_output_AX_ALGpalma0_TID() {
    output_AX_ALGpalma0_TID = write_data22_U0_output_AX_ALGpalma0_TID.read();
}

void axi_algorithm::thread_output_AX_ALGpalma0_TKEEP() {
    output_AX_ALGpalma0_TKEEP = write_data22_U0_output_AX_ALGpalma0_TKEEP.read();
}

void axi_algorithm::thread_output_AX_ALGpalma0_TLAST() {
    output_AX_ALGpalma0_TLAST = write_data22_U0_output_AX_ALGpalma0_TLAST.read();
}

void axi_algorithm::thread_output_AX_ALGpalma0_TSTRB() {
    output_AX_ALGpalma0_TSTRB = write_data22_U0_output_AX_ALGpalma0_TSTRB.read();
}

void axi_algorithm::thread_output_AX_ALGpalma0_TUSER() {
    output_AX_ALGpalma0_TUSER = write_data22_U0_output_AX_ALGpalma0_TUSER.read();
}

void axi_algorithm::thread_output_AX_ALGpalma0_TVALID() {
    output_AX_ALGpalma0_TVALID = write_data22_U0_output_AX_ALGpalma0_TVALID.read();
}

void axi_algorithm::thread_output_AX_ALGpalma1_TDATA() {
    output_AX_ALGpalma1_TDATA = write_data_U0_output_AX_ALGpalma1_TDATA.read();
}

void axi_algorithm::thread_output_AX_ALGpalma1_TDEST() {
    output_AX_ALGpalma1_TDEST = write_data_U0_output_AX_ALGpalma1_TDEST.read();
}

void axi_algorithm::thread_output_AX_ALGpalma1_TID() {
    output_AX_ALGpalma1_TID = write_data_U0_output_AX_ALGpalma1_TID.read();
}

void axi_algorithm::thread_output_AX_ALGpalma1_TKEEP() {
    output_AX_ALGpalma1_TKEEP = write_data_U0_output_AX_ALGpalma1_TKEEP.read();
}

void axi_algorithm::thread_output_AX_ALGpalma1_TLAST() {
    output_AX_ALGpalma1_TLAST = write_data_U0_output_AX_ALGpalma1_TLAST.read();
}

void axi_algorithm::thread_output_AX_ALGpalma1_TSTRB() {
    output_AX_ALGpalma1_TSTRB = write_data_U0_output_AX_ALGpalma1_TSTRB.read();
}

void axi_algorithm::thread_output_AX_ALGpalma1_TUSER() {
    output_AX_ALGpalma1_TUSER = write_data_U0_output_AX_ALGpalma1_TUSER.read();
}

void axi_algorithm::thread_output_AX_ALGpalma1_TVALID() {
    output_AX_ALGpalma1_TVALID = write_data_U0_output_AX_ALGpalma1_TVALID.read();
}

void axi_algorithm::thread_read_data_U0_ap_continue() {
    read_data_U0_ap_continue = dato_i_full_n.read();
}

void axi_algorithm::thread_read_data_U0_ap_start() {
    read_data_U0_ap_start = ap_const_logic_1;
}

void axi_algorithm::thread_read_data_U0_buf_V_full_n() {
    read_data_U0_buf_V_full_n = dato_i_full_n.read();
}

void axi_algorithm::thread_read_data_U0_start_full_n() {
    read_data_U0_start_full_n = ap_const_logic_0;
}

void axi_algorithm::thread_read_data_U0_start_write() {
    read_data_U0_start_write = ap_const_logic_0;
}

void axi_algorithm::thread_write_data21_U0_ap_continue() {
    write_data21_U0_ap_continue = ap_const_logic_1;
}

void axi_algorithm::thread_write_data21_U0_ap_start() {
    write_data21_U0_ap_start = dedo0_0_V_empty_n.read();
}

void axi_algorithm::thread_write_data21_U0_start_full_n() {
    write_data21_U0_start_full_n = ap_const_logic_0;
}

void axi_algorithm::thread_write_data21_U0_start_write() {
    write_data21_U0_start_write = ap_const_logic_0;
}

void axi_algorithm::thread_write_data22_U0_ap_continue() {
    write_data22_U0_ap_continue = ap_const_logic_1;
}

void axi_algorithm::thread_write_data22_U0_ap_start() {
    write_data22_U0_ap_start = palma0_0_V_empty_n.read();
}

void axi_algorithm::thread_write_data22_U0_start_full_n() {
    write_data22_U0_start_full_n = ap_const_logic_0;
}

void axi_algorithm::thread_write_data22_U0_start_write() {
    write_data22_U0_start_write = ap_const_logic_0;
}

void axi_algorithm::thread_write_data23_U0_ap_continue() {
    write_data23_U0_ap_continue = ap_const_logic_1;
}

void axi_algorithm::thread_write_data23_U0_ap_start() {
    write_data23_U0_ap_start = dedo1_0_V_empty_n.read();
}

void axi_algorithm::thread_write_data23_U0_start_full_n() {
    write_data23_U0_start_full_n = ap_const_logic_0;
}

void axi_algorithm::thread_write_data23_U0_start_write() {
    write_data23_U0_start_write = ap_const_logic_0;
}

void axi_algorithm::thread_write_data_U0_ap_continue() {
    write_data_U0_ap_continue = ap_const_logic_1;
}

void axi_algorithm::thread_write_data_U0_ap_start() {
    write_data_U0_ap_start = palma1_0_V_empty_n.read();
}

void axi_algorithm::thread_write_data_U0_start_full_n() {
    write_data_U0_start_full_n = ap_const_logic_0;
}

void axi_algorithm::thread_write_data_U0_start_write() {
    write_data_U0_start_write = ap_const_logic_0;
}

void axi_algorithm::thread_hdltv_gen() {
    const char* dump_tv = std::getenv("AP_WRITE_TV");
    if (!(dump_tv && string(dump_tv) == "on")) return;

    wait();

    mHdltvinHandle << "[ " << endl;
    mHdltvoutHandle << "[ " << endl;
    int ap_cycleNo = 0;
    while (1) {
        wait();
        const char* mComma = ap_cycleNo == 0 ? " " : ", " ;
        mHdltvinHandle << mComma << "{"  <<  " \"ap_rst_n\" :  \"" << ap_rst_n.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"input_AX_ALG_TDATA\" :  \"" << input_AX_ALG_TDATA.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"input_AX_ALG_TKEEP\" :  \"" << input_AX_ALG_TKEEP.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"input_AX_ALG_TSTRB\" :  \"" << input_AX_ALG_TSTRB.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"input_AX_ALG_TUSER\" :  \"" << input_AX_ALG_TUSER.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"input_AX_ALG_TLAST\" :  \"" << input_AX_ALG_TLAST.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"input_AX_ALG_TID\" :  \"" << input_AX_ALG_TID.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"input_AX_ALG_TDEST\" :  \"" << input_AX_ALG_TDEST.read() << "\" ";
        mHdltvoutHandle << mComma << "{"  <<  " \"output_AX_ALGdedo0_TDATA\" :  \"" << output_AX_ALGdedo0_TDATA.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"output_AX_ALGdedo0_TKEEP\" :  \"" << output_AX_ALGdedo0_TKEEP.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"output_AX_ALGdedo0_TSTRB\" :  \"" << output_AX_ALGdedo0_TSTRB.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"output_AX_ALGdedo0_TUSER\" :  \"" << output_AX_ALGdedo0_TUSER.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"output_AX_ALGdedo0_TLAST\" :  \"" << output_AX_ALGdedo0_TLAST.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"output_AX_ALGdedo0_TID\" :  \"" << output_AX_ALGdedo0_TID.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"output_AX_ALGdedo0_TDEST\" :  \"" << output_AX_ALGdedo0_TDEST.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"output_AX_ALGpalma0_TDATA\" :  \"" << output_AX_ALGpalma0_TDATA.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"output_AX_ALGpalma0_TKEEP\" :  \"" << output_AX_ALGpalma0_TKEEP.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"output_AX_ALGpalma0_TSTRB\" :  \"" << output_AX_ALGpalma0_TSTRB.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"output_AX_ALGpalma0_TUSER\" :  \"" << output_AX_ALGpalma0_TUSER.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"output_AX_ALGpalma0_TLAST\" :  \"" << output_AX_ALGpalma0_TLAST.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"output_AX_ALGpalma0_TID\" :  \"" << output_AX_ALGpalma0_TID.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"output_AX_ALGpalma0_TDEST\" :  \"" << output_AX_ALGpalma0_TDEST.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"output_AX_ALGdedo1_TDATA\" :  \"" << output_AX_ALGdedo1_TDATA.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"output_AX_ALGdedo1_TKEEP\" :  \"" << output_AX_ALGdedo1_TKEEP.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"output_AX_ALGdedo1_TSTRB\" :  \"" << output_AX_ALGdedo1_TSTRB.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"output_AX_ALGdedo1_TUSER\" :  \"" << output_AX_ALGdedo1_TUSER.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"output_AX_ALGdedo1_TLAST\" :  \"" << output_AX_ALGdedo1_TLAST.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"output_AX_ALGdedo1_TID\" :  \"" << output_AX_ALGdedo1_TID.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"output_AX_ALGdedo1_TDEST\" :  \"" << output_AX_ALGdedo1_TDEST.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"output_AX_ALGpalma1_TDATA\" :  \"" << output_AX_ALGpalma1_TDATA.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"output_AX_ALGpalma1_TKEEP\" :  \"" << output_AX_ALGpalma1_TKEEP.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"output_AX_ALGpalma1_TSTRB\" :  \"" << output_AX_ALGpalma1_TSTRB.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"output_AX_ALGpalma1_TUSER\" :  \"" << output_AX_ALGpalma1_TUSER.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"output_AX_ALGpalma1_TLAST\" :  \"" << output_AX_ALGpalma1_TLAST.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"output_AX_ALGpalma1_TID\" :  \"" << output_AX_ALGpalma1_TID.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"output_AX_ALGpalma1_TDEST\" :  \"" << output_AX_ALGpalma1_TDEST.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"input_AX_ALG_TVALID\" :  \"" << input_AX_ALG_TVALID.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"input_AX_ALG_TREADY\" :  \"" << input_AX_ALG_TREADY.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"output_AX_ALGdedo0_TVALID\" :  \"" << output_AX_ALGdedo0_TVALID.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"output_AX_ALGdedo0_TREADY\" :  \"" << output_AX_ALGdedo0_TREADY.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"output_AX_ALGpalma0_TVALID\" :  \"" << output_AX_ALGpalma0_TVALID.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"output_AX_ALGpalma0_TREADY\" :  \"" << output_AX_ALGpalma0_TREADY.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"output_AX_ALGdedo1_TVALID\" :  \"" << output_AX_ALGdedo1_TVALID.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"output_AX_ALGdedo1_TREADY\" :  \"" << output_AX_ALGdedo1_TREADY.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"output_AX_ALGpalma1_TVALID\" :  \"" << output_AX_ALGpalma1_TVALID.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"output_AX_ALGpalma1_TREADY\" :  \"" << output_AX_ALGpalma1_TREADY.read() << "\" ";
        mHdltvinHandle << "}" << std::endl;
        mHdltvoutHandle << "}" << std::endl;
        ap_cycleNo++;
    }
}

}

