// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2017.1
// Copyright (C) 1986-2017 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _axi_algorithm_HH_
#define _axi_algorithm_HH_

#include "systemc.h"
#include "AESL_pkg.h"

#include "read_data.h"
#include "Block_arrayctor_loop.h"
#include "write_data21.h"
#include "write_data22.h"
#include "write_data23.h"
#include "write_data.h"
#include "axi_algorithm_dato.h"
#include "fifo_w32_d2_A.h"

namespace ap_rtl {

struct axi_algorithm : public sc_module {
    // Port declarations 47
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst_n;
    sc_in< sc_lv<32> > input_AX_ALG_TDATA;
    sc_in< sc_lv<4> > input_AX_ALG_TKEEP;
    sc_in< sc_lv<4> > input_AX_ALG_TSTRB;
    sc_in< sc_lv<4> > input_AX_ALG_TUSER;
    sc_in< sc_lv<1> > input_AX_ALG_TLAST;
    sc_in< sc_lv<5> > input_AX_ALG_TID;
    sc_in< sc_lv<5> > input_AX_ALG_TDEST;
    sc_out< sc_lv<32> > output_AX_ALGdedo0_TDATA;
    sc_out< sc_lv<4> > output_AX_ALGdedo0_TKEEP;
    sc_out< sc_lv<4> > output_AX_ALGdedo0_TSTRB;
    sc_out< sc_lv<4> > output_AX_ALGdedo0_TUSER;
    sc_out< sc_lv<1> > output_AX_ALGdedo0_TLAST;
    sc_out< sc_lv<5> > output_AX_ALGdedo0_TID;
    sc_out< sc_lv<5> > output_AX_ALGdedo0_TDEST;
    sc_out< sc_lv<32> > output_AX_ALGpalma0_TDATA;
    sc_out< sc_lv<4> > output_AX_ALGpalma0_TKEEP;
    sc_out< sc_lv<4> > output_AX_ALGpalma0_TSTRB;
    sc_out< sc_lv<4> > output_AX_ALGpalma0_TUSER;
    sc_out< sc_lv<1> > output_AX_ALGpalma0_TLAST;
    sc_out< sc_lv<5> > output_AX_ALGpalma0_TID;
    sc_out< sc_lv<5> > output_AX_ALGpalma0_TDEST;
    sc_out< sc_lv<32> > output_AX_ALGdedo1_TDATA;
    sc_out< sc_lv<4> > output_AX_ALGdedo1_TKEEP;
    sc_out< sc_lv<4> > output_AX_ALGdedo1_TSTRB;
    sc_out< sc_lv<4> > output_AX_ALGdedo1_TUSER;
    sc_out< sc_lv<1> > output_AX_ALGdedo1_TLAST;
    sc_out< sc_lv<5> > output_AX_ALGdedo1_TID;
    sc_out< sc_lv<5> > output_AX_ALGdedo1_TDEST;
    sc_out< sc_lv<32> > output_AX_ALGpalma1_TDATA;
    sc_out< sc_lv<4> > output_AX_ALGpalma1_TKEEP;
    sc_out< sc_lv<4> > output_AX_ALGpalma1_TSTRB;
    sc_out< sc_lv<4> > output_AX_ALGpalma1_TUSER;
    sc_out< sc_lv<1> > output_AX_ALGpalma1_TLAST;
    sc_out< sc_lv<5> > output_AX_ALGpalma1_TID;
    sc_out< sc_lv<5> > output_AX_ALGpalma1_TDEST;
    sc_in< sc_logic > input_AX_ALG_TVALID;
    sc_out< sc_logic > input_AX_ALG_TREADY;
    sc_out< sc_logic > output_AX_ALGdedo0_TVALID;
    sc_in< sc_logic > output_AX_ALGdedo0_TREADY;
    sc_out< sc_logic > output_AX_ALGpalma0_TVALID;
    sc_in< sc_logic > output_AX_ALGpalma0_TREADY;
    sc_out< sc_logic > output_AX_ALGdedo1_TVALID;
    sc_in< sc_logic > output_AX_ALGdedo1_TREADY;
    sc_out< sc_logic > output_AX_ALGpalma1_TVALID;
    sc_in< sc_logic > output_AX_ALGpalma1_TREADY;
    sc_signal< sc_logic > ap_var_for_const3;
    sc_signal< sc_lv<32> > ap_var_for_const2;
    sc_signal< sc_logic > ap_var_for_const1;
    sc_signal< sc_lv<2> > ap_var_for_const0;


    // Module declarations
    axi_algorithm(sc_module_name name);
    SC_HAS_PROCESS(axi_algorithm);

    ~axi_algorithm();

    sc_trace_file* mVcdFile;

    ofstream mHdltvinHandle;
    ofstream mHdltvoutHandle;
    axi_algorithm_dato* dato_U;
    read_data* read_data_U0;
    Block_arrayctor_loop* Block_arrayctor_loop_U0;
    write_data21* write_data21_U0;
    write_data22* write_data22_U0;
    write_data23* write_data23_U0;
    write_data* write_data_U0;
    fifo_w32_d2_A* dedo0_0_V_U;
    fifo_w32_d2_A* palma0_0_V_U;
    fifo_w32_d2_A* dedo1_0_V_U;
    fifo_w32_d2_A* palma1_0_V_U;
    sc_signal< sc_logic > ap_rst_n_inv;
    sc_signal< sc_lv<32> > dato_i_q0;
    sc_signal< sc_lv<32> > dato_i_q1;
    sc_signal< sc_lv<32> > dato_t_q0;
    sc_signal< sc_lv<32> > dato_t_q1;
    sc_signal< sc_logic > read_data_U0_ap_start;
    sc_signal< sc_logic > read_data_U0_ap_done;
    sc_signal< sc_logic > read_data_U0_ap_continue;
    sc_signal< sc_logic > read_data_U0_ap_idle;
    sc_signal< sc_logic > read_data_U0_ap_ready;
    sc_signal< sc_logic > read_data_U0_input_AX_ALG_TREADY;
    sc_signal< sc_lv<2> > read_data_U0_buf_V_address0;
    sc_signal< sc_logic > read_data_U0_buf_V_ce0;
    sc_signal< sc_logic > read_data_U0_buf_V_we0;
    sc_signal< sc_lv<32> > read_data_U0_buf_V_d0;
    sc_signal< sc_logic > ap_channel_done_dato;
    sc_signal< sc_logic > read_data_U0_buf_V_full_n;
    sc_signal< sc_logic > Block_arrayctor_loop_U0_ap_start;
    sc_signal< sc_logic > Block_arrayctor_loop_U0_ap_done;
    sc_signal< sc_logic > Block_arrayctor_loop_U0_ap_continue;
    sc_signal< sc_logic > Block_arrayctor_loop_U0_ap_idle;
    sc_signal< sc_logic > Block_arrayctor_loop_U0_ap_ready;
    sc_signal< sc_lv<2> > Block_arrayctor_loop_U0_dato_address0;
    sc_signal< sc_logic > Block_arrayctor_loop_U0_dato_ce0;
    sc_signal< sc_lv<2> > Block_arrayctor_loop_U0_dato_address1;
    sc_signal< sc_logic > Block_arrayctor_loop_U0_dato_ce1;
    sc_signal< sc_lv<32> > Block_arrayctor_loop_U0_ap_return_0;
    sc_signal< sc_lv<32> > Block_arrayctor_loop_U0_ap_return_1;
    sc_signal< sc_lv<32> > Block_arrayctor_loop_U0_ap_return_2;
    sc_signal< sc_lv<32> > Block_arrayctor_loop_U0_ap_return_3;
    sc_signal< sc_logic > ap_channel_done_palma1_0_V;
    sc_signal< sc_logic > palma1_0_V_full_n;
    sc_signal< sc_logic > ap_sync_reg_channel_write_palma1_0_V;
    sc_signal< sc_logic > ap_sync_channel_write_palma1_0_V;
    sc_signal< sc_logic > ap_channel_done_dedo1_0_V;
    sc_signal< sc_logic > dedo1_0_V_full_n;
    sc_signal< sc_logic > ap_sync_reg_channel_write_dedo1_0_V;
    sc_signal< sc_logic > ap_sync_channel_write_dedo1_0_V;
    sc_signal< sc_logic > ap_channel_done_palma0_0_V;
    sc_signal< sc_logic > palma0_0_V_full_n;
    sc_signal< sc_logic > ap_sync_reg_channel_write_palma0_0_V;
    sc_signal< sc_logic > ap_sync_channel_write_palma0_0_V;
    sc_signal< sc_logic > ap_channel_done_dedo0_0_V;
    sc_signal< sc_logic > dedo0_0_V_full_n;
    sc_signal< sc_logic > ap_sync_reg_channel_write_dedo0_0_V;
    sc_signal< sc_logic > ap_sync_channel_write_dedo0_0_V;
    sc_signal< sc_logic > write_data21_U0_ap_start;
    sc_signal< sc_logic > write_data21_U0_ap_done;
    sc_signal< sc_logic > write_data21_U0_ap_continue;
    sc_signal< sc_logic > write_data21_U0_ap_idle;
    sc_signal< sc_logic > write_data21_U0_ap_ready;
    sc_signal< sc_lv<32> > write_data21_U0_output_AX_ALGdedo0_TDATA;
    sc_signal< sc_logic > write_data21_U0_output_AX_ALGdedo0_TVALID;
    sc_signal< sc_lv<4> > write_data21_U0_output_AX_ALGdedo0_TKEEP;
    sc_signal< sc_lv<4> > write_data21_U0_output_AX_ALGdedo0_TSTRB;
    sc_signal< sc_lv<4> > write_data21_U0_output_AX_ALGdedo0_TUSER;
    sc_signal< sc_lv<1> > write_data21_U0_output_AX_ALGdedo0_TLAST;
    sc_signal< sc_lv<5> > write_data21_U0_output_AX_ALGdedo0_TID;
    sc_signal< sc_lv<5> > write_data21_U0_output_AX_ALGdedo0_TDEST;
    sc_signal< sc_logic > ap_sync_continue;
    sc_signal< sc_logic > write_data22_U0_ap_start;
    sc_signal< sc_logic > write_data22_U0_ap_done;
    sc_signal< sc_logic > write_data22_U0_ap_continue;
    sc_signal< sc_logic > write_data22_U0_ap_idle;
    sc_signal< sc_logic > write_data22_U0_ap_ready;
    sc_signal< sc_lv<32> > write_data22_U0_output_AX_ALGpalma0_TDATA;
    sc_signal< sc_logic > write_data22_U0_output_AX_ALGpalma0_TVALID;
    sc_signal< sc_lv<4> > write_data22_U0_output_AX_ALGpalma0_TKEEP;
    sc_signal< sc_lv<4> > write_data22_U0_output_AX_ALGpalma0_TSTRB;
    sc_signal< sc_lv<4> > write_data22_U0_output_AX_ALGpalma0_TUSER;
    sc_signal< sc_lv<1> > write_data22_U0_output_AX_ALGpalma0_TLAST;
    sc_signal< sc_lv<5> > write_data22_U0_output_AX_ALGpalma0_TID;
    sc_signal< sc_lv<5> > write_data22_U0_output_AX_ALGpalma0_TDEST;
    sc_signal< sc_logic > write_data23_U0_ap_start;
    sc_signal< sc_logic > write_data23_U0_ap_done;
    sc_signal< sc_logic > write_data23_U0_ap_continue;
    sc_signal< sc_logic > write_data23_U0_ap_idle;
    sc_signal< sc_logic > write_data23_U0_ap_ready;
    sc_signal< sc_lv<32> > write_data23_U0_output_AX_ALGdedo1_TDATA;
    sc_signal< sc_logic > write_data23_U0_output_AX_ALGdedo1_TVALID;
    sc_signal< sc_lv<4> > write_data23_U0_output_AX_ALGdedo1_TKEEP;
    sc_signal< sc_lv<4> > write_data23_U0_output_AX_ALGdedo1_TSTRB;
    sc_signal< sc_lv<4> > write_data23_U0_output_AX_ALGdedo1_TUSER;
    sc_signal< sc_lv<1> > write_data23_U0_output_AX_ALGdedo1_TLAST;
    sc_signal< sc_lv<5> > write_data23_U0_output_AX_ALGdedo1_TID;
    sc_signal< sc_lv<5> > write_data23_U0_output_AX_ALGdedo1_TDEST;
    sc_signal< sc_logic > write_data_U0_ap_start;
    sc_signal< sc_logic > write_data_U0_ap_done;
    sc_signal< sc_logic > write_data_U0_ap_continue;
    sc_signal< sc_logic > write_data_U0_ap_idle;
    sc_signal< sc_logic > write_data_U0_ap_ready;
    sc_signal< sc_lv<32> > write_data_U0_output_AX_ALGpalma1_TDATA;
    sc_signal< sc_logic > write_data_U0_output_AX_ALGpalma1_TVALID;
    sc_signal< sc_lv<4> > write_data_U0_output_AX_ALGpalma1_TKEEP;
    sc_signal< sc_lv<4> > write_data_U0_output_AX_ALGpalma1_TSTRB;
    sc_signal< sc_lv<4> > write_data_U0_output_AX_ALGpalma1_TUSER;
    sc_signal< sc_lv<1> > write_data_U0_output_AX_ALGpalma1_TLAST;
    sc_signal< sc_lv<5> > write_data_U0_output_AX_ALGpalma1_TID;
    sc_signal< sc_lv<5> > write_data_U0_output_AX_ALGpalma1_TDEST;
    sc_signal< sc_logic > dato_i_full_n;
    sc_signal< sc_logic > dato_t_empty_n;
    sc_signal< sc_lv<32> > dato_t_d1;
    sc_signal< sc_logic > dato_t_we1;
    sc_signal< sc_lv<32> > dedo0_0_V_dout;
    sc_signal< sc_logic > dedo0_0_V_empty_n;
    sc_signal< sc_lv<32> > palma0_0_V_dout;
    sc_signal< sc_logic > palma0_0_V_empty_n;
    sc_signal< sc_lv<32> > dedo1_0_V_dout;
    sc_signal< sc_logic > dedo1_0_V_empty_n;
    sc_signal< sc_lv<32> > palma1_0_V_dout;
    sc_signal< sc_logic > palma1_0_V_empty_n;
    sc_signal< sc_logic > read_data_U0_start_full_n;
    sc_signal< sc_logic > read_data_U0_start_write;
    sc_signal< sc_logic > Block_arrayctor_loop_U0_start_full_n;
    sc_signal< sc_logic > Block_arrayctor_loop_U0_start_write;
    sc_signal< sc_logic > write_data21_U0_start_full_n;
    sc_signal< sc_logic > write_data21_U0_start_write;
    sc_signal< sc_logic > write_data22_U0_start_full_n;
    sc_signal< sc_logic > write_data22_U0_start_write;
    sc_signal< sc_logic > write_data23_U0_start_full_n;
    sc_signal< sc_logic > write_data23_U0_start_write;
    sc_signal< sc_logic > write_data_U0_start_full_n;
    sc_signal< sc_logic > write_data_U0_start_write;
    static const sc_logic ap_const_logic_1;
    static const sc_lv<32> ap_const_lv32_0;
    static const sc_lv<4> ap_const_lv4_0;
    static const sc_lv<1> ap_const_lv1_0;
    static const sc_lv<5> ap_const_lv5_0;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<2> ap_const_lv2_0;
    static const sc_lv<2> ap_const_lv2_1;
    static const bool ap_const_boolean_1;
    // Thread declarations
    void thread_ap_var_for_const3();
    void thread_ap_var_for_const2();
    void thread_ap_var_for_const1();
    void thread_ap_var_for_const0();
    void thread_ap_clk_no_reset_();
    void thread_Block_arrayctor_loop_U0_ap_continue();
    void thread_Block_arrayctor_loop_U0_ap_start();
    void thread_Block_arrayctor_loop_U0_start_full_n();
    void thread_Block_arrayctor_loop_U0_start_write();
    void thread_ap_channel_done_dato();
    void thread_ap_channel_done_dedo0_0_V();
    void thread_ap_channel_done_dedo1_0_V();
    void thread_ap_channel_done_palma0_0_V();
    void thread_ap_channel_done_palma1_0_V();
    void thread_ap_rst_n_inv();
    void thread_ap_sync_channel_write_dedo0_0_V();
    void thread_ap_sync_channel_write_dedo1_0_V();
    void thread_ap_sync_channel_write_palma0_0_V();
    void thread_ap_sync_channel_write_palma1_0_V();
    void thread_ap_sync_continue();
    void thread_dato_t_d1();
    void thread_dato_t_we1();
    void thread_input_AX_ALG_TREADY();
    void thread_output_AX_ALGdedo0_TDATA();
    void thread_output_AX_ALGdedo0_TDEST();
    void thread_output_AX_ALGdedo0_TID();
    void thread_output_AX_ALGdedo0_TKEEP();
    void thread_output_AX_ALGdedo0_TLAST();
    void thread_output_AX_ALGdedo0_TSTRB();
    void thread_output_AX_ALGdedo0_TUSER();
    void thread_output_AX_ALGdedo0_TVALID();
    void thread_output_AX_ALGdedo1_TDATA();
    void thread_output_AX_ALGdedo1_TDEST();
    void thread_output_AX_ALGdedo1_TID();
    void thread_output_AX_ALGdedo1_TKEEP();
    void thread_output_AX_ALGdedo1_TLAST();
    void thread_output_AX_ALGdedo1_TSTRB();
    void thread_output_AX_ALGdedo1_TUSER();
    void thread_output_AX_ALGdedo1_TVALID();
    void thread_output_AX_ALGpalma0_TDATA();
    void thread_output_AX_ALGpalma0_TDEST();
    void thread_output_AX_ALGpalma0_TID();
    void thread_output_AX_ALGpalma0_TKEEP();
    void thread_output_AX_ALGpalma0_TLAST();
    void thread_output_AX_ALGpalma0_TSTRB();
    void thread_output_AX_ALGpalma0_TUSER();
    void thread_output_AX_ALGpalma0_TVALID();
    void thread_output_AX_ALGpalma1_TDATA();
    void thread_output_AX_ALGpalma1_TDEST();
    void thread_output_AX_ALGpalma1_TID();
    void thread_output_AX_ALGpalma1_TKEEP();
    void thread_output_AX_ALGpalma1_TLAST();
    void thread_output_AX_ALGpalma1_TSTRB();
    void thread_output_AX_ALGpalma1_TUSER();
    void thread_output_AX_ALGpalma1_TVALID();
    void thread_read_data_U0_ap_continue();
    void thread_read_data_U0_ap_start();
    void thread_read_data_U0_buf_V_full_n();
    void thread_read_data_U0_start_full_n();
    void thread_read_data_U0_start_write();
    void thread_write_data21_U0_ap_continue();
    void thread_write_data21_U0_ap_start();
    void thread_write_data21_U0_start_full_n();
    void thread_write_data21_U0_start_write();
    void thread_write_data22_U0_ap_continue();
    void thread_write_data22_U0_ap_start();
    void thread_write_data22_U0_start_full_n();
    void thread_write_data22_U0_start_write();
    void thread_write_data23_U0_ap_continue();
    void thread_write_data23_U0_ap_start();
    void thread_write_data23_U0_start_full_n();
    void thread_write_data23_U0_start_write();
    void thread_write_data_U0_ap_continue();
    void thread_write_data_U0_ap_start();
    void thread_write_data_U0_start_full_n();
    void thread_write_data_U0_start_write();
    void thread_hdltv_gen();
};

}

using namespace ap_rtl;

#endif
